
			             OSI参考模型(七层框架)

          [5] 应用层        |<----------协议--------->|	        应用层     (计算机) APDU [是应用层协议数据单元]
                HTTP  FTP  TFTP  SMTP  SNMP  DNS
                    上层数据
6  接口      
             表示层         |-----------协议-----------|         表示层              PPDU [是表示层协议数据单元]
5  接口
 	     会话层         |-----------协议-----------|         会话层              SPDU [是会话层协议数据单元]
4  接口      
      	  [4] 传输层        <----------协议--------->         传输层     (防火墙) TPDU [是传输层协议数据单元,即 segment "数据段"]
                TCP      UDP
                TCP头部     上层数据
3  接口
       	  [3] 网络层        <----------协议--------->         网络层     (路由器)  package 数据包
                ICMP  IGMP    IP   ARP   RARP
                IP头部   TCP头部     上层数据
2  接口
          [2] 数据链路层    <----------协议--------->         数据链路层 (交换机)  frame  数据帧
                MAC头部  IP头部   TCP头部   上层数据
1  接口   
          [1] 物理层	    <----------协议--------->	        物理层     (网卡)    bit   比特流

          层            主机A                              主机B          数据单元
-----------------------------------------------------------------------------------------------------------------------------------------------
APDU 是应用层协议数据单元
报文，message，一般指完整的信息，传输层实现报文交付。我们将位于应用层的信息分组称为报文。
frame，Datagram，segment是基于所在协议层不同而取了不同的名字

PPDU 是表示层协议数据单元
SPDU 是会话层协议数据单元
TPDU 是传输层协议数据单元，即 "数据段”
传输层 segment（报文段）
报文段，segment，组成报文的每个分组。我们将传输层分组称为报文段。
抓包抓到的是传输层的包，所以packet，frame，Datagram，segment是存在于同条记录中的

网络层的协议数据单元，即 "数据包”
网络层 packet （数据包）

数据链路层的协议数据单元，即 "数据帧”
数据链路层 frame（数据帧）
帧，frame，数据链路层的协议数据单元。我们将链路层分组称为帧。

物理层的协议数据单元，即 数据“比特”
物理层 bit （比特）

1.报文(message)
报文是网络中交换与传输的数据单元，也是网络传输的单元。
报文包含了将要发送的完整的数据信息，其长短不需一致。
报文在传输过程中会不断地封装成分组、包、帧来传输，
封装的方式就是添加一些控制信息组成的首部，那些就是报文头。
 
2.分组(packet)
分组是在网络中传输的二进制格式的单元，
为了提供通信性能和可靠性，每个用户发送的数据会被分成多个更小的部分。
在每个部分的前面加上一些必要的控制信息组成的首部，
有时也会加上尾部，就构成了一个分组。
 
3.数据包(data packet)
数据包是TCP/IP协议通信传输中的数据单元，也称为“包”。
是指自包含的，带有足够寻址信息，可独立地从源主机传输到目的主机，
而不需要依赖早期的源主机和目的主机之间交换信息以及传输网络的数据包。
 
4.数据报(datagram)
面向无连接的数据传输，其工作过程类似于报文交换。
采用数据报方式传输时，被传输的分组称为数据报。
 
5.帧(frame)
帧是数据链路层的传输单元。它将上层传入的数据添加一个头部和尾部，组成了帧。
 
应用层——消息
传输层——数据段(segment)
网络层——分组、数据包（packet）
链路层——帧（frame）

ICMP是“Internet Control Message Ptotocol”（Internet控制消息协议）的缩写。
它是TCP/IP协议族的一个子协议，用于在IP主机、路由器之间传递控制消息

ping命令通常用来作为网络可用性的检查。
ping命令可以对一个网络地址发送测试数据包，看该网络地址是否有响应并统计响应时间，以此测试网络。

ping和ICMP的关系
ping命令发送数据使用的是ICMP协议。

ping的原理
向指定的网络地址发送一定长度的数据包，按照约定，若指定网络地址存在的话，会返回同样大小的数据包，
若在特定时间内没有返回，就是“超时”，会被认为指定的网络地址不存在。
---------------------------------------------------------------------------------------------------------------------------
A (126) 1  -126.0.0.0  [0000  0001] -[0111 1111]  私有地址A 10.0.0.1    ~ 10.255.255.254
B (64 ) 128-191.0.0.0  [1000  0000] -[1011 1111]  私有地址B 172.16.0.1  ~ 172.31.255.254
C (32 ) 192-223.0.0.0  [1100  0000] -[1101 1111]  私有地址C 192.168.0.1 ~ 192.168.255.254
D (16 ) 224-239.0.0.0  [1110  0000] -[1110 1111]
E (15 ) 240-254.0.0.0  [1111  0000] -[1111 1110]
        1 	 1 	 1 	 1 	 1 	 1 	 1 	 1 
	0	0	0	0	0	0	0	0
 	128	64	32	16	8	4	2	1
if [ $a -eq 1 -a $b -eq 1 ]----------# -a 并且      -o 或者  shell语言--------------]
vbr     :   inet 192.168.0  .254  --eth0
vbr1    :   inet 192.168.1  .254  --eth1
private2:   inet 192.168.2  .254  --eth2

[root@hiys ~]# tail   -3   /etc/bashrc  ##  开机自动执行命令
# vim:ts=4:sw=4
/usr/sbin/ifconfig rhce:0 172.25.0.250
#echo Seek1 | passwd --stdin root &> /dev/null

[root@hiys ~]# ifconfig rhce |head  -3
rhce: flags=4099<UP,BROADCAST,MULTICAST>  mtu 1500
        inet 172.25.254.250  netmask 255.255.255.0  broadcast 172.25.254.255
        ether 52:54:00:45:6a:61  txqueuelen 1000  (Ethernet)

[root@hiys ~]# ifconfig rhce:0
rhce:0: flags=4099<UP,BROADCAST,MULTICAST>  mtu 1500
        inet 172.25.0.250  netmask 255.255.0.0  broadcast 172.25.255.255
        ether 52:54:00:45:6a:61  txqueuelen 1000  (Ethernet)


========================= 挂载  U 盘 =========================

[root@hiys ~]# lsblk 
NAME   MAJ:MIN RM   SIZE RO TYPE MOUNTPOINT
sda      8:0    0 465.8G  0 disk 
├─sda1   8:1    0   200G  0 part /var/lib/libvirt/images
└─sda2   8:2    0   120G  0 part /
sdb      8:16   1 117.2G  0 disk 
└─sdb1   8:17   1 117.2G  0 part 
loop0    7:0    0   3.8G  0 loop /var/ftp/rhel7
loop1    7:1    0 935.4M  0 loop /var/ftp/ceph

[root@hiys ~]# rpm  -q  ntfs-3g_ntfsprogs
ntfs-3g_ntfsprogs-2013.1.13-1.el6.x86_64

[root@hiys ~]# rpm  -qa  |grep  fuse
fuse-libs-2.9.2-8.el7.x86_64
fuse-2.9.2-8.el7.x86_64
gvfs-fuse-1.30.4-3.el7.x86_64

[root@hiys ~]# lsmod |egrep  'uas|usb_storage'
uas                    22429  0 
usb_storage            66615  1 uas

[root@hiys ~]# more  /proc/partitions 
major minor  #blocks  name

   8        0  488386584 sda
   8        1  209715200 sda1
   8        2  125829120 sda2
   7        0    3963904 loop0
   7        1     957812 loop1
   8       16  122880000 sdb
   8       17  122879776 sdb1

[root@hiys ~]# fdisk  -l  /dev/sdb 

磁盘 /dev/sdb：125.8 GB, 125829120000 字节，245760000 个扇区
Units = 扇区 of 1 * 512 = 512 bytes
扇区大小(逻辑/物理)：512 字节 / 512 字节
I/O 大小(最小/最佳)：512 字节 / 512 字节
磁盘标签类型：dos
磁盘标识符：0x00000000

   设备 Boot      Start         End      Blocks   Id  System
/dev/sdb1             448   245759999   122879776    c  W95 FAT32 (LBA)


[root@hiys ~]# mkdir  /hiyes

[root@hiys ~]# ls  /hiyes/
[root@hiys ~]# mount.
mount.fuse        mount.lowntfs-3g  mount.nfs         mount.nfs4        mount.ntfs-3g

[root@hiys ~]# mount.ntfs-3g  /dev/sdb1 

ntfs-3g: No mountpoint is specified.

ntfs-3g 2013.1.13 integrated FUSE 27 - Third Generation NTFS Driver
........................................
Usage:    ntfs-3g [-o option[,...]] <device|image_file> <mount_point>

Options:  ro (read-only mount), windows_names, uid=, gid=,
          umask=, fmask=, dmask=, streams_interface=.
          Please see the details in the manual (type: man ntfs-3g).

Example: ntfs-3g /dev/sda1 /mnt/windows

News, support and information:  http://tuxera.com

[root@hiys ~]# mount.ntfs-3g  /dev/sdb1   /hiyes/

[root@hiys ~]# lsblk
NAME   MAJ:MIN RM   SIZE RO TYPE MOUNTPOINT
sda      8:0    0 465.8G  0 disk 
├─sda1   8:1    0   200G  0 part /var/lib/libvirt/images
└─sda2   8:2    0   120G  0 part /
sdb      8:16   1 117.2G  0 disk 
└─sdb1   8:17   1 117.2G  0 part /hiyes
loop0    7:0    0   3.8G  0 loop /var/ftp/rhel7
loop1    7:1    0 935.4M  0 loop /var/ftp/ceph

======================================================

================= 安装 linux 自定义虚拟机 制作 模板 配置yum 网卡   配 置 转发 DNS  ===============

===================  配 置 ftp 服务 [ 1  ] =====================

[root@hiys ~]# rpm  -q  vsftpd
vsftpd-3.0.2-22.el7.x86_64

[root@hiys ~]# vim  /etc/vsftpd/vsftpd.conf 

112 listen=YES
117 listen_ipv6=NO

[root@hiys ~]# cat  -n  /etc/vsftpd/vsftpd.conf |sed  -n  '112p;117,118p'
   112	listen=YES
   117	#listen_ipv6=YES
   118	listen_ipv6=NO

[root@hiys ~]# systemctl  enable  vsftpd

[root@hiys ~]# systemctl  restart  vsftpd

[root@hiys ~]# systemctl  is-active  vsftpd
active

====================  =  搭建 网络 yum 源   [ 2  ]== 准备 光盘 iso 文件 ==========================

[root@hiys ~]# stat  /var/lib/libvirt/images/iso/
  文件："/var/lib/libvirt/images/iso/"
  大小：4096      	块：8          IO 块：4096   目录
设备：801h/2049d	Inode：4587521     硬链接：4
权限：(0755/drwxr-xr-x)  Uid：(    0/    root)   Gid：(    0/    root)
最近访问：2018-12-02 11:00:21.605040342 +0800
最近更改：2018-12-02 10:59:53.053037400 +0800
最近改动：2018-12-02 10:59:53.053037400 +0800
创建时间：-

[root@hiys ~]# cp  /hiyes/ISO-RPM-TAR-ZIP/CentOS7-1708.iso   /var/lib/libvirt/images/iso/
cp：是否覆盖"/var/lib/libvirt/images/iso/CentOS7-1708.iso"？ y

[root@hiys ~]# du  -sh  /var/lib/libvirt/images/iso/CentOS7-1708.iso 
8.1G	/var/lib/libvirt/images/iso/CentOS7-1708.iso

[root@hiys ~]# ll  /var/lib/libvirt/images/iso/CentOS7-1708.iso
-rwxr-xr-x 1 root root 8694792192 12月  2 11:04 /var/lib/libvirt/images/iso/CentOS7-1708.iso

[root@hiys ~]# du  -s  /var/lib/libvirt/images/iso/CentOS7-1708.iso 
8491012	/var/lib/libvirt/images/iso/CentOS7-1708.iso

[root@hiys ~]# echo  "scale=2;8694792192/1024" |bc
8491008.00

========================  搭建 网络 yum 源 [ 2  ] ============================

[root@hiys ~]# ls  /var/ftp/rhel7/
addons  extra_files.json  isolinux    Packages                 RPM-GPG-KEY-redhat-release
EFI     GPL               LiveOS      repodata                 TRANS.TBL
EULA    images            media.repo  RPM-GPG-KEY-redhat-beta

[root@hiys ~]# ls  /etc/yum.repos.d/
ansible.repo       NSD-2018-1-12.tar.gz   repo               RHEL7OSP.repo
CentOS7-1708.repo  packagekit-media.repo  RHEL7-extras.repo  rhel7.repo

[root@hiys ~]# cat  /etc/yum.repos.d/rhel7.repo 
[rhel7]
name=rhel7.4
baseurl=file:///var/ftp/rhel7/
gpgcheck=0
enabled=1

/***[root@hiys ~]# ifconfig  enp1s0  |sed -n  '/inet /p'
        inet 176.121.209.122  netmask 255.255.255.0  broadcast 176.121.209.255
*****************/

[root@hiys ~]# ifconfig  enp2s0 |sed  -n  '/inet /p'
        inet 176.121.213.151  netmask 255.255.255.0  broadcast 176.121.213.255

[root@hiys ~]# vim  /etc/yum.repos.d/CentOS7-1708.repo

[root@hiys ~]# cat  /etc/yum.repos.d/CentOS7-1708.repo 
[CentOS7-1708]
name=CentOS7-1708
gpgcheck=0
baseurl=ftp://176.121.213.151/CentOS7-1708/
enabled=1

[root@hiys ~]# mkdir  /var/ftp/CentOS7-1708
 
[root@hiys ~]# ls  /var/ftp/CentOS7-1708/

[root@hiys ~]# ls  /var/lib/libvirt/images/iso/CentOS7-1708.iso 
/var/lib/libvirt/images/iso/CentOS7-1708.iso

[root@hiys ~]# mount  -o  loop  -t  iso9660  /var/lib/libvirt/images/iso/CentOS7-1708.iso   /var/ftp/CentOS7-1708/
mount: /dev/loop2 is write-protected, mounting read-only

[root@hiys ~]# df  -hT  |grep  CentOS7
/dev/loop2     iso9660   8.1G  8.1G     0 100% /var/ftp/CentOS7-1708

[root@hiys ~]# du  -sh  /var/lib/libvirt/images/iso/CentOS7-1708.iso 
8.1G	/var/lib/libvirt/images/iso/CentOS7-1708.iso

[root@hiys ~]# umount   /var/ftp/CentOS7-1708/

[root@hiys ~]# df  -hT  |grep  CentOS7

[root@hiys ~]# ll  /etc/rc.local 
lrwxrwxrwx. 1 root root 13 Mar 19  2018 /etc/rc.local -> rc.d/rc.local

[root@hiys ~]# ll  /etc/rc.d/rc.local 
-rwxr-xr-x. 1 root root 499 Nov 11 13:09 /etc/rc.d/rc.local

[root@hiys ~]# vim  /etc/rc.local   ## 开机自动挂载

[root@hiys ~]# tail  -5  /etc/rc.local 
touch /var/lock/subsys/local
/usr/bin/crack_pycharm &
mount  -t  iso9660  -o  loop,ro  /var/lib/libvirt/images/iso/CentOS7-1708.iso  /var/ftp/CentOS7-1708/
mount  -t  iso9660  -o  loop,ro  /var/lib/libvirt/images/iso/RHEL7-extras.iso  /var/ftp/RHEL7-extras/
mount  -t  iso9660  -o  loop,ro  /var/lib/libvirt/images/iso/RHEL7OSP-10.iso   /var/ftp/RHEL7OSP/

[root@hiys ~]# source  /etc/rc.local
mount: /dev/loop2 is write-protected, mounting read-only
...........................

[root@hiys ~]# ls  /var/ftp/CentOS7-1708/
CentOS_BuildTag  EULA  images    LiveOS    repodata              RPM-GPG-KEY-CentOS-Testing-7
EFI              GPL   isolinux  Packages  RPM-GPG-KEY-CentOS-7  TRANS.TBL

[root@hiys ~]# df  -hT  |grep  CentOS7
/dev/loop2     iso9660   8.1G  8.1G     0 100% /var/ftp/CentOS7-1708

[root@hiys ~]# yum  clean all >/dev/null  &&  yum repolist |tail  -4
repo id                              repo name                            status
CentOS7-1708                         CentOS7-1708                         9,591
rhel7                                rhel7.4                              4,986
repolist: 14,577
[root@hiys ~]# ls  /etc/yum.repos.d/
ansible.repo       NSD-2018-1-12.tar.gz   repo               RHEL7OSP.repo
CentOS7-1708.repo  packagekit-media.repo  RHEL7-extras.repo  rhel7.repo
[root@hiys ~]# vim  /etc/yum.repos.d/ansible.repo 
[root@hiys ~]# cat  /etc/yum.repos.d/ansible.repo
[ansible]
name=ansible
baseurl=ftp://176.121.213.151/ansible
gpgcheck=0
enabled=1
[root@hiys ~]# vim  /etc/yum.repos.d/RHEL7OSP.repo 
[root@hiys ~]# cat  /etc/yum.repos.d/RHEL7OSP.repo
[RHEL7OSP-devtools-rpms]
name=RHEL7OSP/rhel-7-server-openstack-10-devtools-rpms
gpgcheck=0
baseurl=ftp://176.121.213.151/RHEL7OSP/rhel-7-server-openstack-10-devtools-rpms
enabled=1

[RHEL7OSP-optools-rpms]
name=RHEL7OSP/rhel-7-server-openstack-10-optools-rpms
gpgcheck=0
baseurl=ftp://176.121.213.151/RHEL7OSP/rhel-7-server-openstack-10-optools-rpms
enabled=1

[RHEL7OSP-rpms]
name=RHEL7OSP/rhel-7-server-openstack-10-rpms
gpgcheck=0
baseurl=ftp://176.121.213.151/RHEL7OSP/rhel-7-server-openstack-10-rpms
enabled=1

[RHEL7OSP-tools-rpms]
name=RHEL7OSP/rhel-7-server-openstack-10-tools-rpms
gpgcheck=0
baseurl=ftp://176.121.213.151/RHEL7OSP/rhel-7-server-openstack-10-tools-rpms
pnabled=1

[RHEL7OSP-rhceph-2-mon-rpms]
name=RHEL7OSP/rhel-7-server-rhceph-2-mon-rpms
gpgcheck=0
baseurl=ftp://176.121.213.151/RHEL7OSP/rhel-7-server-rhceph-2-mon-rpms
enabled=1

[RHEL7OSP-rhceph-2-osd-rpms]
name=RHEL7OSP/rhel-7-server-rhceph-2-osd-rpms
gpgcheck=0
baseurl=ftp://176.121.213.151/RHEL7OSP/rhel-7-server-rhceph-2-osd-rpms
enabled=1

[RHEL7OSP-rhceph-2-tools-rpms]
name=RHEL7OSP/rhel-7-server-rhceph-2-tools-rpms
gpgcheck=0
baseurl=ftp://176.121.213.151/RHEL7OSP/rhel-7-server-rhceph-2-tools-rpms
enabled=1

[RHEL7OSP-rhscon-2-agent-rpms]
name=RHEL7OSP/rhel-7-server-rhscon-2-agent-rpms
gpgcheck=0
baseurl=ftp://176.121.213.151/RHEL7OSP/rhel-7-server-rhscon-2-agent-rpms
enabled=1

[RHEL7OSP-rhscon-2-installer-rpms]
name=RHEL7OSP/rhel-7-server-rhscon-2-installer-rpms
gpgcheck=0
baseurl=ftp://176.121.213.151/RHEL7OSP/rhel-7-server-rhscon-2-installer-rpms
enabled=1

[RHEL7OSP-rhscon-2-main-rpms]
name=RHEL7OSP/rhel-7-server-rhscon-2-main-rpms
gpgcheck=0
baseurl=ftp://176.121.213.151/RHEL7OSP/rhel-7-server-rhscon-2-main-rpms
enabled=1
[root@hiys ~]# vim  /etc/yum.repos.d/CentOS7-1708.repo 
[root@hiys ~]# cat  /etc/yum.repos.d/CentOS7-1708.repo
[CentOS7-1708]
name=CentOS7-1708
gpgcheck=0
baseurl=ftp://176.121.213.151/CentOS7-1708/
enabled=1
[root@hiys ~]# vim  /etc/yum.repos.d/RHEL7-extras.repo 
[root@hiys ~]# cat   /etc/yum.repos.d/RHEL7-extras.repo
[RHEL7-extras]
name=RHEL7-extras
baseurl=ftp://176.121.213.151/RHEL7-extras
gpgcheck=0
enabled=1
[root@hiys ~]# cat   /etc/yum.repos.d/rhel7.repo 
[rhel7]
name=rhel7.4
baseurl=file:///var/ftp/rhel7/
gpgcheck=0
enabled=1
[root@hiys ~]#  yum  clean all >/dev/null  &&  yum repolist |tail  -16
源标识                           源名称                                    状态
CentOS7-1708                     CentOS7-1708                              9,591
RHEL7-extras                     RHEL7-extras                                 76
RHEL7OSP-devtools-rpms           RHEL7OSP/rhel-7-server-openstack-10-devto     3
RHEL7OSP-optools-rpms            RHEL7OSP/rhel-7-server-openstack-10-optoo    99
RHEL7OSP-rhceph-2-mon-rpms       RHEL7OSP/rhel-7-server-rhceph-2-mon-rpms     41
RHEL7OSP-rhceph-2-osd-rpms       RHEL7OSP/rhel-7-server-rhceph-2-osd-rpms     28
RHEL7OSP-rhceph-2-tools-rpms     RHEL7OSP/rhel-7-server-rhceph-2-tools-rpm    35
RHEL7OSP-rhscon-2-agent-rpms     RHEL7OSP/rhel-7-server-rhscon-2-agent-rpm    19
RHEL7OSP-rhscon-2-installer-rpms RHEL7OSP/rhel-7-server-rhscon-2-installer    46
RHEL7OSP-rhscon-2-main-rpms      RHEL7OSP/rhel-7-server-rhscon-2-main-rpms    29
RHEL7OSP-rpms                    RHEL7OSP/rhel-7-server-openstack-10-rpms    680
RHEL7OSP-tools-rpms              RHEL7OSP/rhel-7-server-openstack-10-tools    84
ansible                          ansible                                      18
rhel7                            rhel7.4                                   4,986
repolist: 15,735
[root@hiys ~]# 


[root@hiys ~]# blkid  |tail  -2

/dev/sdb1: UUID="562FB3196A04A1C8" TYPE="ntfs" 

/dev/loop2: UUID="2017-09-06-10-53-42-00" LABEL="CentOS 7 x86_64" TYPE="iso9660" PTTYPE="dos" 

[root@hiys ~]# blkid  /dev/sda
/dev/sda: PTTYPE="dos" 


-----===================-- 设置语言环境 为英文  [ 3  ] ========================

[root@hiys ~]# echo  $LANG
zh_CN.UTF-8

[root@hiys ~]# LANG=en_US.UTF-8

[root@hiys ~]# echo  $LANG
en_US.UTF-8

/**
[root@hiys ~]# which export
/usr/bin/which: no export in (/usr/lib64/qt-3.3/bin:/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/bin:/sbin:/root/bin)
[root@hiys ~]# type  export
export is a shell builtin

[root@hiys ~]# export  LANG="en_US.UTF-8"
[root@hiys ~]# echo  $LANG
en_US.UTF-8
[root@hiys ~]# locale   |head  -3
LANG=en_US.UTF-8
LC_CTYPE="en_US.UTF-8"
LC_NUMERIC="en_US.UTF-8"
**/
[root@hiys ~]# locale  ## 查看系统安装的语言包

LANG=en_US.UTF-8
LC_CTYPE="en_US.UTF-8"
........................
LC_IDENTIFICATION="en_US.UTF-8"
LC_ALL=

================================ 查看电脑 环境 是否支持 虚拟化 [ 4  ] ==================

[root@hiys ~]# cat  /etc/issue    ##查看Linux系统版本的命令
\S
Kernel \r on an \m


[root@hiys ~]# lsb_release  -a   ## 查看Linux系统版本的命令

LSB Version:	:core-4.1-amd64:core-4.1-noarch:cxx-4.1-amd64:cxx-4.1-noarch:desktop-4.1-amd64:desktop-4.1-noarch:languages-4.1-amd64:languages-4.1-noarch:printing-4.1-amd64:printing-4.1-noarch
Distributor ID:	CentOS
Description:	CentOS Linux release 7.4.1708 (Core) 
Release:	7.4.1708
Codename:	Core

[root@hiys ~]# ll  /etc/redhat-release 
lrwxrwxrwx. 1 root root 14 3月  10 2018 /etc/redhat-release -> centos-release
[root@hiys ~]# cat  /etc/redhat-release   ## 查看Linux系统版本的命令
CentOS Linux release 7.4.1708 (Core) 

[root@hiys ~]# cat  /etc/centos-release
CentOS Linux release 7.4.1708 (Core) 

[root@hiys ~]# ll  /etc/issue
-rw-r--r--. 1 root root 23 8月  30 2017 /etc/issue
[root@hiys ~]# cat  /etc/issue   ##查看Linux系统版本的命令
\S
Kernel \r on an \m

[root@hiys ~]# cat  /proc/version    ## 查看Linux内核版本命令
Linux version 3.10.0-693.el7.x86_64 (builder@kbuilder.dev.centos.org) (gcc version 4.8.5 20150623 (Red Hat 4.8.5-16) (GCC) ) #1 SMP Tue Aug 22 21:09:27 UTC 2017

[root@hiys ~]# uname  -a     #查看Linux内核版本命令
Linux hiys 3.10.0-693.el7.x86_64 #1 SMP Tue Aug 22 21:09:27 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux

[root@hiys ~]# lsmod  |grep  kvm
kvm_intel             170086  0 
kvm                   566340  1 kvm_intel
irqbypass              13503  1 kvm

[root@hiys ~]# ls  /sys/module/kvm/
...............................

[root@hiys ~]# ls  /sys/module/kvm_intel/
............................

[root@hiys ~]# cat  /proc/cpuinfo   |grep  vmx |head  -1
flags		: fpu vme .................

[root@hiys ~]# sed   -n  '/vmx/p'  /proc/cpuinfo  |head  -1
flags		: fpu vme ..........monitor ds_cpl vmx smx .........

[root@hiys ~]# egrep  -o 'svm|vmx' /proc/cpuinfo  ##查看电脑是否支持 虚拟化# #-o参数(只输出匹配的部分)
vmx
vmx
vmx
vmx

========================  安装 创建 虚拟机 模版 需要的软件包 [ 5  ]============================

[root@hiys ~]# rpm  -q  qemu-kvm  libvirt  libvirt-client  libvirt-daemon  libvirt-daemon-driver-qemu \
> libguestfs-tools  libvirt-python   python-setuptools   virt-install   virt-manager \
> virt-v2v  virt-p2v  virt-viewer  bind-chroot  bind  chrony  vsftpd  \
>  bash-completion   lrzsz   tree


qemu-kvm-1.5.3-141.el7.x86_64      ## 为 kvm 提供底层仿真支持  【虚拟化平台 安装必备软件】
libvirt-3.2.0-14.el7.x86_64
libvirt-client-3.2.0-14.el7.x86_64   ## 用户端软件,提供客户端管理命令 【虚拟化平台 安装必备软件】
libvirt-daemon-3.2.0-14.el7.x86_64    ## 守护进程,管理虚拟机     【虚拟化平台 安装必备软件】
libvirt-daemon-driver-qemu-3.2.0-14.el7.x86_64   ## libvirtd 连接 qemu 的驱动  【虚拟化平台 安装必备软件】

libguestfs-tools-1.36.3-6.el7.noarch
libvirt-python-3.2.0-3.el7.x86_64
python-setuptools-0.9.8-7.el7.noarch
virt-install-1.4.1-7.el7.noarch       ## 系统安装工具 【可选功能】
virt-manager-1.4.1-7.el7.noarch       ## 图形管理工具 【可选功能】

virt-v2v-1.36.3-6.el7.x86_64        ## 虚拟机 迁移 工具【可选功能】
未安装软件包 virt-p2v                ## 物理机 迁移 工具 【可选功能】

virt-viewer-5.0-7.el7.x86_64
bind-chroot-9.9.4-50.el7.x86_64
bind-9.9.4-50.el7.x86_64
chrony-3.1-2.el7.centos.x86_64
vsftpd-3.0.2-22.el7.x86_64

bash-completion-2.1-6.el7.noarch   ## 支持table键
lrzsz-0.12.20-36.el7.x86_64        ## xshell 上传下载工具 软件包[上传rz、下载sz命令]
tree-1.6.0-10.el7.x86_64

[root@hiys ~]# yum list  |grep virt-p2v
virt-p2v-maker.x86_64                    1:1.36.3-6.el7            CentOS7-1708 

[root@hiys ~]# yum  -y install  virt-p2v
............................
没有可用软件包 virt-p2v。    ## 物理机 迁移 工具 【可选功能】
错误：无须任何处理

[root@hiys ~]# systemctl is-active  libvirtd
active
[root@hiys ~]# systemctl is-enabled  libvirtd
enabled
[root@hiys ~]# systemctl restart  libvirtd

-========================  禁止 firewalld 并且 屏蔽 防火墙服务 [ 6  ] ==============

[root@hiys ~]# systemctl is-active  firewalld
unknown
[root@hiys ~]# systemctl is-enabled  firewalld
disabled
[root@hiys ~]# systemctl  mask  firewalld  ## 屏蔽 防火墙服务 
Created symlink from /etc/systemd/system/firewalld.service to /dev/null.

[root@hiys ~]# systemctl is-enabled  firewalld
masked

[root@hiys ~]# getenforce 
Disabled
[root@hiys ~]# sed  -n  7p  /etc/sysconfig/selinux 
SELINUX=disabled

=======================   配 置 转发 DNS  [  7  ] ====================

Domain Name System Security Extensions (DNSSEC)DNS安全扩展，
是由IETF提供的一系列DNS安全认证的机制（可参考RFC2535）。
它提供了一种来源鉴定和数据完整性的扩展，但不去保障可用性、加密性和证实域名不存在。
DNSSEC是为解决DNS欺骗和缓存污染而设计的一种安全机制。
开发DNSSEC技术的目的之一是通过对数据进行数字“签名”来抵御此类攻击，从而使您确信数据有效。
但是，为了从互联网中消除该漏洞，
必须在从 根区域 到 最终域名（例如， www. icann. org ）的查找过程中的每一步部署该项技术。
对根区域进行签名（在根区域部署 DNSSEC ）是整个过程中的必要步骤。
需要说明的是，该技术并不对数据进行加密。
它只是验证您所访问的站点地址是否有效。
完全部署 DNSSEC 可以确保最终用户连接到与特定域名相对应的实际网站或其他服务。
尽管这不会解决互联网的所有安全问题，但它确实保护了互联网的关键部分（即目录查找），
从而对 SSL (https:) 等其他保护“会话”的技术进行了补充，并且为尚待开发的安全改进技术提供了平台。

一、DNSSEC概念与原理
DNSSEC通过为通过为DNS中的数据添加数字签名信息，
使得客户端在得到应答消息后, 可以通过检查此签名信息 来判断应答数据是否权威和真实，
从而为DNS数据 提供 数据来源 验证 和 数据完整性 检验，
可以防止针对 可以防止针对DNS的相关攻击

[root@hiys ~]# rpm  -q  bind-chroot  bind  bind-utils
bind-chroot-9.9.4-50.el7.x86_64
bind-9.9.4-50.el7.x86_64
bind-utils-9.9.4-50.el7.x86_64

[root@hiys ~]# vim  /etc/named.conf 

[root@hiys ~]# cat  -n  /etc/named.conf |sed  -n  '12,22p;33,35p'
    12	options {
    13		listen-on port 53 { 192.168.1.254; };
    14	//	listen-on-v6 port 53 { ::1; };
    15		directory 	"/var/named";
    16		dump-file 	"/var/named/data/cache_dump.db";
    17		statistics-file "/var/named/data/named_stats.txt";
    18		memstatistics-file "/var/named/data/named_mem_stats.txt";
    19		allow-query     { any; };
    20	        forwarders   { 114.114.114.114; };
    21		/* 
    22		 - If you are building an AUTHORITATIVE DNS server, do NOT enable recursion.
    33		dnssec-enable no;   ## 关闭dnssec 服务 , 不支持DNSSEC开关
    34		dnssec-validation no; ## 是否进行DNSSEC确认开关 ,no
    35	
[root@hiys ~]# 
/**************
　114.114.114.114是国内移动、电信和联通通用的DNS，手机和电脑端都可以使用，是国内用户上网常用的DNS

　8.8.8.8是GOOGLE公司提供的DNS，该地址是全球通用的，相对来说，更适合国外以及访问国外网站的用户使用
**************/
[root@hiys ~]# systemctl  restart  named
[root@hiys ~]# systemctl  enable   named
[root@hiys ~]# systemctl is-active  named
active
[root@hiys ~]# systemctl  is-enabled  named
enabled

[root@hiys ~]# cat  /etc/resolv.conf 
# Generated by NetworkManager
search tedu.com
nameserver 176.121.0.100

[root@hiys ~]# cat  /etc/resolv.conf 
# Generated by NetworkManager
nameserver 176.121.0.100

[root@hiys ~]# nslookup  tedu.com
Server:		176.121.0.100
Address:	176.121.0.100#53

Non-authoritative answer:
Name:	tedu.com
Address: 103.232.215.131


[root@hiys ~]# dig  +trace  ntp.aliyun.com
.....................
ntp.aliyun.com.		300	IN	A	203.107.6.88
aliyun.com.		172800	IN	NS	ns3.aliyun.com.
aliyun.com.		172800	IN	NS	ns5.aliyun.com.
aliyun.com.		172800	IN	NS	ns4.aliyun.com.
;; Received 209 bytes from 140.205.71.248#53(ns4.aliyun.com) in 30 ms

[root@hiys ~]# dig  ntp.aliyun.com
..............
;; ANSWER SECTION:
ntp.aliyun.com.		35	IN	A	203.107.6.88
.............................
;; Query time: 25 msec
;; SERVER: 176.121.0.100#53(176.121.0.100)
;; WHEN: Sun Dec 02 16:29:00 CST 2018
;; MSG SIZE  rcvd: 855

[root@hiys ~]# nslookup  ntp.aliyun.com
Server:		176.121.0.100
Address:	176.121.0.100#53

Non-authoritative answer:
Name:	ntp.aliyun.com
Address: 203.107.6.88

==================== 配置  时间服务 [  8  ] ==================

[root@hiys ~]# rpm  -q  chrony
chrony-3.1-2.el7.centos.x86_64
[root@hiys ~]# vim  /etc/chrony.conf 
[root@hiys ~]# sed  -n  '3,11p'  /etc/chrony.conf

#server 0.centos.pool.ntp.org iburst
#server 1.centos.pool.ntp.org iburst
#server 2.centos.pool.ntp.org iburst
#server 3.centos.pool.ntp.org iburst
server  ntp.aliyun.com iburst

bindacqaddress  0.0.0.0  ##  该指令 允许 你 限制 chronyd 监听 哪个网络接口的命令包（由chronyc执行）。
                            ### 该指令通过cmddeny机制提供了一个除上述限制以外可用的额外的访问控制等级

#allow  0/0  ## 允许所有客户端主机

allow   all  ## 允许所有客户端主机

cmdallow 127.0.0.1   ## 指定哪个IP地址或哪台主机可以通过chronyd使用控制命令

[root@hiys ~]# systemctl restart  chronyd


allow   all 区别  allow  0/0  /etc/chrony.conf
[root@hiys ~]# systemctl  is-enabled  chronyd
enabled

[root@hiys ~]# systemctl  is-active  chronyd
active

[root@hiys ~]# chronyc  sources  -v    # # 查看时间同步源* 203.107.6.88
210 Number of sources = 1

  .-- Source mode  '^' = server, '=' = peer, '#' = local clock.
 / .- Source state '*' = current synced, '+' = combined , '-' = not combined,
| /   '?' = unreachable, 'x' = time may be in error, '~' = time too variable.
||                                                 .- xxxx [ yyyy ] +/- zzzz
||      Reachability register (octal) -.           |  xxxx = adjusted offset,
||      Log2(Polling interval) --.      |          |  yyyy = measured offset,
||                                \     |          |  zzzz = estimated error.
||                                 |    |           \
MS Name/IP address         Stratum Poll Reach LastRx Last sample               
===============================================================================
^* 203.107.6.88                  2   6    17    34   +281us[+4512us] +/-   34ms

[root@hiys ~]# chronyc  sourcestats  -v    ##  #查看同步状态
210 Number of sources = 1
                             .- Number of sample points in measurement set.
                            /    .- Number of residual runs with same sign.
                           |    /    .- Length of measurement set (time).
                           |   |    /      .- Est. clock freq error (ppm).
                           |   |   |      /           .- Est. error in freq.
                           |   |   |     |           /         .- Est. offset.
                           |   |   |     |          |          |   On the -.
                           |   |   |     |          |          |   samples. \
                           |   |   |     |          |          |             |
Name/IP Address            NP  NR  Span  Frequency  Freq Skew  Offset  Std Dev
==============================================================================
203.107.6.88                4   3     6   +575.789   9923.880    +35ms  1415us


========================  真机 设置 ssh  免 询问 登陆   [  9   ]  =================

[root@hiys ~]# vim  /etc/ssh/ssh_config 

 41   Port 22

 58 Host *
 59         GSSAPIAuthentication   yes
 60         StrictHostKeyChecking  no

[root@hiys ~]# cat  -n  /etc/ssh/ssh_config  |sed  -n '41p;58,60p'
    41	  Port 22
    58	Host *
    59		GSSAPIAuthentication   yes
    60	        StrictHostKeyChecking  no

[root@hiys ~]# systemctl  is-enabled  sshd
enabled
[root@hiys ~]# systemctl  restart   sshd
[root@hiys ~]# systemctl  is-active  sshd
active
======================   虚拟网络 命令 常用 =====================

[root@hiys ~]# virsh  net-autostart --disable  vbr
网络vbr取消标记为自动启动

[root@hiys ~]# virsh  net-autostart --disable  vbr2
网络vbr2取消标记为自动启动

[root@hiys ~]# virsh  net-list  --all
 名称                      状态     自动开始    持久
----------------------------------------------------------
 default              活动     是           是
 private1             活动     是           是
 private2             活动     是           是
 public1              活动     是           是
 public2              活动     是           是
 rhce                 活动     是           是
 vbr                  活动     否           是
 vbr2                 活动     否           是

[root@hiys ~]# virsh  net-destroy   vbr
网络 vbr 被删除

[root@hiys ~]# virsh  net-destroy   vbr2
网络 vbr2 被删除

[root@hiys ~]# virsh  net-list  --all
 名称               状态          自动开始      持久
----------------------------------------------------------
 default              活动     是           是
 private1             活动     是           是
 private2             活动     是           是
 public1              活动     是           是
 public2              活动     是           是
 rhce                 活动     是           是
 vbr                  不活跃  否           是
 vbr2                 不活跃  否           是

[root@hiys ~]# ls  /etc/libvirt/qemu/networks/
autostart    private1.xml  public1.xml  rhce.xml  vbr.xml
default.xml  private2.xml  public2.xml  vbr2.xml

[root@hiys ~]# virsh net-undefine  vbr   ##取消定义一个非活跃的网络 vbr
网络 vbr 已经被取消定义

[root@hiys ~]# virsh net-undefine  vbr2  ## 取消定义一个非活跃的网络 vbr2
网络 vbr2 已经被取消定义

[root@hiys ~]# ls  /etc/libvirt/qemu/networks/
autostart  default.xml  private1.xml  private2.xml  public1.xml  public2.xml  rhce.xml

[root@hiys ~]# virsh  net-list  --all
 名称               状态     自动开始  持久
----------------------------------------------------------
 default              活动     是           是
 private1             活动     是           是
 private2             活动     是           是
 public1              活动     是           是
 public2              活动     是           是
 rhce                 活动     是           是

[root@hiys ~]# virsh nodeinfo

CPU 型号：        x86_64
CPU：               4
CPU 频率：        899 MHz
CPU socket：        1
每个 socket 的内核数： 4
每个内核的线程数： 1
NUMA 单元：       1
内存大小：      16687548 KiB

==================  创建  虚拟网络  vbr   vbr1  private2  [ 10 ] ===========================

vbr     :   inet 192.168.0  .254  --eth0
vbr1    :   inet 192.168.1  .254  --eth1
private2:   inet 192.168.2  .254  --eth2

[root@hiys ~]# cd  /etc/libvirt/qemu/networks/

[root@hiys networks]# ls
autostart  default.xml  private1.xml  private2.xml  public1.xml  public2.xml  rhce.xml

[root@hiys networks]# vim  /etc/libvirt/qemu/networks/vbr.xml

[root@hiys networks]# cat  /etc/libvirt/qemu/networks/vbr.xml

<network>
  <name>vbr</name>
  <forward mode='nat'>
  </forward>
  <bridge name='vbr' stp='on' delay='0'/>
  <domain name='vbr'/>
  <ip address='192.168.0.254' netmask='255.255.255.0'>
    <dhcp>
      <range start='192.168.0.100' end='192.168.0.200'/>
    </dhcp>
  </ip>
</network>

[root@hiys networks]# cp  /etc/libvirt/qemu/networks/vbr.xml  /etc/libvirt/qemu/networks/vbr1.xml

[root@hiys networks]# vim  /etc/libvirt/qemu/networks/vbr1.xml

[root@hiys networks]# cat  /etc/libvirt/qemu/networks/vbr1.xml

<network>
  <name>vbr1</name>
  <forward mode='nat'>
  </forward>
  <bridge name='vbr1' stp='on' delay='0'/>
  <domain name='vbr1'/>
  <ip address='192.168.1.254' netmask='255.255.255.0'>
    <dhcp>
      <range start='192.168.1.100' end='192.168.1.200'/>
    </dhcp>
  </ip>
</network>

[root@hiys networks]# ls
autostart  default.xml  private1.xml  private2.xml  public1.xml  public2.xml  rhce.xml  vbr1.xml  vbr.xml

[root@hiys networks]# virsh  net-define  vbr.xml 
Network vbr defined from vbr.xml

[root@hiys networks]# virsh  net-define  vbr1.xml 
Network vbr1 defined from vbr1.xml

[root@hiys networks]# virsh  net-autostart  vbr
Network vbr marked as autostarted

[root@hiys networks]# virsh  net-autostart  vbr1
Network vbr1 marked as autostarted

[root@hiys networks]# virsh  net-start  vbr
Network vbr started

[root@hiys networks]# virsh  net-start  vbr1
Network vbr1 started

[root@hiys networks]# ifconfig vbr ;ifconfig vbr1

vbr: flags=4099<UP,BROADCAST,MULTICAST>  mtu 1500
        inet 192.168.0.254  netmask 255.255.255.0  broadcast 192.168.0.255
        ether 52:54:00:ea:38:40  txqueuelen 1000  (Ethernet)
..........................

vbr1: flags=4099<UP,BROADCAST,MULTICAST>  mtu 1500
        inet 192.168.1.254  netmask 255.255.255.0  broadcast 192.168.1.255
        ether 52:54:00:81:da:cc  txqueuelen 1000  (Ethernet)
..................................

[root@hiys networks]# ifconfig  private2

private2: flags=4099<UP,BROADCAST,MULTICAST>  mtu 1500
        inet 192.168.2.254  netmask 255.255.255.0  broadcast 192.168.2.255
        ether 52:54:00:f8:f9:d7  txqueuelen 1000  (Ethernet)
..........................................

[root@hiys networks]# pwd
/etc/libvirt/qemu/networks

[root@hiys networks]# cd

[root@hiys ~]# virsh  -c  qemu:///system net-dumpxml  vbr   ##虚拟网络vbr --> eth0
<network>
  <name>vbr</name>
  <uuid>4c71be3c-1f88-4e54-9101-df03f7d23865</uuid>
  <forward mode='nat'>
    <nat>
      <port start='1024' end='65535'/>
    </nat>
  </forward>
  <bridge name='vbr' stp='on' delay='0'/>
  <mac address='52:54:00:e7:9b:14'/>
  <domain name='vbr'/>
  <ip address='192.168.0.254' netmask='255.255.255.0'>
    <dhcp>
      <range start='192.168.0.100' end='192.168.0.200'/>
    </dhcp>
  </ip>
</network>

[root@hiys ~]# virsh  -c  qemu:///system net-dumpxml  vbr1  ##虚拟网络vbr1 --> eth1

[root@hiys networks]# virsh net-dumpxml  vbr1
<network>
  <name>vbr1</name>
  <uuid>4b710e74-4650-4e7f-a357-8b02187824c7</uuid>
  <forward mode='nat'>
    <nat>
      <port start='1024' end='65535'/>
    </nat>
  </forward>
  <bridge name='vbr1' stp='on' delay='0'/>
  <mac address='52:54:00:81:da:cc'/>
  <domain name='vbr1'/>
  <ip address='192.168.1.254' netmask='255.255.255.0'>
    <dhcp>
      <range start='192.168.1.100' end='192.168.1.200'/>
    </dhcp>
  </ip>
</network>


[root@hiys ~]# virsh  -c  qemu:///system net-dumpxml  private2  ##虚拟网络private2 -->  eth2
<network>
  <name>private2</name>
  <uuid>dca824f3-cdfc-4fcd-9b98-f8a46656c27d</uuid>
  <bridge name='private2' stp='on' delay='0'/>
  <mac address='52:54:00:f8:f9:d7'/>
  <domain name='private2'/>
  <ip address='192.168.2.254' netmask='255.255.255.0'>
  </ip>
</network>

============================   CentOS1708 虚拟机模版 制作  [ 11  ] ===========

[root@hiys ~]# qemu-img  create  -f  qcow2  /var/lib/libvirt/images/Seek.qcow2  3G 

Formatting '/var/lib/libvirt/images/Seek.qcow2', fmt=qcow2 size=3221225472 encryption=off cluster_size=65536 lazy_refcounts=off 

[root@hiys ~]# chmod  777  /var/lib/libvirt/images/Seek.qcow2 

[root@hiys ~]# du  -sh   /var/lib/libvirt/images/Seek.qcow2

196K	/var/lib/libvirt/images/Seek.qcow2

[root@hiys ~]# ls   /var/lib/libvirt/images/
bin      db    lost+found  Seek.qcow2             tedu-wallpaper-weekend.png  win.img
conf.d   exam  node.qcow2  Student.sh             vsftpd.conf
content  iso   qemu        tedu-wallpaper-01.png  Weekend.sh

[root@hiys ~]# ls  /var/log/libvirt/qemu/
win2008.log

[root@hiys ~]# tty
/dev/pts/0

[root@hiys ~]# echo  $LANG 
en_US.UTF-8

[root@hiys ~]# virt-manager 

/**
KDUMP 【dump整个系统的内存空间，以便于系统管理员debug分析系统挂掉的原因；
kdump专用内核，通过kexec工具load到预留的内存中，供故障引导使用】
----------------------------------------------------------
***/

==================================================================
      虚拟系统管理器                                                                                           |
-----------------------------------------------------                                                                          |
   点击菜单  文件 ---> 新建虚拟机（N）                                                        |
                                                                                                                |
生成新虚拟机                                                                                                    |

  选择  网络安装，可为 HTTP，FTP 或者 NFS

点击  前进
---------------------------------------------------------
生成新虚拟机
提供操作系统安装 URL
URL ： yum 源地址  ftp://176.121.213.151/CentOS7-1708/
           baseurl=ftp://176.121.213.151/CentOS7-1708

默认勾 上 根据安装介质 自动侦测 操作系统（U）

点击  前进
-----------------------------------------------
/*****
[root@hiys ~]# echo "1024*4" |bc
4096
[root@hiys ~]# echo  "1024*2" |bc
2048
***/
-------------------------------
生成新虚拟机

内存（M），RAM   2048 MiB
         CPU    2

点击  前进
------------------------------------------------------------

生成新虚拟机

默认勾 上 为虚拟机启用存储（E）

选择或创建自定义存储（S）
 点击 管理（M）...   /var/lib/libvirt/images/Seek.qcow2

点击  前进
------------------------------------------------------------

生成新虚拟机
名称（N）  Seek  【自定义虚拟机名称】

选择网络
    虚拟网络‘vbr’：NAT

点击 完成
----------------------------------------------------------------

WELCOME TO CENTOS 7.
选择语言必须是 英语
English        English(United States)

           点击     Continue
---------------------------------------------------------
Installation  Summary
------------------------------------------
INSTALLATION   SUMMARY

LOCALIZATION
  DATE  & TIME                   KEYBOARD
 Asia/Shanghai timezone          English(US)

LANGUAGE SUPPORT
English (United States)

SOFTWARE

INSTALLATION  SOURCE                      注意 SOFTWARE SELECTION  
ftp://176.121.213.151/CentOS7-1708/        Minimal Install
                                                        最小化安装

                                               点击  KDUMP 
                                     ---------------------------------------------------
                                       去掉 勾 Enable  kdump
                                                 点击Done
                                       ----------------------------------------------
SYSTEM
    installation  destination
 点击INSTALLATION  DESTINATION           KDUMP
                                        Kdump is disabled
            |
            |
----------------------------------    

Device Selection
 
Other  Storage  Options
选择 I will configure partitioning

点击左上角 Done

--------------------------------------------------
MANUAL  PARTITIONING


New CentOS 7 Installation


Create  new  mount  points  by clicking  the  '+' button.
New  mount points  will user the following  partitioning scheme:

选择  Standard Partition  标准分区

点击 左下角 加号 + 
-----------------------------------------
ADD   A  NEW  MOUNT  POINT

Mount  Point:   /  只选择根分区

Desired Capacity:

     点击  Add mount point 确定
------------------------------------------------------
MANUAL  PARTITIONING
点击左上角 Done  (需要点击二次）
--------------------------------------
New CentOS 7 Installation
   SYSTEM 
  /               3071 MiB
  vda1
---------------------------------------------------------
------------------------------------------------
弹出对话框 
  SUMMARY  OF  CHANGES
1   Destroy  Format    Unknow                    vda
2   Create   Format    partition  table (MSDOS)  vda
3   Create   Device    partition                 vda1
4   Create   Format     xfs             vda1          /

选择 Accept Changes
-----------------------------------------
------------------------------------------
INSTALLATION   SUMMARY


             点击 Begin Installation
----------------------------------------------------
CONFIGURATION

USER SETTINGS  

ROOT  PASSWORD              USER  CREATION
         1                   lily     1
----------------------------(需要点击二次）---------------------                                                     |
                                                                                                        |
最后点击 Reboot      [ 今后做 多网卡 模版 可以尝试 在这时候加网络网卡 ]                   |
==============================================================
[root@hiys ~]# rm   -f  /var/log/libvirt/qemu/Va{1..6}.log 

[root@hiys ~]# ll /var/log/libvirt/qemu/Seek.log 
-rw------- 1 root root 3243 Dec  4 09:05 /var/log/libvirt/qemu/Seek.log

[root@hiys ~]# ls  /var/log/libvirt/qemu/
Seek.log  win2008.log

[root@hiys ~]# tty
/dev/pts/0

-------------------=============打开 虚拟机 Seek 图形窗口 [  1  ] -----------------------------------

localhost  login: root
Password:  1

[root@localhost ~]# echo Seek > /etc/hostname

[root@localhost ~]# ls
anaconda-ks.cfg

[root@localhost ~]# yum  provides  ifconfig
.................
[root@localhost ~]# yum  -y install  net-tools   vim-enhanced

[root@localhost ~]# ifconfig  |awk '/inet /&&/192.168/{print $2}'
192.168.0.?

[root@localhost ~]#  cat  /etc/sysconfig/network-scripts/ifcfg-eth0

[root@localhost ~]# tty
/dev/tty1

[root@localhost ~]# shutdown  -h  now

[root@hiys ~]# virsh  start  Seek
Domain Seek started

---------------------------------------------------- 真机    [  2  ] ---------------------------------------
[root@hiys ~]# vim  local.repo.txt
[root@hiys ~]# cat  local.repo.txt
[CentOS7-1708]
name=CentOS7-1708
gpgcheck=0
baseurl=ftp://192.168.0.254/CentOS7-1708/
enabled=1

[docker]
name=docker
baseurl="ftp://192.168.0.254/docker"
enabled=1
gpgcheck=0

[ansible]
name=ansible
baseurl=ftp://192.168.0.254/ansible
gpgcheck=0
enabled=1
------------------------------------------------------
[root@hiys ~]# ssh  -X  192.168.0.200

root@192.168.0.200's password: 1

[root@Seek ~]# tty
/dev/pts/0

[root@Seek ~]# ls
anaconda-ks.cfg

[root@Seek ~]# cat  -n  anaconda-ks.cfg 
     1	#version=DEVEL
     2	# System authorization information
     3	auth --enableshadow --passalgo=sha512
     4	# Use network installation
     5	url --url="ftp://176.121.213.151/CentOS7-1708/"
     6	# Use graphical install
     7	graphical
     8	# Run the Setup Agent on first boot
     9	firstboot --enable
    10	ignoredisk --only-use=vda
    11	# Keyboard layouts
    12	keyboard --vckeymap=us --xlayouts='us'
    13	# System language
    14	lang en_US.UTF-8
    15	
    16	# Network information
    17	network  --bootproto=dhcp --device=eth0 --ipv6=auto --activate
    18	network  --hostname=localhost.localdomain
    19	
    20	# Root password
    21	rootpw --iscrypted $6$hrHt9RqEzRrz5TQe$2.FrvykEqp42Oqh7oryO1DMmc94OoVReHt4hOYivlATY9nNnWkW42SXXfhhEkrV/W0ZCTBsUteTVATStapSpd0
    22	# System services
    23	services --enabled="chronyd"
    24	# System timezone
    25	timezone Asia/Shanghai --isUtc
    26	user --name=lily --password=$6$KXcF7Cf8FhBPhoCt$s/IZfHbbRQ9PddHft9T/hgvx1iwkzPYJ8rVR0W5Vpd0SbG.5y9Cran4HvSa9evsE3UnNSFkUmdODYbcnni4ja0 --iscrypted --gecos="lily"
    27	# System bootloader configuration
    28	bootloader --location=mbr --boot-drive=vda
    29	# Partition clearing information
    30	clearpart --none --initlabel
    31	# Disk partitioning information
    32	part / --fstype="xfs" --ondisk=vda --size=3071
    33	
    34	%packages
    35	@^minimal
    36	@core
    37	chrony
    38	
    39	%end
    40	
    41	%addon com_redhat_kdump --disable --reserve-mb='auto'
    42	
    43	%end
    44	
    45	%anaconda
    46	pwpolicy root --minlen=6 --minquality=1 --notstrict --nochanges --notempty
    47	pwpolicy user --minlen=6 --minquality=1 --notstrict --nochanges --emptyok
    48	pwpolicy luks --minlen=6 --minquality=1 --notstrict --nochanges --notempty
    49	%end
[root@Seek ~]# 
[root@Seek ~]# ll  anaconda-ks.cfg
-rw-------. 1 root root 1459 Dec  4 09:17 anaconda-ks.cfg

[root@Seek ~]# stat  anaconda-ks.cfg
  File: ‘anaconda-ks.cfg’
  Size: 1459      	Blocks: 8          IO Block: 4096   regular file
Device: fd01h/64769d	Inode: 2097219     Links: 1
Access: (0600/-rw-------)  Uid: (    0/    root)   Gid: (    0/    root)
Context: system_u:object_r:admin_home_t:s0
Access: 2018-12-04 09:37:16.633243101 +0800
Modify: 2018-12-04 09:17:44.398841757 +0800
Change: 2018-12-04 09:17:44.398841757 +0800
 Birth: -

/*******
Linux:root下的文件-anaconda-ks.cfg详解
系统安装的时候生成的一个文件，通过这个文件可以修改成自动安装的脚本,用于自动安装同样配置的系统.

************/

[root@Seek ~]# ifconfig 
eth0: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 1500
        inet 192.168.0.200  netmask 255.255.255.0  broadcast 192.168.0.255
        inet6 fe80::5054:ff:fe1d:ee21  prefixlen 64  scopeid 0x20<link>
................................
lo: flags=73<UP,LOOPBACK,RUNNING>  mtu 65536
        inet 127.0.0.1  netmask 255.0.0.0
........................

======================虚拟机  DNS 域名解析 能上网  [  3  ]  ====================
[root@Seek ~]# echo $LANG
en_US.UTF-8
[root@Seek ~]# tty
/dev/pts/0

[root@Seek ~]# cat  /etc/resolv.conf 
# Generated by NetworkManager
search vbr
nameserver 192.168.0.254

[root@Seek ~]# vim  /etc/resolv.conf
[root@Seek ~]# cat  /etc/resolv.conf
nameserver 192.168.0.254
search vbr    ## 注意 search 在 nameserver 的下一行

[root@Seek ~]# ping  -c3  www.baidu.com
PING www.a.shifen.com (14.215.177.38) 56(84) bytes of data.
64 bytes from 14.215.177.38 (14.215.177.38): icmp_seq=1 ttl=52 time=7.09 ms
64 bytes from 14.215.177.38 (14.215.177.38): icmp_seq=2 ttl=52 time=4.38 ms
64 bytes from 14.215.177.38 (14.215.177.38): icmp_seq=3 ttl=52 time=6.51 ms

--- www.a.shifen.com ping statistics ---
3 packets transmitted, 3 received, 0% packet loss, time 2001ms
rtt min/avg/max/mdev = 4.386/5.999/7.097/1.168 ms

=====================  配置yum源   [  4  ]  ==================

[root@Seek ~]# mkdir /etc/yum.repos.d/repo

[root@Seek ~]# mv  /etc/yum.repos.d/*.repo  /etc/yum.repos.d/repo
[root@Seek ~]# ls  /etc/yum.repos.d/
repo

[root@Seek ~]# scp  -o  StrictHostKeyChecking=no  root@192.168.0.254:/root/local.repo.txt  \
> /etc/yum.repos.d/local.repo
Warning: Permanently added '192.168.0.254' (ECDSA) to the list of known hosts.
root@192.168.0.254's password: 1
local.repo.txt                                100%  257   183.1KB/s   00:00 

[root@Seek ~]# ls  /etc/yum.repos.d/
local.repo  repo

[root@Seek ~]# cat /etc/yum.repos.d/local.repo 
[CentOS7-1708]
name=CentOS7-1708
gpgcheck=0
baseurl=ftp://192.168.0.254/CentOS7-1708/
enabled=1

[docker]
name=docker
baseurl="ftp://192.168.0.254/docker"
enabled=1
gpgcheck=0

[ansible]
name=ansible
baseurl=ftp://192.168.0.254/ansible
gpgcheck=0
enabled=1
[root@Seek ~]# yum  clean all >/dev/null && yum  repolist  |tail -5
repo id                              repo name                            status
CentOS7-1708                         CentOS7-1708                         9,591
ansible                              ansible                                 18
docker                               docker                                   2
repolist: 9,611



/*****
[root@hiys ~]# ls /var/ftp/iso/RPM-GPG-KEY-CentOS-7 
/var/ftp/iso/RPM-GPG-KEY-CentOS-7

[root@H127 ~]# rpm  --import ftp://192.168.1.254/iso/RPM-GPG-KEY-CentOS-7  ## 导入公钥 方式一
[root@H127 ~]# echo $?
0
[root@H127 ~]# lftp 192.168.1.254      ## 导入公钥 方式 2
lftp 192.168.1.254:~> ls
lftp 192.168.1.254:/> pwd
ftp://192.168.1.254/
lftp 192.168.1.254:/> cd iso/
lftp 192.168.1.254:/iso> ls
lftp 192.168.1.254:/iso> get  RPM-GPG-KEY-CentOS-7
1690 bytes transferred
lftp 192.168.1.254:/iso> exit
[root@H127 ~]# rpm  --import  RPM-GPG-KEY-CentOS-7    ## 导入公钥 方式2

****/
====================== 禁用selinux   [  5  ] ===========================

[root@Seek ~]# sed  -i  's/\(SELINUX=\)enforcing/\1disabled/' /etc/selinux/config 

[root@Seek ~]# sed  -n  7p  /etc/selinux/config
SELINUX=disabled

==================  停止 服务 NetworkManager  ===========

[root@Seek ~]# systemctl is-active   NetworkManager
active
[root@Seek ~]# systemctl is-active   network
active

[root@Seek ~]# systemctl  stop  NetworkManager    ## 与openstack 和 network 冲突

[root@Seek ~]# systemctl  is-active  NetworkManager
inactive

[root@Seek ~]# systemctl  is-active  network
active

======================== 配置网卡  ifcfg-eth0  [  6  ] ============

[root@Seek ~]# cat  /etc/sysconfig/network-scripts/ifcfg-eth0
# Generated by dracut initrd
NAME="eth0"
HWADDR="52:54:00:5b:5f:dc"
ONBOOT=yes     ## 开机自启动
NETBOOT=yes     ## 是 支持网络引导
UUID="9132dfd0-b0d5-4c2d-9dd2-33b17b52a956"
IPV6INIT=yes
BOOTPROTO=dhcp
TYPE=Ethernet

[root@Seek ~]# vim  /etc/sysconfig/network-scripts/ifcfg-eth0

[root@Seek ~]# cat  /etc/sysconfig/network-scripts/ifcfg-eth0
NAME="eth0"
DEVICE="eth0"      ## 指定设备驱动
ONBOOT=yes          ## 开机自启动
NM_CONTROLLED="no"    ## 禁用 NetworkManager 服务
TYPE=Ethernet     ## 网卡类型
BOOTPROTO=dhcp
IPV6INIT=no

/*****
NM_CONTROLLED是 NetworkManager 的参数，它是实时生效的，修改后无需要重启网络服务（或网卡），
如果NM_CONTROLLED=yes，当你修改ifcfg-ethx的文件内容时，如果内容不完全正确，有很大概率导致网络中断。
对于服务器、工作站、集群、虚拟机来说，一般都要把 NetworkManager 服务关掉：
#service NetworkManager status
#service NetworkManager stop
#chkconfig NetworkManager off
/*******************************************************
# cat  /etc/sysconfig/network-scripts/ifcfg-eth0  ## 这是  动 态ip 配置

NAME="eth0"
DEVICE="eth0"
ONBOOT=yes      
NM_CONTROLLED="no"
TYPE=Ethernet
BOOTPROTO=dhcp
IPV6INIT=no

~]# cat  /etc/sysconfig/network-scripts/ifcfg-eth0  ## 这是 静态ip 配置

NAME="eth0"
DEVICE="eth0"
ONBOOT=yes
NM_CONTROLLED="no"
TYPE=Ethernet
IPV6INIT=no

BOOTPROTO="static"
IPADDR="192.168.0.1"
NETMASK="255.255.255.0"
GATEWAY="192.168.0.254"
*********************************/
======================  卸载 防火墙 与 NetworkManager  [  7  ]  ==============
[root@Seek ~]# echo $LANG
en_US.UTF-8

[root@Seek ~]# yum  -y   remove  NetworkManager-*  firewalld-*  python-firewall
....................
Removed:
  NetworkManager.x86_64 1:1.8.0-9.el7              NetworkManager-libnm.x86_64 1:1.8.0-9.el7     
  NetworkManager-team.x86_64 1:1.8.0-9.el7         NetworkManager-tui.x86_64 1:1.8.0-9.el7       
  NetworkManager-wifi.x86_64 1:1.8.0-9.el7         firewalld.noarch 0:0.4.4.4-6.el7              
  firewalld-filesystem.noarch 0:0.4.4.4-6.el7      python-firewall.noarch 0:0.4.4.4-6.el7        

Complete!

=================== 测试 network 能否 连接   [  8  ] ==============

[root@Seek ~]# systemctl  restart  network
[root@Seek ~]# systemctl status  network
● network.service - LSB: Bring up/down networking
   Loaded: loaded (/etc/rc.d/init.d/network; bad; vendor preset: disabled)
   Active: active (running) since Mon 2018-12-03 13:32:12 CST; 11s ago
.....................

[root@Seek ~]# reboot
..............
[root@hiys ~]# ssh  -X   192.168.0.200
root@192.168.0.200's password: 1
.........................
[root@Seek ~]# ifconfig 
eth0: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 1500
        inet 192.168.0.200  netmask 255.255.255.0  broadcast 192.168.0.255
        inet6 fe80::5054:ff:fe5b:5fdc  prefixlen 64  scopeid 0x20<link>
............................
lo: flags=73<UP,LOOPBACK,RUNNING>  mtu 65536
        inet 127.0.0.1  netmask 255.0.0.0
        inet6 ::1  prefixlen 128  scopeid 0x10<host>
..............................

[root@Seek ~]# cat  /etc/sysconfig/network-scripts/ifcfg-eth0 

NAME="eth0"
DEVICE="eth0"     ## 指定设备驱动
ONBOOT=yes
NM_CONTROLLED="no"   ## 禁用 NetworkManager 服务
TYPE=Ethernet       ## 网卡类型
BOOTPROTO=dhcp
IPV6INIT=no

[root@Seek ~]# tty
/dev/pts/0

======================虚拟机  DNS 域名解析 能上网   [  9  ] ====================

[root@Seek ~]# cat  /etc/resolv.conf 
; generated by /usr/sbin/dhclient-script
search vbr               ## 注意 search 必须在 nameserver 的下一行
nameserver 192.168.0.254

[root@Seek ~]#  ping -c2  www.baidu.com    ## 虚拟机可以上网
PING................
64 bytes from 14.215.177.38 (14.215.177.38): icmp_seq=1 ttl=54 time=7.19 ms
64 bytes from 14.215.177.38 (14.215.177.38): icmp_seq=2 ttl=54 time=7.45 ms
..................................

 ===============  虚 拟 机 设置 ssh  免 询问 登陆   [   10   ]  ================

[root@Seek ~]# vim  /etc/ssh/ssh
ssh_config                ssh_host_ecdsa_key.pub    ssh_host_rsa_key
sshd_config               ssh_host_ed25519_key      ssh_host_rsa_key.pub
ssh_host_ecdsa_key        ssh_host_ed25519_key.pub  

[root@Seek ~]# vim  /etc/ssh/ssh_config  ## ssh_config 是针对客户端的配置文件
 41    Port 22

 58 Host *
 59       GSSAPIAuthentication   yes
 60       StrictHostKeyChecking  no    #  免 询问
 61       PasswordAuthentication yes   # 密码验证yes

[root@Seek ~]# cat   -n   /etc/ssh/ssh_config |sed  -n  '41p;58,61p'
    41	   Port 22
    58	Host *
         ## 在客户端登录服务端会用gssapi-keyex,gssapi-with-mic进行身份校验,同样客户端也要支持这种身份验证
        ## 是否允许使用基于 GSSAPI 的用户认证
    59	      GSSAPIAuthentication   yes

    60	      StrictHostKeyChecking  no   ##ssh将自动把计算机的密匙加入"$HOME/.ssh/known_hosts"文件
    61	      PasswordAuthentication yes  ## 设置是否使用口令验证

[root@Seek ~]# vim  /etc/ssh/sshd_config   ## sshd_config 则是针对服务端的配置文件

[root@Seek ~]# cat  -n  /etc/ssh/sshd_config  |sed  -n  '17p;65p'  ## 服务器端sshd_config
    17	Port 22
    65	PasswordAuthentication yes   ## 设置是否使用口令验证

[root@Seek ~]# systemctl  restart  sshd

[root@Seek ~]# systemctl  is-active  sshd
active
[root@Seek ~]# systemctl  is-enabled  sshd
enabled

[root@Seek ~]# cat  -n  /etc/ssh/sshd_config  |sed  -n  '78,80p'  ## 服务器端sshd_config
    78	# GSSAPI options
           ## 在客户端登录服务端会用gssapi-keyex,gssapi-with-mic进行身份校验,同样客户端也要支持这种身份验证
        ## 是否允许使用基于 GSSAPI 的用户认证
    79	GSSAPIAuthentication yes   

           ## 是否在用户退出登录后自动销毁用户凭证缓存
    80	GSSAPICleanupCredentials no

[root@Seek ~]# ls -a
.   anaconda-ks.cfg  .bash_logout   .bashrc  .ssh     .viminfo
..  .bash_history    .bash_profile  .cshrc   .tcshrc

[root@Seek ~]# ls  .ssh/  ## StrictHostKeyChecking no  #ssh将自动把计算机的密匙加入"$HOME/.ssh/known_hosts"文件
known_hosts

[root@Seek ~]# cat  .ssh/known_hosts 
192.168.0.254 ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBPaPxCXbd6vnjaSOyyPw8GCwISPel9dwAOk5lXwvlu/8hR/al2c7CcdihhkDynKmm7W0ownroNHIrD420VMJYr8=

[root@Seek ~]# ls  /etc/ssh/
moduli       ssh_host_ecdsa_key      ssh_host_ed25519_key.pub
ssh_config   ssh_host_ecdsa_key.pub  ssh_host_rsa_key
sshd_config  ssh_host_ed25519_key    ssh_host_rsa_key.pub

/****
ssh_config和sshd_config都是ssh服务器的配置文件，二者区别在于，
前者ssh_config 是针对客户端的配置文件，
后者 sshd_config 则是针对服务端的配置文件

**********************/

================== 安装虚拟化 常用 软件包    [  11  ] ==============

[root@Seek ~]#  yum clean all >/dev/null  && yum repolist |tail -5
repo id                              repo name                            status
CentOS7-1708                         CentOS7-1708                         9,591
ansible                              ansible                                 18
docker                               docker                                   2
repolist: 9,611

[root@Seek ~]# yum  -y  install  git  vim-enhanced   net-tools  tree   lrzsz  \
> libguestfs-tools   libvirt-python    python-setuptools    virt-install   virt-manager \
> virt-v2v     virt-viewer    bind-chroot     bind     chrony   \
> cloud-utils-growpart  cloud-init    vsftpd    elinks   lftp   \
> qemu-kvm   libvirt    libvirt-client   libvirt-daemon   libvirt-daemon-driver-qemu \
> bridge-utils    bash-completion

...................
Installed:
  bash-completion.noarch 1:2.1-6.el7                                                       
  bind.x86_64 32:9.9.4-50.el7                                                              
  bind-chroot.x86_64 32:9.9.4-50.el7                                                       
  bridge-utils.x86_64 0:1.5-9.el7                                                          
  cloud-init.x86_64 0:0.7.9-9.el7.centos.2  
                                               
  cloud-utils-growpart.noarch 0:0.29-2.el7      ### 扩展分区软件cloud-utils-growpart 
  elinks.x86_64 0:0.12-0.36.pre6.el7                                                       
  git.x86_64 0:1.8.3.1-11.el7                                                              
  lftp.x86_64 0:4.4.8-8.el7_3.2                                                            
  libguestfs-tools.noarch 1:1.36.3-6.el7   
                                                
  libvirt.x86_64 0:3.2.0-14.el7                                                            
  libvirt-client.x86_64 0:3.2.0-14.el7                                                     
  libvirt-daemon.x86_64 0:3.2.0-14.el7                                                     
  libvirt-daemon-driver-qemu.x86_64 0:3.2.0-14.el7                                         
  libvirt-python.x86_64 0:3.2.0-3.el7   
                                                   
  lrzsz.x86_64 0:0.12.20-36.el7                                                            
  python-setuptools.noarch 0:0.9.8-7.el7                                                   
  qemu-kvm.x86_64 10:1.5.3-141.el7                                                         
  tree.x86_64 0:1.6.0-10.el7                                                               
  virt-install.noarch 0:1.4.1-7.el7 
                                                       
  virt-manager.noarch 0:1.4.1-7.el7                                                        
  virt-v2v.x86_64 1:1.36.3-6.el7                                                           
  virt-viewer.x86_64 0:5.0-7.el7                                                           
  vsftpd.x86_64 0:3.0.2-22.el7                                                             

Dependency Installed:
  OVMF.noarch 0:20170228-5.gitc325e41585e3.el7                                             
  PyYAML.x86_64 0:3.10-11.el7                                                              
.........................                                                     
  bind-libs.x86_64 32:9.9.4-50.el7                                                         
....................                                                   
  bzip2.x86_64 0:1.0.6-13.el7                                                              
.............................                                           
  fuse.x86_64 0:2.9.2-8.el7                                                                
  fuse-libs.x86_64 0:2.9.2-8.el7                                                           
  gdisk.x86_64 0:0.8.6-5.el7                                                               
  gdk-pixbuf2.x86_64 0:2.36.5-1.el7                                                        
..........................                                                    
  ipxe-roms-qemu.noarch 0:20170123-1.git4e85b27.el7                                        
  iscsi-initiator-utils.x86_64 0:6.2.0.874-4.el7                                           
  iscsi-initiator-utils-iscsiuio.x86_64 0:6.2.0.874-4.el7                                  
  iso-codes.noarch 0:3.46-2.el7                                                            
  jasper-libs.x86_64 0:1.900.1-31.el7                                                      
  jbigkit-libs.x86_64 0:2.0-11.el7                                                         
  js.x86_64 1:1.8.5-19.el7                                                                 
  json-glib.x86_64 0:1.2.6-1.el7                                                           
......................................                                                
  libverto-libevent.x86_64 0:0.2.5-4.el7                                                   
  libvirt-daemon-config-network.x86_64 0:3.2.0-14.el7                                      
............................                                                        
  libyaml.x86_64 0:0.1.4-11.el7_0                                                          
  lsof.x86_64 0:4.87-4.el7                                                                 
  lvm2.x86_64 7:2.02.171-8.el7                                                             
  lvm2-libs.x86_64 7:2.02.171-8.el7                                                        
.......................                                                        
  pcre2.x86_64 0:10.23-2.el7                                                               
  perl-Error.noarch 1:0.17020-2.el7                                                        
  perl-Git.noarch 0:1.8.3.1-11.el7                                                         
  perl-Sys-Guestfs.x86_64 1:1.36.3-6.el7                                                   
  perl-Sys-Virt.x86_64 0:3.2.0-1.el7                                                       
..........................                                                  
  qemu-img.x86_64 10:1.5.3-141.el7                                                         
  qemu-kvm-common.x86_64 10:1.5.3-141.el7                                                  
..........................                                                 
  unzip.x86_64 0:6.0-16.el7                                                                
  usbredir.x86_64 0:0.7.1-2.el7                                                            
  virt-manager-common.noarch 0:1.4.1-7.el7                                                 
...............                                                         
  yum-utils.noarch 0:1.1.31-42.el7                                                         

Complete!

[root@Seek ~]# rpm  -q   git   vim-enhanced   net-tools   tree          lrzsz  
  libguestfs-tools   libvirt-python   python-setuptools   virt-install  virt-manager 
  virt-v2v              virt-viewer   bind-chroot         bind          chrony  
  cloud-utils-growpart   cloud-init   vsftpd              elinks        lftp  
  qemu-kvm           libvirt          libvirt-client    libvirt-daemon  libvirt-daemon-driver-qemu 
  bridge-utils       bash-completion

git-1.8.3.1-11.el7.x86_64
vim-enhanced-7.4.160-5.el7.x86_64
net-tools-2.0-0.24.20131004git.el7.x86_64
tree-1.6.0-10.el7.x86_64 
lrzsz-0.12.20-36.el7.x86_64    ## xshell 上传下载工具 软件包[上传rz、下载sz命令]

libguestfs-tools-1.36.3-6.el7.noarch
libvirt-python-3.2.0-3.el7.x86_64
python-setuptools-0.9.8-7.el7.noarch
virt-install-1.4.1-7.el7.noarch       ## 系统安装工具 【可选功能】
virt-manager-1.4.1-7.el7.noarch       ## 图形管理工具 【可选功能】

virt-v2v-1.36.3-6.el7.x86_64     ## 虚拟机 迁移 工具【可选功能】
virt-viewer-5.0-7.el7.x86_64
bind-chroot-9.9.4-50.el7.x86_64
bind-9.9.4-50.el7.x86_64
chrony-3.1-2.el7.centos.x86_64

cloud-utils-growpart-0.29-2.el7.noarch  ### 扩展分区软件cloud-utils-growpart
cloud-init-0.7.9-9.el7.centos.2.x86_64
vsftpd-3.0.2-22.el7.x86_64
elinks-0.12-0.36.pre6.el7.x86_64
lftp-4.4.8-8.el7_3.2.x86_64

qemu-kvm-1.5.3-141.el7.x86_64   ## 为 kvm 提供底层仿真支持  【虚拟化平台 安装必备软件】
libvirt-3.2.0-14.el7.x86_64
libvirt-client-3.2.0-14.el7.x86_64   ## 用户端软件,提供客户端管理命令 【虚拟化平台 安装必备软件】
libvirt-daemon-3.2.0-14.el7.x86_64    ## 守护进程,管理虚拟机     【虚拟化平台 安装必备软件】
libvirt-daemon-driver-qemu-3.2.0-14.el7.x86_64   ## libvirtd 连接 qemu 的驱动  【虚拟化平台 安装必备软件】

bridge-utils-1.5-9.el7.x86_64       ## 虚拟 交换机 管理工具包
bash-completion-2.1-6.el7.noarch      ## 支持Tab键

/*****
linux中实用的小工具lrzsz
使用xshell或者其他ssh工具连接上服务器后我们需要向服务器中上传或者下载文件
这时候就用到了lrzsz可以代替其他的ftp软件
1 yun  install -y lrzsz      安装
2 rz     上传 
3 sz  test.txt    下载test.txt本地
 注意：该软件只用于小文件，比较大的文件用ftp工具
*****/

[root@Seek ~]# which free
/usr/bin/free
[root@Seek ~]# free
              total        used        free      shared  buff/cache   available
Mem:        2048200       99072     1240968        8580      708160     1741704
Swap:             0           0           0
 /***** total : 总计物理内存的大小。 
used : 已使用多大。 
free : 可用有多少。 
Shared : 多个进程共享的内存总额。 
Buffers/cached : 磁盘缓存的大小。 
used:已使用多大; 
free:可用有多少
*******/
[root@Seek ~]# head  -6  /proc/meminfo    ## 查看内存信息
MemTotal:        2048200 kB
MemFree:         1240872 kB
MemAvailable:    1741732 kB
Buffers:            2068 kB
Cached:           610772 kB
SwapCached:            0 kB

### egrep  -o 'svm|vmx' /proc/cpuinfo  ##查看电脑是否支持 虚拟化# #-o参数(只输出匹配的部分)

[root@Seek ~]# egrep   -o  'svm|vmx'  /proc/cpuinfo

[root@Seek ~]# grep  -n   'physical id'  /proc/cpuinfo 
10:physical id	: 0
36:physical id	: 1

[root@Seek ~]# 
/***
fuser的作用 :
fuser能识别出正在对某个文件或端口访问的进程

lsof 能够找出正在对指定文件访问的进程，

两者之间区别?
fuser有一个特别的用法在于它可以一次杀死那些正在访问指定文件的进程。
********/
[root@Seek ~]# yum list |grep psmisc
psmisc.x86_64                            22.20-15.el7              @CentOS7-1708
[root@Seek ~]# yum  -y install psmisc
.....................
[root@Seek ~]# which  fuser
/usr/sbin/fuser
[root@Seek ~]# rpm  -qf  /usr/sbin/fuser
psmisc-22.20-15.el7.x86_64

========================= 检查 路由 ---  禁用空路由 -  [  12  ]=====================

[root@Seek ~]# route  -n
Kernel IP routing table
Destination     Gateway         Genmask         Flags Metric Ref    Use Iface
0.0.0.0         192.168.0.254   0.0.0.0         UG    0      0        0 eth0
169.254.0.0     0.0.0.0         255.255.0.0     U     1002   0        0 eth0
192.168.0.0     0.0.0.0         255.255.255.0   U     0      0        0 eth0

[root@Seek ~]# ip   route  show

default via 192.168.0.254 dev eth0 
169.254.0.0/16 dev eth0 scope link metric 1002 
192.168.0.0/24 dev eth0 proto kernel scope link src 192.168.0.200 

[root@Seek ~]# cat   /etc/sysconfig/network
# Created by anaconda
[root@Seek ~]# echo  "NOZEROCONF=\"yes\""  >>  /etc/sysconfig/network

[root@Seek ~]# cat   /etc/sysconfig/network
# Created by anaconda
NOZEROCONF="yes"        ## 禁用空路由

[root@Seek ~]# systemctl  restart   network

[root@Seek ~]# route  -n
Kernel IP routing table
Destination     Gateway         Genmask         Flags Metric Ref    Use Iface
0.0.0.0         192.168.0.254   0.0.0.0         UG    0      0        0 eth0
192.168.0.0     0.0.0.0         255.255.255.0   U     0      0        0 eth0

/***
有空研究 
 route add-net 172.16.1.0 netmask 255.255.255.0 gw 10.0.0.5    #  添加网段
 route add-net 10.0.0.0 netmask 255.255.255.0 gw 172.16.1.5     # 添加网段

 添加静态路由
 ~]# ip route add 192.168.56.0/24 via 192.168.56.2 dev eth0

 删除静态路由
只需要把 add 替换成 del，或者更简单的只写目标网络
 ~]# ip route del 192.168.56.0/24
******/

[root@Seek ~]# ip  route  show

default via 192.168.0.254 dev eth0 
192.168.0.0/24 dev eth0 proto kernel scope link src 192.168.0.200 

[root@Seek ~]# ifconfig 
eth0: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 1500
        inet 192.168.0.200  netmask 255.255.255.0  broadcast 192.168.0.255
        inet6 fe80::5054:ff:fe5b:5fdc  prefixlen 64  scopeid 0x20<link>
        ether 52:54:00:5b:5f:dc  txqueuelen 1000  (Ethernet)
..............................

lo: flags=73<UP,LOOPBACK,RUNNING>  mtu 65536
        inet 127.0.0.1  netmask 255.0.0.0
        inet6 ::1  prefixlen 128  scopeid 0x10<host>
        loop  txqueuelen 1  (Local Loopback)
................................
[root@Seek ~]# ip   a
1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN qlen 1
    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
    inet 127.0.0.1/8 scope host lo
........................
2: eth0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc pfifo_fast state UP qlen 1000
    link/ether 52:54:00:5b:5f:dc brd ff:ff:ff:ff:ff:ff
    inet 192.168.0.200/24 brd 192.168.0.255 scope global dynamic eth0
...................................
[root@Seek ~]# ip   address
1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN qlen 1
    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
    inet 127.0.0.1/8 scope host lo
..........................
2: eth0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc pfifo_fast state UP qlen 1000
    link/ether 52:54:00:5b:5f:dc brd ff:ff:ff:ff:ff:ff
    inet 192.168.0.200/24 brd 192.168.0.255 scope global dynamic eth0
.........................

[root@Seek ~]# ip  address   show  
1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN qlen 1
    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
    inet 127.0.0.1/8 scope host lo
...........................
2: eth0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc pfifo_fast state UP qlen 1000
    link/ether 52:54:00:1d:ee:21 brd ff:ff:ff:ff:ff:ff
    inet 192.168.0.200/24 brd 192.168.0.255 scope global dynamic eth0
....................

[root@Seek ~]# echo $LANG   ### 注意英语环境
en_US.UTF-8
[root@Seek ~]# tty
/dev/pts/0

[root@Seek ~]# cat  /etc/resolv.conf 
; generated by /usr/sbin/dhclient-script
search vbr
nameserver 192.168.0.254

[root@Seek ~]# vim  /etc/resolv.conf

[root@Seek ~]# cat   /etc/resolv.conf
nameserver 192.168.0.254     ## 注意 search 必须在 nameserver 的下一行
search vbr

======================  添 加 console配置 [  13  ] =============================

[root@Seek ~]# ll  /etc/default/grub 
-rw-r--r--. 1 root root 218 Dec  4 09:17 /etc/default/grub

[root@Seek ~]# ll  /etc/sysconfig/grub 
lrwxrwxrwx. 1 root root 17 Dec  4 09:13 /etc/sysconfig/grub -> /etc/default/grub

[root@Seek ~]# cat  /etc/default/grub   ## 内核启动参数 配置文件

GRUB_TIMEOUT=5
GRUB_DISTRIBUTOR="$(sed 's, release .*$,,g' /etc/system-release)"
GRUB_DEFAULT=saved
GRUB_DISABLE_SUBMENU=true
GRUB_TERMINAL_OUTPUT="console"
GRUB_CMDLINE_LINUX="rhgb quiet"
GRUB_DISABLE_RECOVERY="true"

[root@Seek ~]# vim  /etc/default/grub

[root@Seek ~]# cat  /etc/default/grub  ## 添加串口终端
GRUB_TIMEOUT=5
GRUB_DISTRIBUTOR="$(sed 's, release .*$,,g' /etc/system-release)"
GRUB_DEFAULT=saved
GRUB_DISABLE_SUBMENU=true
GRUB_TERMINAL_OUTPUT="serial  console"         ##串口终端
GRUB_SERIAL_COMMAND="serial --unit=1 --speed=115200"    ## 串口连接速率 是 115200
GRUB_CMDLINE_LINUX="biosdevname=0 net.ifnames=0 console=tty0 console=ttyS0,115200n8" ##注意 115200n8
GRUB_DISABLE_LINUX_UUID="true"    ## 不使用uuid
GRUB_ENABLE_LINUX_LABEL="true"
GRUB_DISABLE_RECOVERY="true"

/**** tty0 字符终端
ttyS0 串口终端
serial console  串口终端配置
目的: 台机已经装好Linux，显示器有问题，平时一般都SSH控制，当Linux网络挂的时候，想通过串口来管理。
硬件:台机自带两个串口(上面的是COM1)[under Windows] or ttyS0[under Linux))，
笔记本T61p没有串口，买了个USB转串口。
同时需要串口交叉线一根(NULL modem Cable),母对母(公的是针)，都是凹口那种。
  控制台定向到串口终端
物理连接好串口； 然后配置： 编辑/boot/grub/grub.conf ，添加内容： console=ttyS0,115200n8  console=tty0

[root@Seek ~]# ll  /etc/default/grub 
-rw-r--r-- 1 root root 394 Dec  3 16:22 /etc/default/grub

[root@Seek ~]# ll  /etc/sysconfig/grub 
lrwxrwxrwx. 1 root root 17 Dec  3 11:50 /etc/sysconfig/grub -> /etc/default/grub

================ 重新生成grub.cfg  [ 14 ]重新生成GRUB配置并更新内核参数====================

[root@Seek ~]# ll   /etc/default/grub
-rw-r--r--. 1 root root 394 Dec  4 13:06 /etc/default/grub

[root@Seek ~]# ll  /etc/sysconfig/grub 
lrwxrwxrwx. 1 root root 17 Dec  4 09:13 /etc/sysconfig/grub -> /etc/default/grub

[root@Seek ~]# ll  /boot/grub2/grub.cfg 
-rw-r--r--. 1 root root 4071 Dec  4 09:17 /boot/grub2/grub.cfg

[root@Seek ~]# sed  -n  '100p;114p'  /boot/grub2/grub.cfg

	linux16 /boot/vmlinuz-3.10.0-693.el7.x86_64 root=UUID=cff83d0f-d6d9-46cd-9361-cd49ef30bedf ro rhgb quiet LANG=en_US.UTF-8
	linux16 /boot/vmlinuz-0-rescue-3a23bfec491445d6b8b2bafca80e9ab4 root=UUID=cff83d0f-d6d9-46cd-9361-cd49ef30bedf ro rhgb quiet


[root@Seek ~]# which  grub2-mkconfig
/usr/sbin/grub2-mkconfig
[root@Seek ~]# type  grub2-mkconfig
grub2-mkconfig is /usr/sbin/grub2-mkconfig

[root@Seek ~]# type  cd
cd is a shell builtin

[root@Seek ~]# grub2-mkconfig  -o  /boot/grub2/grub.cfg  ## 重新生成GRUB配置并更新内核参数(是为了真机能virsh console进行管理)

Generating grub configuration file ...
Found linux image: /boot/vmlinuz-3.10.0-693.el7.x86_64
Found initrd image: /boot/initramfs-3.10.0-693.el7.x86_64.img
Found linux image: /boot/vmlinuz-0-rescue-3a23bfec491445d6b8b2bafca80e9ab4
Found initrd image: /boot/initramfs-0-rescue-3a23bfec491445d6b8b2bafca80e9ab4.img
done


===================== 修改/etc/fstab 文件中 UUID 手工修改成系统设备  【 15 】============

[root@Seek ~]# tail  -3  /etc/fstab 
# See man pages fstab(5), findfs(8), mount(8) and/or blkid(8) for more info
#
UUID=cff83d0f-d6d9-46cd-9361-cd49ef30bedf /                       xfs     defaults        0 0

[root@Seek ~]# lsblk
NAME   MAJ:MIN RM SIZE RO TYPE MOUNTPOINT
vda    253:0    0   3G  0 disk 
└─vda1 253:1    0   3G  0 part /

[root@Seek ~]# blkid 
/dev/vda1: UUID="cff83d0f-d6d9-46cd-9361-cd49ef30bedf" TYPE="xfs" 

[root@Seek ~]# sed  -i  's/UUID=cff83d0f.*\(xfs\).*\(defaults\).*/\/dev\/vda1    \/    \1     \2    0   0/'  /etc/fstab 

[root@Seek ~]# tail   -3  /etc/fstab
# See man pages fstab(5), findfs(8), mount(8) and/or blkid(8) for more info
#
/dev/vda1    /    xfs     defaults    0   0

[root@Seek ~]# ls
anaconda-ks.cfg
[root@Seek ~]# ll  anaconda-ks.cfg 
-rw-------. 1 root root 1459 Dec  4 09:17 anaconda-ks.cfg

[root@Seek ~]# cat  -n  anaconda-ks.cfg
     1	#version=DEVEL
     2	# System authorization information
     3	auth --enableshadow --passalgo=sha512
     4	# Use network installation
     5	url --url="ftp://176.121.213.151/CentOS7-1708/"
     6	# Use graphical install
     7	graphical
     8	# Run the Setup Agent on first boot
     9	firstboot --enable
    10	ignoredisk --only-use=vda
    11	# Keyboard layouts
    12	keyboard --vckeymap=us --xlayouts='us'
    13	# System language
    14	lang en_US.UTF-8
    15	
    16	# Network information
    17	network  --bootproto=dhcp --device=eth0 --ipv6=auto --activate
    18	network  --hostname=localhost.localdomain
    19	
    20	# Root password
    21	rootpw --iscrypted $6$hrHt9RqEzRrz5TQe$2.FrvykEqp42Oqh7oryO1DMmc94OoVReHt4hOYivlATY9nNnWkW42SXXfhhEkrV/W0ZCTBsUteTVATStapSpd0
    22	# System services
    23	services --enabled="chronyd"
    24	# System timezone
    25	timezone Asia/Shanghai --isUtc
    26	user --name=lily --password=$6$KXcF7Cf8FhBPhoCt$s/IZfHbbRQ9PddHft9T/hgvx1iwkzPYJ8rVR0W5Vpd0SbG.5y9Cran4HvSa9evsE3UnNSFkUmdODYbcnni4ja0 --iscrypted --gecos="lily"
    27	# System bootloader configuration
    28	bootloader --location=mbr --boot-drive=vda
    29	# Partition clearing information
    30	clearpart --none --initlabel
    31	# Disk partitioning information
    32	part / --fstype="xfs" --ondisk=vda --size=3071
    33	
    34	%packages
    35	@^minimal
    36	@core
    37	chrony
    38	
    39	%end
    40	
    41	%addon com_redhat_kdump --disable --reserve-mb='auto'
    42	
    43	%end
    44	
    45	%anaconda
    46	pwpolicy root --minlen=6 --minquality=1 --notstrict --nochanges --notempty
    47	pwpolicy user --minlen=6 --minquality=1 --notstrict --nochanges --emptyok
    48	pwpolicy luks --minlen=6 --minquality=1 --notstrict --nochanges --notempty
    49	%end
[root@Seek ~]# 

[root@Seek ~]# reboot

==================== 测试 真机 可以 console 远程连接   【 16 】================

[root@hiys ~]# virsh  console  Seek
Connected to domain Seek
Escape character is ^]
                            回车
CentOS Linux 7 (Core)
Kernel 3.10.0-693.el7.x86_64 on an x86_64

Seek login: root
Password: 1
Last login: Mon Dec  3 13:35:53 from 192.168.0.254
[root@Seek ~]# ifconfig 
eth0: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 1500
        inet 192.168.0.200  netmask 255.255.255.0  broadcast 192.168.0.255
        inet6 fe80::5054:ff:fe5b:5fdc  prefixlen 64  scopeid 0x20<link>
................................
lo: flags=73<UP,LOOPBACK,RUNNING>  mtu 65536
        inet 127.0.0.1  netmask 255.0.0.0
        inet6 ::1  prefixlen 128  scopeid 0x10<host>
        loop  txqueuelen 1  (Local Loopback)
.........................

virbr0: flags=4099<UP,BROADCAST,MULTICAST>  mtu 1500
        inet 192.168.122.1  netmask 255.255.255.0  broadcast 192.168.122.255
        ether 52:54:00:c1:6c:55  txqueuelen 1000  (Ethernet)
...................
[root@seek ~]# route  -n
Kernel IP routing table
Destination     Gateway         Genmask         Flags Metric Ref    Use Iface
0.0.0.0         192.168.0.254   0.0.0.0         UG    0      0        0 eth0
192.168.0.0     0.0.0.0         255.255.255.0   U     0      0        0 eth0
192.168.122.0   0.0.0.0         255.255.255.0   U     0      0        0 virbr0

[root@seek ~]# ip  route  show
default via 192.168.0.254 dev eth0 
192.168.0.0/24 dev eth0 proto kernel scope link src 192.168.0.200 
192.168.122.0/24 dev virbr0 proto kernel scope link src 192.168.122.1 

[root@seek ~]# cat   -n   /etc/ssh/ssh_config |sed  -n  '41p;58,61p'  ## 客户端ssh_config
    41	   Port 22
    58	Host *
    59	      GSSAPIAuthentication   yes
    60	      StrictHostKeyChecking  no
    61	      PasswordAuthentication yes

[root@seek ~]#  cat  -n  /etc/ssh/sshd_config  |sed  -n  '17p;65p'  ## 服务端 sshd_config
    17	Port 22
    65	PasswordAuthentication no

[root@seek ~]# sed   -n   '65s/no/yes/p'   /etc/ssh/sshd_config 
PasswordAuthentication yes

[root@seek ~]# sed  -i   '65s/no/yes/'   /etc/ssh/sshd_config  ## 注意不能ssh 登陆的解决办法,服务端 '65s/no/yes/' 

[root@seek ~]# cat   -n  /etc/ssh/sshd_config |sed  -n   '17p;65p'
    17	Port 22
    65	PasswordAuthentication yes  

[root@Seek ~]# sed  -n  38p  /etc/ssh/sshd_config 
PermitRootLogin yes

[root@seek ~]# systemctl restart   sshd

[root@seek ~]# systemctl is-enabled   sshd
enabled

[root@Seek ~]# echo  $LANG
en_US.UTF-8
[root@Seek ~]# tty
/dev/ttyS0

[root@Seek ~]#  Ctrl  +  ]   退出 

/*****[root@hiys ~]# ssh  -X   192.168.0.200   ## 注意不能ssh 登陆 ，下面的解决办法--->
Permission denied (publickey,gssapi-keyex,gssapi-with-mic).
******/

[root@hiys ~]# ssh  -X   192.168.0.200
root@192.168.0.200's password: 1

[root@seek ~]# tty
/dev/pts/0

[root@seek ~]# sed  -n  '17p;65p'   /etc/ssh/sshd_config 
Port 22
PasswordAuthentication yes

[root@Seek ~]# cat   /etc/resolv.conf
; generated by /usr/sbin/dhclient-script
search vbr
nameserver 192.168.0.254

[root@seek ~]# echo  -e  "nameserver 192.168.0.254\nsearch vbr" > /etc/resolv.conf

[root@seek ~]# cat  /etc/resolv.conf 
nameserver 192.168.0.254   ## 注意 search 必须在 nameserver 的下一行
search vbr

[root@Seek ~]# rpm  -qa  |grep  cloud-  ## 安装扩展分区软件

cloud-init-0.7.9-9.el7.centos.2.x86_64
cloud-utils-growpart-0.29-2.el7.noarch

[root@seek ~]# ls  /etc/sysconfig/network-scripts/
ifcfg-eth0   ifdown-ib    ifdown-ppp       ifdown-tunnel  ifup-ib    ifup-plusb   ifup-Team         network-functions
ifcfg-lo     ifdown-ippp  ifdown-routes    ifup           ifup-ippp  ifup-post    ifup-TeamPort     network-functions-ipv6
ifdown       ifdown-ipv6  ifdown-sit       ifup-aliases   ifup-ipv6  ifup-ppp     ifup-tunnel
ifdown-bnep  ifdown-isdn  ifdown-Team      ifup-bnep      ifup-isdn  ifup-routes  ifup-wireless
ifdown-eth   ifdown-post  ifdown-TeamPort  ifup-eth       ifup-plip  ifup-sit     init.ipv6-global

[root@seek ~]# ls
anaconda-ks.cfg
[root@seek ~]# ll  anaconda-ks.cfg 
-rw-------. 1 root root 1459 Dec  4 09:17 anaconda-ks.cfg
[root@seek ~]# cat  -n  anaconda-ks.cfg
     1	#version=DEVEL
     2	# System authorization information
     3	auth --enableshadow --passalgo=sha512
     4	# Use network installation
     5	url --url="ftp://176.121.213.151/CentOS7-1708/"
     6	# Use graphical install
     7	graphical
     8	# Run the Setup Agent on first boot
     9	firstboot --enable
    10	ignoredisk --only-use=vda
    11	# Keyboard layouts
    12	keyboard --vckeymap=us --xlayouts='us'
    13	# System language
    14	lang en_US.UTF-8
    15	
    16	# Network information
    17	network  --bootproto=dhcp --device=eth0 --ipv6=auto --activate
    18	network  --hostname=localhost.localdomain
    19	
    20	# Root password
    21	rootpw --iscrypted $6$hrHt9RqEzRrz5TQe$2.FrvykEqp42Oqh7oryO1DMmc94OoVReHt4hOYivlATY9nNnWkW42SXXfhhEkrV/W0ZCTBsUteTVATStapSpd0
    22	# System services
    23	services --enabled="chronyd"
    24	# System timezone
    25	timezone Asia/Shanghai --isUtc
    26	user --name=lily --password=$6$KXcF7Cf8FhBPhoCt$s/IZfHbbRQ9PddHft9T/hgvx1iwkzPYJ8rVR0W5Vpd0SbG.5y9Cran4HvSa9evsE3UnNSFkUmdODYbcnni4ja0 --iscrypted --gecos="lily"
    27	# System bootloader configuration
    28	bootloader --location=mbr --boot-drive=vda
    29	# Partition clearing information
    30	clearpart --none --initlabel
    31	# Disk partitioning information
    32	part / --fstype="xfs" --ondisk=vda --size=3071
    33	
    34	%packages
    35	@^minimal
    36	@core
    37	chrony
    38	
    39	%end
    40	
    41	%addon com_redhat_kdump --disable --reserve-mb='auto'
    42	
    43	%end
    44	
    45	%anaconda
    46	pwpolicy root --minlen=6 --minquality=1 --notstrict --nochanges --notempty
    47	pwpolicy user --minlen=6 --minquality=1 --notstrict --nochanges --emptyok
    48	pwpolicy luks --minlen=6 --minquality=1 --notstrict --nochanges --notempty
    49	%end

[root@seek ~]# elinks   -dump  www.baidu.com  |awk 'NR>=27&&NR<32{print NR,$0}'
27                                       百度
28 
29    [39]把百度设为主页[40]关于百度[41]About  Baidu[42]百度推广
30 
31    ©2018 Baidu [43]使用百度前必读 [44]意见反馈 京ICP证030173号  [45]京公网安

[root@seek ~]# elinks   -dump  www.baidu.com  |awk 'NR>24&&NR<32{print NR"\t\t"$0}'
25		   库 [38]更多»
26		
27		                                      百度
28		
29		   [39]把百度设为主页[40]关于百度[41]About  Baidu[42]百度推广
30		
31		   ©2018 Baidu [43]使用百度前必读 [44]意见反馈 京ICP证030173号  [45]京公网安

[root@seek ~]# cat  /etc/hostname 
seek
[root@seek ~]# echo  Seek  >/etc/hostname
[root@seek ~]# cat  /etc/hostname 
Seek
[root@seek ~]# cat  /etc/resolv.conf 
nameserver 192.168.0.254
search vbr
 
[root@seek ~]# shutdown  -h  now
Connection to 192.168.0.200 closed by remote host.
Connection to 192.168.0.200 closed.

[root@hiys ~]# which  virt-sysprep 
/usr/bin/virt-sysprep

[root@hiys ~]# rpm  -qf   /usr/bin/virt-sysprep 
libguestfs-tools-c-1.36.3-6.el7.x86_64

[root@hiys ~]# rpm  -qa  |grep  libguestfs
libguestfs-1.36.3-6.el7.x86_64
libguestfs-tools-c-1.36.3-6.el7.x86_64
libguestfs-tools-1.36.3-6.el7.noarch
libguestfs-winsupport-7.2-2.el7.x86_64

[root@hiys ~]# virt-sysprep   -d  Seek   ## 关闭虚拟机后执行信息清理工作
[   0.0] Examining the guest ...
[  19.9] Performing "abrt-data" ...
[  19.9] Performing "backup-files" ...
[  20.3] Performing "bash-history" ...
[  20.3] Performing "blkid-tab" ...
[  20.3] Performing "crash-data" ...
[  20.3] Performing "cron-spool" ...
[  20.3] Performing "dhcp-client-state" ...
[  20.4] Performing "dhcp-server-state" ...
[  20.4] Performing "dovecot-data" ...
[  20.4] Performing "logfiles" ...
[  20.4] Performing "machine-id" ...
[  20.4] Performing "mail-spool" ...
[  20.4] Performing "net-hostname" ...
[  20.4] Performing "net-hwaddr" ...
[  20.4] Performing "pacct-log" ...
[  20.4] Performing "package-manager-cache" ...
[  20.4] Performing "pam-data" ...
[  20.4] Performing "passwd-backups" ...
[  20.4] Performing "puppet-data-log" ...
[  20.4] Performing "rh-subscription-manager" ...
[  20.4] Performing "rhn-systemid" ...
[  20.4] Performing "rpm-db" ...
[  20.4] Performing "samba-db-log" ...
[  20.4] Performing "script" ...
[  20.4] Performing "smolt-uuid" ...
[  20.4] Performing "ssh-hostkeys" ...
[  20.4] Performing "ssh-userdir" ...
[  20.5] Performing "sssd-db-log" ...
[  20.5] Performing "tmp-files" ...
[  20.5] Performing "udev-persistent-net" ...
[  20.5] Performing "utmp" ...
[  20.5] Performing "yum-uuid" ...
[  20.5] Performing "customize" ...
[  20.5] Setting a random seed
[  21.1] Performing "lvm-uuids" ...
[root@hiys ~]# ls  /var/log/libvirt/qemu/
guestfs-c1qm0j2pdl2cb6pt.log  Seek.log  win2008.log

[root@hiys ~]# ll  /var/log/libvirt/qemu/guestfs-c1qm0j2pdl2cb6pt.log 
-rw------- 1 root root 2604 Dec  4 14:44 /var/log/libvirt/qemu/guestfs-c1qm0j2pdl2cb6pt.log

[root@hiys ~]# ll  /var/log/libvirt/qemu/Seek.log 
-rw------- 1 root root 15656 Dec  4 14:42 /var/log/libvirt/qemu/Seek.log

[root@hiys ~]# du  -sh  /var/lib/libvirt/images/Seek.qcow2 
1.7G	/var/lib/libvirt/images/Seek.qcow2

[root@hiys ~]# ll /var/lib/libvirt/images/Seek.qcow2
-rwxrwxrwx 1 root root 1748172800 Dec  4 14:44 /var/lib/libvirt/images/Seek.qcow2

[root@hiys ~]# ls  /var/lib/libvirt/images/
bin     content  exam  lost+found  qemu        Student.sh             tedu-wallpaper-weekend.png  Weekend.sh
conf.d  db       iso   node.qcow2  Seek.qcow2  tedu-wallpaper-01.png  vsftpd.conf                 win.img

[root@hiys images]# du  -sh  /var/lib/libvirt/images/node.qcow2 
1.2G	/var/lib/libvirt/images/node.qcow2

/***[root@hiys ~]# rm  -f  /var/log/libvirt/qemu/Seek.log 
[root@hiys ~]# ls  /var/log/libvirt/qemu/
win2008.log
***/

===================== 建立 基于 Seek.qcow2  的第二个 3网卡 虚拟机模版 ===============

[root@hiys ~]# cd  /var/lib/libvirt/images/
[root@hiys images]# ls
bin     content  exam  lost+found  qemu        Student.sh             tedu-wallpaper-weekend.png  Weekend.sh
conf.d  db       iso   node.qcow2  Seek.qcow2  tedu-wallpaper-01.png  vsftpd.conf                 win.img

[root@hiys images]# qemu-img  create   -b   Seek.qcow2   -f  qcow2   VM.img   20G

Formatting 'VM.img', fmt=qcow2 size=21474836480 backing_file=Seek.qcow2 encryption=off cluster_size=65536 lazy_refcounts=off refcount_bits=16

/****
vim  

大写 字母 O 插入 光标所在行的 上一行
小写 字母 o  插入 光标所在行的 下一行

****/
[root@hiys images]# cd  /etc/libvirt/qemu/

[root@hiys qemu]# ls
autostart  networks  Seek.xml  VM.xml  win2008.xml

[root@hiys qemu]# cat  VM.xml 

<domain type='kvm'>
  <name>VM</name>               ## 修改点 1
  <memory unit='GB'>4</memory>
  <currentMemory unit='GB'>2</currentMemory>
  <vcpu placement='static'>2</vcpu>
  <os>               ##系统信息
    <type arch='x86_64' machine='pc'>hvm</type>
    <boot dev='hd'/>     ##开机从哪里启动
    <bootmenu enable='yes'/>
    <bios useserial='yes'/>
  </os>
  <features>   ##硬件资源特性
    <acpi/>
    <apic/>
  </features>
  <cpu mode='host-passthrough'>
  </cpu>
  <clock offset='localtime'/>

        ## 突发事件处理定义了当发生poweroff时，直接destroy虚拟机。
    ## 当虚拟机reboot、crash的时候，会自动采用重启操作，还可以自定义。

  <on_poweroff>destroy</on_poweroff>   ##突发事件处理

  <on_reboot>restart</on_reboot>
  <on_crash>restart</on_crash>
  <devices>     ##外设资源
    <emulator>/usr/libexec/qemu-kvm</emulator>
    <disk type='file' device='disk'>    ##描述虚拟磁盘image
      <driver name='qemu' type='qcow2'/>
      <source file='/var/lib/libvirt/images/VM.img'/>    ## 修改点 2
      <target dev='vda' bus='virtio'/>
    </disk>

/****************如果要把VM.img 作为模版，则建议只有一个磁盘合适。 删除此附加虚拟磁盘disk-VM.img
    <disk type='file' device='disk'>
      <driver name='qemu' type='qcow2'/>
      <source file='/var/lib/libvirt/images/disk-VM.img'/>  ## 修改点 3
      <target dev='vda' bus='virtio'/>
    </disk>
********************************************************************/

    <interface type='bridge'>   ##虚拟网络，基于网桥
      <source bridge='vbr'/>
      <model type='virtio'/>
    </interface>
    <interface type='bridge'>
      <source bridge='vbr1'/>
      <model type='virtio'/>
    </interface>
    <interface type='bridge'>
      <source bridge='private2'/>
      <model type='virtio'/>
    </interface>
    <channel type='unix'>
      <target type='virtio' name='org.qemu.guest_agent.0'/>
    </channel>
    <serial type='pty'></serial>   ##串口信息
    <console type='pty'>
      <target type='serial'/>
    </console>
    <memballoon model='virtio'></memballoon>
  </devices>
</domain>

[root@hiys qemu]# cp  VM.xml   VM.xml.txt

[root@hiys qemu]# cat  VM.xml.txt 
<domain type='kvm'>
  <name>VM</name>
  <memory unit='GB'>4</memory>
  <currentMemory unit='GB'>2</currentMemory>
  <vcpu placement='static'>2</vcpu>
  <os>
    <type arch='x86_64' machine='pc'>hvm</type>
    <boot dev='hd'/>
    <bootmenu enable='yes'/>
    <bios useserial='yes'/>
  </os>
  <features>
    <acpi/>
    <apic/>
  </features>
  <cpu mode='host-passthrough'>
  </cpu>
  <clock offset='localtime'/>
  <on_poweroff>destroy</on_poweroff>
  <on_reboot>restart</on_reboot>
  <on_crash>restart</on_crash>
  <devices>
    <emulator>/usr/libexec/qemu-kvm</emulator>
    <disk type='file' device='disk'>
      <driver name='qemu' type='qcow2'/>
      <source file='/var/lib/libvirt/images/VM.img'/>
      <target dev='vda' bus='virtio'/>
    </disk>
    <disk type='file' device='disk'>
      <driver name='qemu' type='qcow2'/>
      <source file='/var/lib/libvirt/images/disk-VM.img'/>
      <target dev='vda' bus='virtio'/>
    </disk>
    <interface type='bridge'>
      <source bridge='vbr'/>
      <model type='virtio'/>
    </interface>
    <interface type='bridge'>
      <source bridge='vbr1'/>
      <model type='virtio'/>
    </interface>
    <interface type='bridge'>
      <source bridge='private2'/>
      <model type='virtio'/>
    </interface>
    <channel type='unix'>
      <target type='virtio' name='org.qemu.guest_agent.0'/>
    </channel>
    <serial type='pty'></serial>
    <console type='pty'>
      <target type='serial'/>
    </console>
    <memballoon model='virtio'></memballoon>
  </devices>
</domain>
[root@hiys qemu]# 

[root@hiys qemu]# vim  VM.xml

[root@hiys qemu]# cat  -n  VM.xml
     1	<domain type='kvm'>
     2	  <name>VM</name>
     3	  <memory unit='GB'>4</memory>
     4	  <currentMemory unit='GB'>2</currentMemory>
     5	  <vcpu placement='static'>2</vcpu>
     6	  <os>
     7	    <type arch='x86_64' machine='pc'>hvm</type>
     8	    <boot dev='hd'/>
     9	    <bootmenu enable='yes'/>
    10	    <bios useserial='yes'/>
    11	  </os>
    12	  <features>
    13	    <acpi/>
    14	    <apic/>
    15	  </features>
    16	  <cpu mode='host-passthrough'>
    17	  </cpu>
    18	  <clock offset='localtime'/>
    19	  <on_poweroff>destroy</on_poweroff>
    20	  <on_reboot>restart</on_reboot>
    21	  <on_crash>restart</on_crash>
    22	  <devices>
    23	    <emulator>/usr/libexec/qemu-kvm</emulator>
    24	    <disk type='file' device='disk'>
    25	      <driver name='qemu' type='qcow2'/>
    26	      <source file='/var/lib/libvirt/images/VM.img'/>
    27	      <target dev='vda' bus='virtio'/>
    28	    </disk>
    29	    <interface type='bridge'>
    30	      <source bridge='vbr'/>
    31	      <model type='virtio'/>
    32	    </interface>
    33	    <interface type='bridge'>
    34	      <source bridge='vbr1'/>
    35	      <model type='virtio'/>
    36	    </interface>
    37	    <interface type='bridge'>
    38	      <source bridge='private2'/>
    39	      <model type='virtio'/>
    40	    </interface>
    41	    <channel type='unix'>
    42	      <target type='virtio' name='org.qemu.guest_agent.0'/>
    43	    </channel>
    44	    <serial type='pty'></serial>
    45	    <console type='pty'>
    46	      <target type='serial'/>
    47	    </console>
    48	    <memballoon model='virtio'></memballoon>
    49	  </devices>
    50	</domain>

[root@hiys qemu]# virsh  net-dumpxml  private2
<network>
  <name>private2</name>
  <uuid>dca824f3-cdfc-4fcd-9b98-f8a46656c27d</uuid>
  <bridge name='private2' stp='on' delay='0'/>
  <mac address='52:54:00:f8:f9:d7'/>
  <domain name='private2'/>
  <ip address='192.168.2.254' netmask='255.255.255.0'>
  </ip>
</network>

[root@hiys qemu]# virsh  define   /etc/libvirt/qemu/VM.xml
Domain VM defined from /etc/libvirt/qemu/VM.xml

[root@hiys qemu]# virsh  start  VM
Domain VM started

[root@hiys qemu]# virsh  console  VM
Connected to domain VM
Escape character is ^]
[   74.187336] cloud-init[812]: .............

----------------------- 失败 -----------------------------

[root@hiys ~]# mkdir  /guestmount
[root@hiys ~]# ls  /guestmount/

[root@hiys ~]# ls  /var/lib/libvirt/images/
bin      db    lost+found  Seek.qcow2             tedu-wallpaper-weekend.png  Weekend.sh
conf.d   exam  node.qcow2  Student.sh             VM.img                      win.img
content  iso   qemu        tedu-wallpaper-01.png  vsftpd.conf

[root@hiys ~]# ll  /var/log/libvirt/qemu/guestfs-c1qm0j2pdl2cb6pt.log 
-rw------- 1 root root 2604 Dec  4 14:44 /var/log/libvirt/qemu/guestfs-c1qm0j2pdl2cb6pt.log

[root@hiys ~]# which  guestmount 
/usr/bin/guestmount
                                 ## guestmount  -a 参数指定虚拟磁盘  参数 -i 自动检测客户机磁盘文件，并挂载
[root@hiys ~]# guestmount  -a  /var/lib/libvirt/images/Seek.qcow2   -i   /guestmount/

[root@hiys ~]# ls  /var/log/libvirt/qemu/
guestfs-986f1b2lmir2a52a.log  guestfs-c1qm0j2pdl2cb6pt.log  Seek.log  VM.log  win2008.log

[root@hiys ~]# ll  /var/log/libvirt/qemu/guestfs-986f1b2lmir2a52a.log 
-rw------- 1 root root 2452 Dec  4 16:35 /var/log/libvirt/qemu/guestfs-986f1b2lmir2a52a.log

[root@hiys ~]# cd  /guestmount/

[root@hiys guestmount]# ls
bin   dev  home  lib64  mnt  proc  run   srv  tmp  var
boot  etc  lib   media  opt  root  sbin  sys  usr

[root@hiys guestmount]# virsh  list
 Id    Name                           State
----------------------------------------------------
 8     guestfs-986f1b2lmir2a52a       running

[root@hiys guestmount]# chroot  /guestmount/   ## 注意从chroot 这里开始，进入虚拟机 Seek中了
[root@hiys /]# pwd
/
[root@hiys /]# ls
bin   dev  home  lib64  mnt  proc  run   srv  tmp  var
boot  etc  lib   media  opt  root  sbin  sys  usr

[root@hiys /]# rpm  -qf  /usr/bin/guestmount
libguestfs-tools-c-1.36.3-6.el7.x86_64

[root@hiys /]# rpm   -qa  |grep guestfs

libguestfs-tools-c-1.36.3-6.el7.x86_64
libguestfs-1.36.3-6.el7.x86_64
libguestfs-tools-1.36.3-6.el7.noarch
libguestfs-winsupport-7.2-2.el7.x86_64

[root@hiys /]# ls  /root/   ## 进入虚拟机 Seek中
[root@hiys /]# ll   /root/
total 0
[root@hiys /]# ls  -ld  /root/
dr-xr-x---. 3 root root 122 Dec  4 14:44 /root/
[root@hiys /]# ll  /etc/default/grub 
-rw-r--r--. 1 root root 394 Dec  4 13:06 /etc/default/grub

/*************** 注意区别真机 中的文件 和虚拟机 Seek 中的文件 /etc/default/grub 区别 ？？？
[root@hiys ~]#  cat   /etc/default/grub 
GRUB_TIMEOUT=5
GRUB_DISTRIBUTOR="$(sed 's, release .*$,,g' /etc/system-release)"
GRUB_DEFAULT=saved
GRUB_DISABLE_SUBMENU=true
GRUB_TERMINAL_OUTPUT="console"
GRUB_CMDLINE_LINUX="crashkernel=auto rhgb quiet"
GRUB_DISABLE_RECOVERY="true"
[root@hiys ~]# tty  ## 注意区别tty
/dev/pts/1
****************************/

[root@hiys /]# tty    ## 注意 虚拟机 Seek 区别 
not a tty

[root@hiys /]# cat   /etc/default/grub  ### 虚拟机 Seek 中的文件
GRUB_TIMEOUT=5
GRUB_DISTRIBUTOR="$(sed 's, release .*$,,g' /etc/system-release)"
GRUB_DEFAULT=saved
GRUB_DISABLE_SUBMENU=true
GRUB_TERMINAL_OUTPUT="serial  console"
GRUB_SERIAL_COMMAND="serial --unit=1 --speed=115200"
GRUB_CMDLINE_LINUX="biosdevname=0 net.ifnames=0 console=tty0 console=ttyS0,115200n8"
GRUB_DISABLE_LINUX_UUID="true"
GRUB_ENABLE_LINUX_LABEL="true"
GRUB_DISABLE_RECOVERY="true"

[root@hiys /]# vim  /etc/default/grub

[root@hiys /]# cat   /etc/default/grub

GRUB_TIMEOUT=5
GRUB_DISTRIBUTOR="$(sed 's, release .*$,,g' /etc/system-release)"
GRUB_DEFAULT=saved
GRUB_DISABLE_SUBMENU=true
GRUB_TERMINAL_OUTPUT="serial  console"
GRUB_SERIAL_COMMAND="serial --unit=1 --speed=115200"
GRUB_CMDLINE_LINUX="biosdevname=0 net.ifnames=0 console=tty0 console=ttyS0,115200"
GRUB_DISABLE_LINUX_UUID="true"
GRUB_ENABLE_LINUX_LABEL="true"
GRUB_DISABLE_RECOVERY="true"

[root@hiys /]# cd
[root@hiys ~]# pwd
/root
[root@hiys ~]# exit
exit

[root@hiys guestmount]# cd
[root@hiys ~]# umount   /guestmount/

[root@hiys guestmount]# virsh  shutdown  guestfs-986f1b2lmir2a52a
Domain guestfs-986f1b2lmir2a52a is being shutdown

 [root@hiys ~]# virsh  destroy  guestfs-986f1b2lmir2a52a
域 guestfs-986f1b2lmir2a52a 被删除

[root@hiys ~]# df  -hT
..............
.............

[root@hiys ~]# virsh start  Seek
Domain Seek started

[root@hiys ~]# ssh  -X  192.168.0.200
ssh: connect to host 192.168.0.200 port 22: Connection refused

[root@hiys ~]# virsh  console   Seek
...............................

CentOS Linux 7 (Core)
Kernel 3.10.0-693.el7.x86_64 on an x86_64

Seek login: root
Password: 
[root@Seek ~]# hostname
Seek
[root@Seek ~]# ifconfig 
eth0: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 1500
        inet 192.168.0.200  netmask 255.255.255.0  broadcast 192.168.0.255
        inet6 fe80::5054:ff:fe1d:ee21  prefixlen 64  scopeid 0x20<link>
..............................

lo: flags=73<UP,LOOPBACK,RUNNING>  mtu 65536
        inet 127.0.0.1  netmask 255.0.0.0
        inet6 ::1  prefixlen 128  scopeid 0x10<host>
.......................
virbr0: flags=4099<UP,BROADCAST,MULTICAST>  mtu 1500
        inet 192.168.122.1  netmask 255.255.255.0  broadcast 192.168.122.255
        ether 52:54:00:fd:2a:27  txqueuelen 1000  (Ethernet)
......................................
[root@Seek ~]# cat  /etc/default/grub 
GRUB_TIMEOUT=5
GRUB_DISTRIBUTOR="$(sed 's, release .*$,,g' /etc/system-release)"
GRUB_DEFAULT=saved
GRUB_DISABLE_SUBMENU=true
GRUB_TERMINAL_OUTPUT="serial  console"
GRUB_SERIAL_COMMAND="serial --unit=1 --speed=115200"
GRUB_CMDLINE_LINUX="biosdevname=0 net.ifnames=0 console=tty0 console=ttyS0,115200"
GRUB_DISABLE_LINUX_UUID="true"
GRUB_ENABLE_LINUX_LABEL="true"
GRUB_DISABLE_RECOVERY="true"

[root@Seek ~]# tty
/dev/ttyS0

[root@Seek ~]# cat  -n  /etc/ssh/ssh_config  |sed  -n  '41p;58,61p'
    41	   Port 22
    58	Host *
    59	      GSSAPIAuthentication   yes
    60	      StrictHostKeyChecking  no
    61	      PasswordAuthentication yes

[root@Seek ~]# cat  -n  /etc/ssh/sshd_config  |sed  -n  '17p;65p;78,80p'
    17	Port 22
    65	PasswordAuthentication yes
    78	# GSSAPI options
    79	GSSAPIAuthentication yes
    80	GSSAPICleanupCredentials no

[root@Seek ~]# vim  /etc/ssh/sshd_config 

 38 PermitRootLogin yes

[root@Seek ~]# grep  -n 'PermitRootLogin yes'  /etc/ssh/sshd_config
38:PermitRootLogin yes

[root@Seek ~]# systemctl  restart  sshd

[root@hiys ~]# ssh  -X  192.168.0.200
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@    WARNING: REMOTE HOST IDENTIFICATION HAS CHANGED!     @
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@


 ssh-keygen -R hostname [-f known_hosts_file]
https://www.cnblogs.com/sunjf/p/ubutu_ssh.html
SSH-keygen参数说明

[root@hiys ~]# which  ssh-keygen 
/usr/bin/ssh-keygen
[root@hiys ~]# rpm  -qf  /usr/bin/ssh-keygen 
openssh-7.4p1-11.el7.x86_64
[root@hiys ~]# ssh-keygen  -R  Seek
Host Seek not found in /root/.ssh/known_hosts

[root@hiys ~]# ssh-keygen  -R  192.168.0.200
# Host 192.168.0.200 found: line 29
/root/.ssh/known_hosts updated.
Original contents retained as /root/.ssh/known_hosts.old

[root@hiys ~]# ssh  -X  192.168.0.200
Warning: Permanently added '192.168.0.200' (ECDSA) to the list of known hosts.
root@192.168.0.200's password: 
X11 forwarding request failed on channel 0
Last login: Tue Dec  4 17:29:49 2018
[root@Seek ~]# tty
/dev/pts/0

[root@Seek ~]# cat  /etc/default/grub 
GRUB_TIMEOUT=5
GRUB_DISTRIBUTOR="$(sed 's, release .*$,,g' /etc/system-release)"
GRUB_DEFAULT=saved
GRUB_DISABLE_SUBMENU=true
GRUB_TERMINAL_OUTPUT="serial  console"
GRUB_SERIAL_COMMAND="serial --unit=1 --speed=115200"
GRUB_CMDLINE_LINUX="biosdevname=0 net.ifnames=0 console=tty0 console=ttyS0,115200"
GRUB_DISABLE_LINUX_UUID="true"
GRUB_ENABLE_LINUX_LABEL="true"
GRUB_DISABLE_RECOVERY="true"

[root@Seek ~]# shutdown  -h now

Connection to 192.168.0.200 closed by remote host.
Connection to 192.168.0.200 closed.

[root@hiys ~]# virsh start Seek
Domain Seek started

[root@hiys ~]# ssh  -X  192.168.0.200
ssh: connect to host 192.168.0.200 port 22: Connection refused

[root@hiys ~]# ssh-keygen  -R  192.168.0.200
# Host 192.168.0.200 found: line 29
/root/.ssh/known_hosts updated.
Original contents retained as /root/.ssh/known_hosts.old

[root@hiys ~]# ssh  -X  192.168.0.200
ssh: connect to host 192.168.0.200 port 22: Connection refused

[root@hiys ~]# virsh  console  Seek
Connected to domain Seek
Escape character is ^]
...................
CentOS Linux 7 (Core)
Kernel 3.10.0-693.el7.x86_64 on an x86_64

Seek login: root
Password: 
Last login: Tue Dec  4 18:47:58 from 192.168.0.254
[root@Seek ~]# tty
/dev/ttyS0

[root@Seek ~]# cat  -n  /etc/ssh/sshd_config  |sed  -n  '17p;38p;65p;78,80p'

    17	Port 22
    38	PermitRootLogin yes
    65	PasswordAuthentication yes
    78	# GSSAPI options
    79	GSSAPIAuthentication yes
    80	GSSAPICleanupCredentials no

/***

[root@Seek ~]# cat   -n   /etc/ssh/ssh_config |sed  -n  '41p;58,61p'
    41	   Port 22
    58	Host *
         ## 在客户端登录服务端会用gssapi-keyex,gssapi-with-mic进行身份校验,同样客户端也要支持这种身份验证
        ## 是否允许使用基于 GSSAPI 的用户认证
    59	      GSSAPIAuthentication   yes

    60	      StrictHostKeyChecking  no   ##ssh将自动把计算机的密匙加入"$HOME/.ssh/known_hosts"文件
    61	      PasswordAuthentication yes  ## 设置是否使用口令验证

[root@Seek ~]# vim  /etc/ssh/sshd_config   ## sshd_config 则是针对服务端的配置文件

[root@Seek ~]# cat  -n  /etc/ssh/sshd_config  |sed  -n  '17p;65p'  ## 服务器端sshd_config
    17	Port 22
    65	PasswordAuthentication yes   ## 设置是否使用口令验证

[root@Seek ~]# cat  -n  /etc/ssh/sshd_config  |sed  -n  '78,80p'  ## 服务器端sshd_config
    78	# GSSAPI options
           ## 在客户端登录服务端会用gssapi-keyex,gssapi-with-mic进行身份校验,同样客户端也要支持这种身份验证
        ## 是否允许使用基于 GSSAPI 的用户认证
    79	GSSAPIAuthentication yes   

           ## 是否在用户退出登录后自动销毁用户凭证缓存
    80	GSSAPICleanupCredentials no

****/
ssh-keygen  -R  192.168.0.200
***********/

[root@Seek ~]# tail  -3   /etc/fstab 
# See man pages fstab(5), findfs(8), mount(8) and/or blkid(8) for more info
#
/dev/vda1    /    xfs     defaults    0   0

[root@Seek ~]# cat  /etc/default/grub
GRUB_TIMEOUT=5
GRUB_DISTRIBUTOR="$(sed 's, release .*$,,g' /etc/system-release)"
GRUB_DEFAULT=saved
GRUB_DISABLE_SUBMENU=true
GRUB_TERMINAL_OUTPUT="serial  console"
GRUB_SERIAL_COMMAND="serial --unit=1 --speed=115200"
GRUB_CMDLINE_LINUX="biosdevname=0 net.ifnames=0 console=tty0 console=ttyS0,115200"
GRUB_DISABLE_LINUX_UUID="true"
GRUB_ENABLE_LINUX_LABEL="true"
GRUB_DISABLE_RECOVERY="true"

[root@Seek ~]# grub2-mkconfig  -o  /boot/grub2/grub.cfg 

[  563.420127] device-mapper: uevent: version 1.0.3
[  563.421175] device-mapper: ioctl: 4.35.0-ioctl (2016-06-23) initialised: dm-devel@redhat.com
Generating grub configuration file ...
Found linux image: /boot/vmlinuz-3.10.0-693.el7.x86_64
Found initrd image: /boot/initramfs-3.10.0-693.el7.x86_64.img
Found linux image: /boot/vmlinuz-0-rescue-3a23bfec491445d6b8b2bafca80e9ab4
Found initrd image: /boot/initramfs-0-rescue-3a23bfec491445d6b8b2bafca80e9ab4.img
[  563.674545] xor: automatically using best checksumming function:
[  563.684890]    avx       : 29044.000 MB/sec
[  563.708867] raid6: sse2x1   gen() 11613 MB/s
[  563.725865] raid6: sse2x2   gen() 14796 MB/s
[  563.742865] raid6: sse2x4   gen() 17113 MB/s
[  563.759863] raid6: avx2x1   gen() 24242 MB/s
[  563.776863] raid6: avx2x2   gen() 26996 MB/s
[  563.793863] raid6: avx2x4   gen() 31125 MB/s
[  563.794321] raid6: using algorithm avx2x4 gen() (31125 MB/s)
[  563.794749] raid6: using avx2x2 recovery algorithm
[  563.835205] Btrfs loaded, crc32c=crc32c-intel
[  563.841685] fuse init (API version 7.22)
done
[root@Seek ~]# 
[root@Seek ~]# shutdown  -h  now
....................


[root@hiys ~]# virt-sysprep   -d  Seek
[   0.0] Examining the guest ...
[   2.3] Performing "abrt-data" ...
[   2.3] Performing "backup-files" ...
[   2.7] Performing "bash-history" ...
[   2.7] Performing "blkid-tab" ...
[   2.7] Performing "crash-data" ...
[   2.7] Performing "cron-spool" ...
[   2.7] Performing "dhcp-client-state" ...
[   2.7] Performing "dhcp-server-state" ...
[   2.7] Performing "dovecot-data" ...
[   2.7] Performing "logfiles" ...
[   2.7] Performing "machine-id" ...
[   2.7] Performing "mail-spool" ...
[   2.7] Performing "net-hostname" ...
[   2.7] Performing "net-hwaddr" ...
[   2.7] Performing "pacct-log" ...
[   2.7] Performing "package-manager-cache" ...
[   2.7] Performing "pam-data" ...
[   2.7] Performing "passwd-backups" ...
[   2.7] Performing "puppet-data-log" ...
[   2.7] Performing "rh-subscription-manager" ...
[   2.7] Performing "rhn-systemid" ...
[   2.7] Performing "rpm-db" ...
[   2.7] Performing "samba-db-log" ...
[   2.7] Performing "script" ...
[   2.7] Performing "smolt-uuid" ...
[   2.7] Performing "ssh-hostkeys" ...
[   2.7] Performing "ssh-userdir" ...
[   2.7] Performing "sssd-db-log" ...
[   2.7] Performing "tmp-files" ...
[   2.7] Performing "udev-persistent-net" ...
[   2.7] Performing "utmp" ...
[   2.7] Performing "yum-uuid" ...
[   2.7] Performing "customize" ...
[   2.7] Setting a random seed
[   3.0] Performing "lvm-uuids" ...
[root@hiys ~]# 




[root@hiys qemu]# cat   VM.xml
<domain type='kvm'>
  <name>VM</name>
  <memory unit='GB'>4</memory>
  <currentMemory unit='GB'>2</currentMemory>
  <vcpu placement='static'>2</vcpu>
  <os>
    <type arch='x86_64' machine='pc'>hvm</type>
    <boot dev='hd'/>
    <bootmenu enable='yes'/>
    <bios useserial='yes'/>
  </os>
  <features>
    <acpi/>
    <apic/>
  </features>
  <cpu mode='host-passthrough'>
  </cpu>
  <clock offset='localtime'/>
  <on_poweroff>destroy</on_poweroff>
  <on_reboot>restart</on_reboot>
  <on_crash>restart</on_crash>
  <devices>
    <emulator>/usr/libexec/qemu-kvm</emulator>
    <disk type='file' device='disk'>
      <driver name='qemu' type='qcow2'/>
      <source file='/var/lib/libvirt/images/VM.img'/>
      <target dev='vda' bus='virtio'/>
    </disk>
    <interface type='bridge'>
      <source bridge='vbr'/>
      <model type='virtio'/>
    </interface>
    <interface type='bridge'>
      <source bridge='vbr1'/>
      <model type='virtio'/>
    </interface>
    <interface type='bridge'>
      <source bridge='private2'/>
      <model type='virtio'/>
    </interface>
    <channel type='unix'>
      <target type='virtio' name='org.qemu.guest_agent.0'/>
    </channel>
    <serial type='pty'></serial>
    <console type='pty'>
      <target type='serial'/>
    </console>
    <memballoon model='virtio'></memballoon>
  </devices>
</domain>
[root@hiys qemu]# 
[root@hiys qemu]# virsh  define   /etc/libvirt/qemu/VM.xml
Domain VM defined from /etc/libvirt/qemu/VM.xml

[root@hiys qemu]# virsh  start  VM
Domain VM started

[root@hiys qemu]# virsh  console  VM
















====================  =============================


[root@hiys ~]# echo  "scale=2;2/3" |bc
.66
[root@hiys ~]# echo  "scale=2;20/3" |bc
6.66
[root@hiys ~]# vim  test.txt
hah                                                                                                                                 
~                                                                     
~                                                                     
:split
------------------------------------------
hah
~                                                                       
~                                                                       
~                                                                       
test.txt                       1,1           全部
hah
~                                                                       
~                                                                       
~                                                                       
test.txt                       1,1           全部
:split
----------------------------------
:split
 vim 分屏幕
------------------------------
[root@hiys ~]# vim  b.txt
aaa
iii
ooo
aaa
aaa                                                                                        
iii                                                                                        
ooo     
~           Ctrl  + n  快捷键 组合
-- 关键字补全 (^N^P) 匹配 2 / 3 【上下键 可以切换补全选项】

[root@hiys ~]# enable   ## 列出所有内部命令
enable .
enable :
enable [
enable alias
enable bg
enable bind
enable break
enable builtin
enable caller
enable cd
enable command
enable compgen
enable complete
enable compopt
enable continue
enable declare
enable dirs
enable disown
enable echo
enable enable
enable eval
enable exec
enable exit
enable export
enable false
enable fc
enable fg
enable getopts
enable hash
enable help
enable history
enable jobs
enable kill
enable let
enable local
enable logout
enable mapfile
enable popd
enable printf
enable pushd
enable pwd
enable read
enable readarray
enable readonly
enable return
enable set
enable shift
enable shopt
enable source
enable suspend
enable test
enable times
enable trap
enable true
enable type
enable typeset
enable ulimit
enable umask
enable unalias
enable unset
enable wait
[root@hiys ~]# 

[root@hiys ~]# echo  $PS1
[\u@\h \W]\$
[root@hiys ~]# echo  $PS2
>
/****
vim  

大写 字母 O 插入 光标所在行的 上一行
小写 字母 o  插入 光标所在行的 下一行

****/
[root@hiys ~]# du -sh  /etc/yum.repos.d/NSD-2018-1-12.tar.gz 
936M	/etc/yum.repos.d/NSD-2018-1-12.tar.gz

virtio是Linux虚拟机平台上统一的虚拟IO接口驱动。
通常主机为了让客户机像在真实环境中一样运行，需要为客户机创建各式各样的虚拟设备，
如磁盘，网卡，显卡，时钟，USB 等。这些虚拟设备大大降低了客户机的性能。
使用virtio
虚拟机guest不用关注如何创建各种虚拟硬件设备（如磁盘，网卡，显卡等），
可以用统一的虚拟设备，因此大大提高虚拟机的性能，
这个统一的虚拟设备就是virtio
--------------------- 
通过libvirt在虚拟机创建时启动virtio通道

使用libvirt在虚拟机的启动配置xml中加入：

<channel type='unix'>
 <source mode='bind' path='/var/lib/libvirt/qemu/vm.data'/>
 <target type='virtio' address='virtio-serial' port='2'/>
</channel>
注意：path路径要放在qemu下，不然会报Failed to bind socket: Permission denied错误

虚拟机启动后，在虚拟机操作系统中可以发现新的字符设备：

# ls -l  /dev/vport0p2
crw-rw----. 1 root root 247, 2 Aug 14 18:14 /dev/vport0p2
虚拟机中对这个字符设备的读写操作即相当于对virtio通道的读写，以此可以实现与主机的通信。


突发事件处理定义了当发生poweroff时，直接destroy虚拟机。当虚拟机reboot、crash的时候，会自动采用重启操作，还可以自定义。

在虚拟化技术或者云计算中，都使用image一词来表示虚拟磁盘。
  <interface type='bridge'>　　　　##虚拟网络，基于网桥
  <serial type='pty'>　　　　　　##串口信息可以不用更改

<disk type='file' device='disk'>　　　　##描述虚拟磁盘image
 <os>　　　　　　　　　　　　　　　　　　##系统信息

[root@hiys nsd1807]# which  sealert  
/usr/bin/sealert
[root@hiys nsd1807]# sealert  -b  --help
Usage: sealert [options]

Options:
  -h, --help            show this help message and exit
  -b, --browser         Launch the browser
  -s, --service         Start sealert as a dbus service
  -S, --noservice       Start sealert without dbus service as stand alone app
  -l LOOKUPID, --lookupid=LOOKUPID
                        Lookup alert by id, id may be wildcard * to lookup all
                        alerts
  -a FILE, --analyze=FILE
                        Scan a log file, analyze it's AVC's
  -u USER, --user=USER  logon user name
  -p PASSWORD, --password=PASSWORD
                        logon user password
  -P PLUGIN, --plugin=PLUGIN
                        Plugin Name Required for -f
  -f FIX, --fix=FIX     fix avc with the given uuid, requires plugin
[root@hiys nsd1807]# 
重启httpd报错时。除了参看日志外还可用以下命令排错
sealert -b  或者是图形界面下右上角的单击小星星

开启我们的SELinux，我在安全linux系统时将它禁用了，
但是开启selinux后，可能会对我们的一些服务有些限制功能，不如你可能不能正常访问网页、ftp等等，
下面就对这些问题通过设置SELinux来解决这些问题：

1、如果你的SELinux没用启动的话，有一下几种启动的方法
\
不可用状态
开启SELinux
Vim  /etc/sysconfig/selinux  如下：
\
或者用图形化界面修改命令为 system-config-selinux 或 system-cofig-securitylevel  将SELinux设置为“强制”




