

                              安装 linux 自定义虚拟机 制作 模板 配置yum 网卡   配 置 转发 DNS 


[root@hiys ~]# lsblk
NAME   MAJ:MIN RM   SIZE RO TYPE MOUNTPOINT
sda      8:0    0 931.5G  0 disk 
├─sda1   8:1    0   200G  0 part /var/lib/libvirt/images
├─sda2   8:2    0   120G  0 part /
└─sda3   8:3    0   122G  0 part /javaweb
loop0    7:0    0   3.8G  0 loop /var/ftp/rhel7
loop1    7:1    0   8.1G  1 loop /var/ftp/CentOS7-1708
loop2    7:2    0   169M  1 loop /var/ftp/RHEL7-extras
loop3    7:3    0     3G  1 loop /var/ftp/RHEL7OSP

[root@hiys ~]# blkid 
/dev/sda1: UUID="a1bc4085-ad0a-443c-9d62-00d84a1a2e3c" TYPE="ext4" 
/dev/sda2: UUID="987e8693-eb61-4a69-9531-0ed377b321ad" TYPE="ext4" 
/dev/sda3: UUID="1ae681d3-b6db-4609-bed8-f78295a292cb" TYPE="ext4" 

/dev/loop0: UUID="2017-07-11-01-39-24-00" LABEL="RHEL-7.4 Server.x86_64" TYPE="iso9660" PTTYPE="dos" 
/dev/loop1: UUID="2017-09-06-10-53-42-00" LABEL="CentOS 7 x86_64"    TYPE="iso9660"   PTTYPE="dos" 

/dev/loop2: UUID="2017-03-08-18-04-11-00" LABEL="RHEL7EXTRAS"   TYPE="iso9660" 
/dev/loop3: UUID="2017-06-07-20-32-47-00" LABEL="RHEL7OSP-10.0" TYPE="iso9660" 

[root@hiys ~]# blkid  /dev/sda
/dev/sda: PTTYPE="dos" 

[root@hiys ~]# lsb_release  -a   ## 查看Linux系统版本的命令
..........................

[root@hiys ~]# ll  /etc/redhat-release 
lrwxrwxrwx. 1 root root 14 3月  10 2018 /etc/redhat-release -> centos-release
[root@hiys ~]# cat  /etc/redhat-release   ## 查看Linux系统版本的命令
CentOS Linux release 7.4.1708 (Core) 

[root@hiys ~]# cat  /etc/centos-release
CentOS Linux release 7.4.1708 (Core) 

[root@hiys ~]# ll  /etc/issue
-rw-r--r--. 1 root root 23 8月  30 2017 /etc/issue
[root@hiys ~]# cat  /etc/issue   ##查看Linux系统版本的命令
\S
Kernel \r on an \m

[root@hiys ~]# cat  /proc/version    ## 查看Linux内核版本命令
Linux version 3.10.0-693.el7.x86_64 (builder@kbuilder.dev.centos.org) (gcc version 4.8.5 20150623 (Red Hat 4.8.5-16) (GCC) ) #1 SMP Tue Aug 22 21:09:27 UTC 2017

[root@hiys ~]# uname  -a     #查看Linux内核版本命令
Linux hiys 3.10.0-693.el7.x86_64 #1 SMP Tue Aug 22 21:09:27 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux

[root@hiys ~]# lsmod  |grep  kvm
kvm_intel             170086  0 
kvm                   566340  1 kvm_intel
irqbypass              13503  1 kvm

[root@hiys ~]# ls  /sys/module/kvm/
...............................

[root@hiys ~]# ls  /sys/module/kvm_intel/
............................

[root@hiys ~]# cat  /proc/cpuinfo   |grep  vmx |head  -1
flags		: fpu vme de pse .................hwp_act_window hwp_epp

[root@hiys ~]# egrep  -o 'svm|vmx' /proc/cpuinfo  ##查看我们的电脑是否支持 虚拟化# #-o参数(只输出匹配的部分),
vmx
vmx
vmx
vmx

[root@hiys ~]# rpm  -q  qemu-kvm  libvirt  libvirt-client  libvirt-daemon  libvirt-daemon-driver-qemu \
> libguestfs-tools  libvirt-python   python-setuptools   virt-install   virt-manager \
> virt-v2v  virt-p2v  virt-viewer  bind-chroot  bind  chrony  vsftpd

qemu-kvm-1.5.3-141.el7.x86_64      ## 为 kvm 提供底层仿真支持  【虚拟化平台 安装必备软件】
libvirt-3.2.0-14.el7.x86_64
libvirt-client-3.2.0-14.el7.x86_64   ## 用户端软件,提供客户端管理命令 【虚拟化平台 安装必备软件】
libvirt-daemon-3.2.0-14.el7.x86_64    ## 守护进程,管理虚拟机     【虚拟化平台 安装必备软件】
libvirt-daemon-driver-qemu-3.2.0-14.el7.x86_64   ## libvirtd 连接 qemu 的驱动  【虚拟化平台 安装必备软件】

libguestfs-tools-1.36.3-6.el7.noarch
libvirt-python-3.2.0-3.el7.x86_64
python-setuptools-0.9.8-7.el7.noarch
virt-install-1.4.1-7.el7.noarch       ## 系统安装工具 【可选功能】
virt-manager-1.4.1-7.el7.noarch       ## 图形管理工具 【可选功能】

virt-v2v-1.36.3-6.el7.x86_64        ## 虚拟机 迁移 工具【可选功能】
未安装软件包 virt-p2v                ## 物理机 迁移 工具 【可选功能】

virt-viewer-5.0-7.el7.x86_64
bind-chroot-9.9.4-50.el7.x86_64
bind-9.9.4-50.el7.x86_64
chrony-3.1-2.el7.centos.x86_64
vsftpd-3.0.2-22.el7.x86_64

[root@hiys ~]# yum list  |grep virt-p2v
virt-p2v-maker.x86_64                    1:1.36.3-6.el7            CentOS7-1708 

[root@hiys ~]# yum  -y install  virt-p2v
............................
没有可用软件包 virt-p2v。
错误：无须任何处理

[root@hiys ~]# systemctl is-active  libvirtd
active
[root@hiys ~]# systemctl is-enabled  libvirtd
enabled
[root@hiys ~]# systemctl restart  libvirtd

-------------------------------------------------------------------------------------------------------------------
  =================   配 置 转发 DNS  =========================

[root@hiys ~]# yum  -y install  bind-chroot  bind
.....................
软件包 32:bind-chroot-9.9.4-50.el7.x86_64 已安装并且是最新版本
软件包 32:bind-9.9.4-50.el7.x86_64 已安装并且是最新版本
无须任何处理
[root@hiys ~]# rpm -qa  |grep  bind
bind-9.9.4-50.el7.x86_64
bind-libs-9.9.4-50.el7.x86_64
bind-license-9.9.4-50.el7.noarch
bind-utils-9.9.4-50.el7.x86_64
rpcbind-0.2.0-42.el7.x86_64
keybinder3-0.3.0-1.el7.x86_64
bind-chroot-9.9.4-50.el7.x86_64
bind-libs-lite-9.9.4-50.el7.x86_64

[root@hiys ~]# vim  /etc/named.conf 

[root@hiys ~]# cat  -n  /etc/named.conf |sed  -n  '12,22p;33,35p'
    12	options {
    13		listen-on port 53 { 192.168.1.254; };
    14	//	listen-on-v6 port 53 { ::1; };
    15		directory 	"/var/named";
    16		dump-file 	"/var/named/data/cache_dump.db";
    17		statistics-file "/var/named/data/named_stats.txt";
    18		memstatistics-file "/var/named/data/named_mem_stats.txt";
    19		allow-query     { any; };
    20	        forwarders   { 114.114.114.114; };
    21		/* 
    22		 - If you are building an AUTHORITATIVE DNS server, do NOT enable recursion.
    33		dnssec-enable no;
    34		dnssec-validation no;
    35	
[root@hiys ~]# 
/**************
　114.114.114.114是国内移动、电信和联通通用的DNS，手机和电脑端都可以使用，是国内用户上网常用的DNS

　8.8.8.8是GOOGLE公司提供的DNS，该地址是全球通用的，相对来说，更适合国外以及访问国外网站的用户使用
**************/

[root@hiys ~]# systemctl is-active  named
active
[root@hiys ~]# systemctl  is-enabled  named
enabled
[root@hiys ~]# dig  +trace  ntp.aliyun.com

; <<>> DiG 9.9.4-RedHat-9.9.4-50.el7 <<>> +trace ntp.aliyun.com
.......................

[root@hiys ~]# dig  ntp.aliyun.com

; <<>> DiG 9.9.4-RedHat-9.9.4-50.el7 <<>> ntp.aliyun.com
;; global options: +cmd
;; Got answer:
.............................................................
ns5.aliyun.com.		262273	IN	A	198.11.138.248
ns5.aliyun.com.		262273	IN	A	140.205.2.187

;; Query time: 22 msec
;; SERVER: 176.121.0.100#53(176.121.0.100)
;; WHEN: 三 11月 28 13:45:52 CST 2018
;; MSG SIZE  rcvd: 177
-------------------------------------
[root@hiys ~]# nslookup   ntp.aliyun.com

Server:		176.121.0.100
Address:	176.121.0.100#53

Non-authoritative answer:
Name:	ntp.aliyun.com
Address: 203.107.6.88

==================== 配置  时间服务 ==================

[root@hiys ~]# yum  -y  install chrony
......................
软件包 chrony-3.1-2.el7.centos.x86_64 已安装并且是最新版本
无须任何处理
[root@hiys ~]# vim  /etc/chrony.conf 

[root@hiys ~]# sed  -n  '3,11p'  /etc/chrony.conf

#server 0.centos.pool.ntp.org iburst
#server 1.centos.pool.ntp.org iburst
#server 2.centos.pool.ntp.org iburst
#server 3.centos.pool.ntp.org iburst
server  ntp.aliyun.com iburst
bindacqaddress  0.0.0.0
allow  0/0
#allow   all
cmdallow 127.0.0.1

[root@hiys ~]# systemctl is-active   chronyd
active
[root@hiys ~]# systemctl is-enabled   chronyd
enabled
[root@hiys ~]# chronyc   sources  -v   # # 查看时间同步源* 203.107.6.88

210 Number of sources = 1

  .-- Source mode  '^' = server, '=' = peer, '#' = local clock.
 / .- Source state '*' = current synced, '+' = combined , '-' = not combined,
| /   '?' = unreachable, 'x' = time may be in error, '~' = time too variable.
||                                                 .- xxxx [ yyyy ] +/- zzzz
||      Reachability register (octal) -.           |  xxxx = adjusted offset,
||      Log2(Polling interval) --.      |          |  yyyy = measured offset,
||                                \     |          |  zzzz = estimated error.
| |                                           |      |              \
MS Name/IP address         Stratum Poll Reach LastRx Last sample               
===============================================================================
^* 203.107.6.88                  2  10   377   979  -1181us[-1279us] +/-   41ms

[root@hiys ~]# chronyc  sourcestats  -v   ##  #查看同步状态
210 Number of sources = 1
                             .- Number of sample points in measurement set.
                            /    .- Number of residual runs with same sign.
                           |    /    .- Length of measurement set (time).
                           |   |    /      .- Est. clock freq error (ppm).
                           |   |   |      /           .- Est. error in freq.
                           |   |   |     |           /         .- Est. offset.
                           |   |   |     |          |          |   On the -.
                           |   |   |     |          |          |   samples. \
                                   |     |    |       |              |              |                |
Name/IP Address            NP  NR  Span  Frequency  Freq Skew  Offset  Std Dev
==============================================================================
203.107.6.88               44  23  327m     +0.004      0.135   +270ns  1562us


===================  配 置 ftp 服务 =====================

[root@hiys ~]# rpm  -q  vsftpd
vsftpd-3.0.2-22.el7.x86_64
[root@hiys ~]# vim  /etc/vsftpd/vsftpd.conf 

[root@hiys ~]# grep -Ev '^#|^$'  /etc/vsftpd/vsftpd.conf
anonymous_enable=YES
local_enable=YES
write_enable=YES
local_umask=022
anon_upload_enable=YES
anon_mkdir_write_enable=YES
anon_other_write_enable=YES
anon_umask=022
dirmessage_enable=YES
xferlog_enable=YES
connect_from_port_20=YES
xferlog_std_format=YES
listen=YES
listen_ipv6=NO
pam_service_name=vsftpd
userlist_enable=YES
tcp_wrappers=YES

[root@hiys ~]# cat  -n   /etc/vsftpd/vsftpd.conf | sed  -n  '112p;117,118p' 
   112	listen=YES        //开启ipv4监听
   117	#listen_ipv6=YES
   118	listen_ipv6=NO     ## 关闭ipv6监听

[root@hiys ~]# systemctl  is-enabled   vsftpd
enabled
[root@hiys ~]# systemctl  is-active   vsftpd
active

========================  搭建 网络 yum 源 ============================

[root@hiys ~]#  yum repolist |tail -16
源标识                           源名称                                    状态
CentOS7-1708                     CentOS7-1708                              9,591
...........................................
ansible                          ansible                                      18
rhel7                            rhel7.4                                   4,986
repolist: 15,735

[root@hiys ~]# ls  /var/ftp/CentOS7-1708/
.........................
[root@hiys ~]# ls  /var/ftp/
ansible  CentOS7-1708  docker  pub  rhel7  RHEL7-extras  RHEL7OSP  share

[root@hiys ~]# ls  /var/ftp/ansible/
...............................
elasticsearch-2.3.4.rpm           python2-jmespath-0.9.0-3.el7.noarch.rpm  repodata
filebeat-1.2.3-x86_64.rpm         python-httplib2-0.9.2-1.el7.noarch.rpm   sshpass-1.06-2.el7.x86_64.rpm

[root@hiys ~]# ls  /var/ftp/docker/
docker-engine-1.12.1-1.el7.centos.x86_64.rpm  docker-engine-selinux-1.12.1-1.el7.centos.noarch.rpm  repodata

[root@hiys ~]# cat  local.repo.txt 
[CentOS7-1708]
name=CentOS7-1708
gpgcheck=0
baseurl=ftp://192.168.1.254/CentOS7-1708/
enabled=1

[docker]
name=docker
baseurl="ftp://192.168.1.254/docker"
enabled=1
gpgcheck=0

[ansible]
name=ansible
baseurl=ftp://192.168.1.254/ansible
gpgcheck=0
enabled=1
[root@hiys ~]# 

==================================================
[root@hiys ~]# vim  /etc/ssh/ssh_config 

 41   Port 22

 58 Host *
 59         GSSAPIAuthentication   yes
 60         StrictHostKeyChecking  no

[root@hiys ~]# cat  -n   /etc/ssh/ssh_config |sed  -n  '41p;58,60p'
    41	  Port 22
    58	Host *
    59		GSSAPIAuthentication   yes
    60	        StrictHostKeyChecking  no

======================================================
/****** 真机 **************
[root@hiys ~]# locale
LANG=zh_CN.UTF-8
................................
[root@hiys ~]# echo  $LANG
zh_CN.UTF-8

[root@hiys ~]# export  LANG=en_US.UTF-8  ##临时更换语言

[root@hiys ~]# echo  $LANG

en_US.UTF-8

[root@hiys ~]# locale    ## 查看系统安装的语言包
LANG=en_US.UTF-8
LC_CTYPE="en_US.UTF-8"
.................................
LC_IDENTIFICATION="en_US.UTF-8"
LC_ALL=

[root@hiys ~]# export  LANG=zh_CN.UTF-8   ##临时更换语言

[root@hiys ~]# locale     ## 查看系统安装的语言包

LANG=zh_CN.UTF-8
LC_CTYPE="zh_CN.UTF-8"
.....................................
LC_IDENTIFICATION="zh_CN.UTF-8"
LC_ALL=

[root@hiys ~]# echo  $LANG
zh_CN.UTF-8

********* 真机 ****************/

================================================

---------------------------------------------------  虚拟网络  vbr  private1  vbr2  ---------------------------

[root@hiys ~]# virsh nodeinfo
CPU 型号：        x86_64
CPU：               4
CPU 频率：        900 MHz
CPU socket：        1
每个 socket 的内核数： 4
每个内核的线程数： 1
NUMA 单元：       1
内存大小：      16687548 KiB

[root@hiys ~]# virsh  net-list
 名称               状态        自动开始      持久
----------------------------------------------------------
 default              活动     是           是
 private1             活动     是           是
....................................
 vbr                  活动     是           是
 vbr2                 活动     是           是


[root@hiys ~]# virsh  -c  qemu:///system   net-dumpxml  vbr    ##虚拟网络vbr --> eth0
<network>
  <name>vbr</name>
  <uuid>4687cb6a-45a9-4a36-bb21-7cc0a74fccaa</uuid>
  <forward mode='nat'>
    <nat>
      <port start='1024' end='65535'/>
    </nat>
  </forward>
  <bridge name='vbr' stp='on' delay='0'/>
  <mac address='52:54:00:b9:be:6c'/>
  <domain name='vbr'/>
  <ip address='192.168.1.254' netmask='255.255.255.0'>
    <dhcp>
      <range start='192.168.1.100' end='192.168.1.200'/>
    </dhcp>
  </ip>
</network>

[root@hiys ~]# 
[root@hiys ~]# virsh  net-dumpxml  private1      ##虚拟网络private1 -->  eth1
<network>
  <name>private1</name>
  <uuid>559de4a7-724c-4eec-ba19-3c7c2e69b4ad</uuid>
  <bridge name='private1' stp='on' delay='0'/>
  <mac address='52:54:00:37:78:11'/>
  <domain name='private1'/>
  <ip address='192.168.4.254' netmask='255.255.255.0'>
  </ip>
</network>

[root@hiys ~]# 
[root@hiys ~]# virsh  net-dumpxml  vbr2            ###虚拟网络vbr2 -->  eth2
<network>
  <name>vbr2</name>
  <uuid>08768731-b6d8-4055-af00-9b429a37b360</uuid>
  <forward mode='nat'>
    <nat>
      <port start='1024' end='65535'/>
    </nat>
  </forward>
  <bridge name='vbr2' stp='on' delay='0'/>
  <mac address='52:54:00:d0:34:45'/>
  <domain name='vbr2'/>
  <ip address='192.168.3.254' netmask='255.255.255.0'>
    <dhcp>
      <range start='192.168.3.100' end='192.168.3.200'/>
    </dhcp>
  </ip>
</network>

[root@hiys ~]# 

-------------------------------------------  虚拟网络  vbr  private1  vbr2  ---------------------------

[root@hiys ~]# ls  /etc/libvirt/qemu/networks/
autostart  default.xml  private1.xml  private2.xml  public1.xml  public2.xml  rhce.xml  vbr2.xml  vbr.xml

[root@hiys ~]# ls  /etc/libvirt/qemu/networks/autostart/
default.xml  private1.xml  private2.xml  public1.xml  public2.xml  rhce.xml  vbr2.xml  vbr.xml

--------------------------------------------远程管理虚拟机------- -----------------------------------------
[root@hiys ~]# virt-viewer  -c  qemu+ssh://root@192.168.1.16:22/system  Va6
root@192.168.1.16's password: a

[root@hiys ~]# virsh start  Va9  &&  sleep  16  &&  virsh  -c  qemu+ssh://192.168.1.19/system
域 Va9 已开始

错误：连接到管理程序失败
错误：无法 recv 数据：ssh: connect to host 192.168.1.19 port 22: No route to host: Connection reset by peer
------------------------------------------------------------------远程管理虚拟机------- ------------------------------

[root@hiys ~]# ls  /etc/libvirt/qemu/
autostart  nova01.xml     Va1.xml  Va3.xml  Va5.xml  Va7.xml  Va9.xml
networks   openstack.xml  Va2.xml  Va4.xml  Va6.xml  Va8.xml  Va.xml.txt

[root@hiys ~]# ls  /var/lib/libvirt/images/
bin                 disk-Va1.img  disk-Va8.img  openstack.img               Va3.img  vsftpd.conf
conf.d              disk-Va2.img  disk-Va9.img  qemu                        Va4.img  Weekend.sh
..........................................................
disk-nova01.img     disk-Va6.img  node.qcow2    Va1.img                     Va8.img
..............................................................

[root@hiys ~]# ls  /var/log/libvirt/qemu/
nova01.log     Va1.log  Va3.log  Va5.log  Va7.log  Va9.log
openstack.log  Va2.log  Va4.log  Va6.log  Va8.log  win2008.log


=============================   CentOS1708 虚拟机模版 制作===========

[root@hiys ~]# qemu-img  create  -f  qcow2  /var/lib/libvirt/images/Moban.qcow2  3G  ## 注意至少 3G

Formatting '/var/lib/libvirt/images/Moban.qcow2', fmt=qcow2 size=3221225472 encryption=off cluster_size=65536 lazy_refcounts=off 

[root@hiys ~]# chmod  777  /var/lib/libvirt/images/Moban.qcow2

[root@hiys ~]# ll  /var/lib/libvirt/images/Moban.qcow2
-rwxrwxrwx 1 root root 197120 Nov 29 16:32 /var/lib/libvirt/images/Moban.qcow2

[root@hiys ~]# du  -sh  /var/lib/libvirt/images/Moban.qcow2
196K	/var/lib/libvirt/images/Moban.qcow2

---------------------------------------------------------------

[root@hiys ~]# systemctl  unmask   firewalld   ## 取消 注销指定服务
Removed symlink /etc/systemd/system/firewalld.service.

[root@hiys ~]# systemctl  mask   firewalld  ## 注销指定服务
Created symlink from /etc/systemd/system/firewalld.service to /dev/null.

[root@hiys ~]# systemctl  is-enabled  firewalld
masked
[root@hiys ~]# systemctl  is-active   firewalld
unknown

[root@hiys ~]# systemctl is-active  NetworkManager
active
[root@hiys ~]# systemctl is-enabled  NetworkManager
enabled
-------------------------------------------------------------------------------------------------------------
[root@hiys ~]# echo  $LANG
zh_CN.UTF-8

[root@hiys ~]# LANG="en_US.UTF-8"  ##临时更换语言

[root@hiys ~]# echo  $LANG
en_US.UTF-8
/**
KDUMP 【dump整个系统的内存空间，以便于系统管理员debug分析系统挂掉的原因；kdump专用内核，通过kexec工具load到预留的内存中，供故障引导使用】
----------------------------------------------------------
***/


[root@hiys ~]# virt-manager 

====================================================================
      虚拟系统管理器                                                                                               |
-----------------------------------------------------                                                                              |
   点击菜单  文件 ---> 新建虚拟机（N）                                                           |
                                                                                                                    |
生成新虚拟机                                                                                                       |

  选择  网络安装，可为 HTTP，FTP 或者 NFS

点击  前进
---------------------------------------------------------
生成新虚拟机
提供操作系统安装 URL
URL ： yum 源地址  ftp://176.121.213.151/CentOS7-1708/
默认勾 上 根据安装介质 自动侦测 操作系统（U）

点击  前进
-----------------------------------------------
/*****
[root@hiys ~]# echo "1024*4" |bc
4096
***/
-------------------------------
生成新虚拟机

内存（M），RAM   2048 MiB
         CPU    2

点击  前进
------------------------------------------------------------

生成新虚拟机

默认勾 上 为虚拟机启用存储（E）

选择或创建自定义存储（S）
 点击 管理（M）...  /var/lib/libvirt/images/Moban.qcow2

点击  前进
------------------------------------------------------------

生成新虚拟机
名称（N）  Mob  【自定义虚拟机名称】

选择网络
    虚拟网络‘vbr’：NAT

点击 完成
----------------------------------------------------------------

WELCOME TO CENTOS 7.
选择语言必须是 英语
English        English(United States)

           点击     Continue
---------------------------------------------------------
Installation  Summary
------------------------------------------
INSTALLATION   SUMMARY

LOCALIZATION
  DATE  & TIME                   KEYBOARD
 Asia/Shanghai timezone          English(US)

LANGUAGE SUPPORT
English (United States)

SOFTWARE

INSTALLATION  SOURCE                      注意 SOFTWARE SELECTION  
ftp://176.121.213.151/CentOS7-1708/        Minimal Install
                                                        最小化安装

                                               点击  KDUMP 
                                     ---------------------------------------------------
                                       去掉 勾 Enable  kdump
                                                 点击Done
                                       ----------------------------------------------
    installation  destination
 点击INSTALLATION  DESTINATION           KDUMP
         |                              Kdump is disabled
            |
            |
----------------------------------    

Device Selection
 
Other  Storage  Options
选择 I will configure partitioning

点击左上角 Done

--------------------------------------------------
MANUAL  PARTITIONING


New CentOS 7 Installation


Create  new  mount  points  by clicking  the  '+' button.
New  mount points  will user the following  partitioning scheme:

选择  Standard Partition  标准分区

点击 左下角 加号 + 
-----------------------------------------
ADD   A  NEW  MOUNT  POINT

Mount  Point:   /  只选择根分区

Desired Capacity:

     点击  Add mount point 确定
------------------------------------------------------
MANUAL  PARTITIONING
点击左上角 Done  (需要点击二次）
--------------------------------------
New CentOS 7 Installation
   SYSTEM 
  /               3071 MiB
  vda1
---------------------------------------------------------
------------------------------------------------
弹出对话框 
  SUMMARY  OF  CHANGES
1   Destroy  Format    Unknow                    vda
2   Create   Format    partition  table (MSDOS)  vda
3   Create   Device    partition                 vda1
4   Create   Format     xfs             vda1          /

选择 Accept Changes
-----------------------------------------
------------------------------------------
INSTALLATION   SUMMARY


             点击 Begin Installation
----------------------------------------------------
CONFIGURATION

USER SETTINGS  

ROOT  PASSWORD              USER  CREATION
         1                   lily     1
----------------------------(需要点击二次）---------------------                                                                |
                                                                                                                   |
最后点击 Reboot                                                                            |
====================================================================

[root@hiys ~]# ls  /var/log/libvirt/qemu/
Mob.log     openstack.log  Va2.log  Va4.log  Va6.log  Va8.log  win2008.log
nova01.log  Va1.log        Va3.log  Va5.log  Va7.log  Va9.log

[root@hiys ~]# ll  /var/log/libvirt/qemu/Mob.log 
-rw------- 1 root root 6325 Nov 29 16:54 /var/log/libvirt/qemu/Mob.log

[root@hiys ~]# head  -1  /var/log/libvirt/qemu/Mob.log
2018-11-29 08:42:53.974+0000: starting up libvirt version: 3.2.0, package: 14.el7 (CentOS BuildSystem <http://bugs.centos.org>, 2017-08-05-05:12:51, c1bm.rdu2.centos.org), qemu version: 1.5.3 (qemu-kvm-1.5.3-141.el7), hostname: hiys

[root@hiys ~]# 
-----------------------------------------------------打开 虚拟机 Mob 图形窗口 -----------------------------------

localhost  login: root
Password:  1
[root@localhost ~]# yum  provides  ifconfig
.................
[root@localhost ~]# yum  -y install  net-tools   vim-enhanced

[root@localhost ~]# ifconfig  |awk '/inet /&&/192.168/{print $2}'
192.168.1.?
[root@localhost ~]# echo Mob > /etc/hostname

[root@localhost ~]#  cat  /etc/sysconfig/network-scripts/ifcfg-eth0

[root@localhost ~]# shutdown  -h  now
-------------------------------------------------------------------------------------------------------

[root@hiys ~]# virsh   start  Mob
Domain Mob started

[root@hiys ~]# ssh  -X  192.168.1.123
.......................
root@192.168.1.123's password: 
...................................
[root@Mob ~]# ifconfig 
eth0: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 1500
        inet 192.168.1.123  netmask 255.255.255.0  broadcast 192.168.1.255
        inet6 fe80::5054:ff:fe6e:a44f  prefixlen 64  scopeid 0x20<link>
............................

lo: flags=73<UP,LOOPBACK,RUNNING>  mtu 65536
        inet 127.0.0.1  netmask 255.0.0.0
        inet6 ::1  prefixlen 128  scopeid 0x10<host>
        loop  txqueuelen 1  (Local Loopback)
.......................
/***********
https://auth.huaweicloud.com/authui/login
https://auth.huaweicloud.com/authui/login#/login
https://www.huaweicloud.com/
***/
[root@Mob ~]# echo  $LANG
en_US.UTF-8


---------------------------------------------- 配置yum源 ---------------------------

[root@Mob ~]# mkdir   /etc/yum.repos.d/repo

[root@Mob ~]# mv  /etc/yum.repos.d/*.repo  /etc/yum.repos.d/repo

[root@Mob ~]# ls  /etc/yum.repos.d/repo/
CentOS-Base.repo  CentOS-Debuginfo.repo  CentOS-Media.repo    CentOS-Vault.repo
CentOS-CR.repo    CentOS-fasttrack.repo  CentOS-Sources.repo

[root@Mob ~]# scp  -o  StrictHostKeyChecking=no  root@192.168.1.254:/root/local.repo.txt  \
>  /etc/yum.repos.d/local.repo
................
   
[root@Mob ~]# ls  /etc/yum.repos.d/
local.repo  repo

[root@Mob ~]# cat  /etc/yum.repos.d/local.repo 
[CentOS7-1708]
name=CentOS7-1708
gpgcheck=0
baseurl=ftp://192.168.1.254/CentOS7-1708/
enabled=1

[docker]
name=docker
baseurl="ftp://192.168.1.254/docker"
enabled=1
gpgcheck=0

[ansible]
name=ansible
baseurl=ftp://192.168.1.254/ansible
gpgcheck=0
enabled=1

[root@Mob ~]# yum clean all >/dev/null  && yum repolist |tail -5
repo id                              repo name                            status
CentOS7-1708                         CentOS7-1708                         9,591
ansible                              ansible                                 18
docker                               docker                                   2
repolist: 9,611

[root@Mob ~]# firewall-cmd  --get-default-zone
public
  ----------------------------------------   禁用selinux  -----------------------

[root@Mob ~]# sed  -i  's/\(SELINUX=\)enforcing/\1disabled/' /etc/selinux/config 

[root@Mob ~]# sed  -n  7p  /etc/selinux/config
SELINUX=disabled

[root@Mob ~]# systemctl is-active  NetworkManager
active

[root@Mob ~]# systemctl stop  NetworkManager  ## 与openstack 和 network 冲突

[root@Mob ~]# yum  list |grep  NetworkManager-

NetworkManager-libnm.x86_64              1:1.8.0-9.el7              @anaconda   
......................................
yum-NetworkManager-dispatcher.noarch     1.1.31-42.el7              CentOS7-1708

===================     # # # # 卸载 防火墙 与 NetworkManager  ===========

[root@Mob ~]# yum  -y   remove  NetworkManager-*  firewalld-*  python-firewall
.................................
Removed:
  NetworkManager.x86_64 1:1.8.0-9.el7                NetworkManager-libnm.x86_64 1:1.8.0-9.el7       
  NetworkManager-team.x86_64 1:1.8.0-9.el7           NetworkManager-tui.x86_64 1:1.8.0-9.el7         
  NetworkManager-wifi.x86_64 1:1.8.0-9.el7           firewalld.noarch 0:0.4.4.4-6.el7                
  firewalld-filesystem.noarch 0:0.4.4.4-6.el7        python-firewall.noarch 0:0.4.4.4-6.el7          

Complete!
[root@Mob ~]# systemctl is-active  NetworkManager
inactive

[root@Mob ~]# systemctl is-enabled  NetworkManager
Failed to get unit file state for NetworkManager.service: No such file or directory

[root@Mob ~]# rpm  -qa  |grep  NetworkManager-

[root@Mob ~]# systemctl is-enabled  firewalld
Failed to get unit file state for firewalld.service: No such file or directory

[root@Mob ~]# systemctl is-active  firewalld
unknown

 [root@Mob ~]# systemctl status  network
● network.service - LSB: Bring up/down networking
   Loaded: loaded (/etc/rc.d/init.d/network; bad; vendor preset: disabled)
   Active: active (exited) since Thu 2018-11-29 20:18:26 CST; 21min ago
...................................

=================== 免 ask yes  no  远程ssh ==============

[root@Mob ~]# vim  /etc/ssh/ssh_config 

[root@Mob ~]# cat  -n  /etc/ssh/ssh_config  |sed  -n '41p;58,60p'
    41	   Port 22
    58	Host *
    59		GSSAPIAuthentication   yes
    60	      StrictHostKeyChecking   no

[root@Mob ~]# systemctl is-enabled   sshd
enabled

[root@Mob ~]# systemctl  restart  sshd
[root@Mob ~]# echo $?
0
=================== 安装虚拟化 常用 软件包 ==============

[root@Mob ~]# yum  -y  install git  vim-enhanced  cloud-utils-growpart  \
> qemu-kvm   libvirt    libvirt-client   libvirt-daemon   libvirt-daemon-driver-qemu  \
> libguestfs-tools   libvirt-python    python-setuptools    virt-install   virt-manager \
> virt-v2v   virt-viewer  bind-chroot  bind  chrony  vsftpd  elinks  lftp
....................
  yajl.x86_64 0:2.0.4-4.el7                                                                          
  yum-utils.noarch 0:1.1.31-42.el7                                                                   

Complete!

[root@Mob ~]# rpm  -q    git   vim-enhanced   cloud-utils-growpart   qemu-kvm  \
>  libvirt    libvirt-client   libvirt-daemon   libvirt-daemon-driver-qemu  \
> libguestfs-tools   libvirt-python    python-setuptools    virt-install  \
>  virt-manager   virt-v2v   virt-viewer  bind-chroot  \
>  bind   chrony   vsftpd   elinks   lftp

git-1.8.3.1-11.el7.x86_64
vim-enhanced-7.4.160-4.el7.x86_64
cloud-utils-growpart-0.29-2.el7.noarch
qemu-kvm-1.5.3-141.el7.x86_64       ## 为 kvm 提供底层仿真支持  【虚拟化平台 安装必备软件】

libvirt-3.2.0-14.el7.x86_64
libvirt-client-3.2.0-14.el7.x86_64    ## 用户端软件,提供客户端管理命令 【虚拟化平台 安装必备软件】
libvirt-daemon-3.2.0-14.el7.x86_64        ## 守护进程,管理虚拟机     【虚拟化平台 安装必备软件】
libvirt-daemon-driver-qemu-3.2.0-14.el7.x86_64  ## libvirtd 连接 qemu 的驱动  【虚拟化平台 安装必备软件】

libguestfs-tools-1.36.3-6.el7.noarch
libvirt-python-3.2.0-3.el7.x86_64
python-setuptools-0.9.8-7.el7.noarch
virt-install-1.4.1-7.el7.noarch      ## 系统安装工具 【可选功能】

virt-manager-1.4.1-7.el7.noarch   ## 图形管理工具 【可选功能】
virt-v2v-1.36.3-6.el7.x86_64   ## 虚拟机 迁移 工具【可选功能】 
virt-viewer-5.0-7.el7.x86_64
bind-chroot-9.9.4-50.el7.x86_64

bind-9.9.4-50.el7.x86_64
chrony-3.1-2.el7.centos.x86_64
vsftpd-3.0.2-22.el7.x86_64
elinks-0.12-0.36.pre6.el7.x86_64
lftp-4.4.8-8.el7_3.2.x86_64

*****未安装软件包 virt-p2v         ## 物理机 迁移 工具 【可选功能】
-----------------------------------------------------------------

[root@Mob ~]# rpm  -qa  |grep  cloud-
cloud-utils-growpart-0.29-2.el7.noarch
[root@Mob ~]# yum  -y install cloud-*
Installed:
  cloud-init.x86_64 0:0.7.9-9.el7.centos.2                                                                
........................     

Complete!
[root@Mob ~]# rpm  -qa  |grep  cloud-
cloud-utils-growpart-0.29-2.el7.noarch
cloud-init-0.7.9-9.el7.centos.2.x86_64
[root@Mob ~]# 

[root@mob ~]# rpm  -qa |grep bridge-utils  ## 虚拟 交换机 管理工具包
bridge-utils-1.5-9.el7.x86_64

/*****
linux中实用的小工具lrzsz
使用xshell或者其他ssh工具连接上服务器后我们需要向服务器中上传或者下载文件
这时候就用到了lrzsz可以代替其他的ftp软件
1 yun  install -y lrzsz      安装
2 rz     上传 
3 sz  test.txt    下载test.txt本地
 注意：该软件只用于小文件，比较大的文件用ftp工具
*****/

[root@mob ~]# yum  -y install  lrzsz

Installed:
  lrzsz.x86_64 0:0.12.20-36.el7                                                 

Complete!
[root@mob ~]# rpm  -q  lrzsz
lrzsz-0.12.20-36.el7.x86_64

[root@mob ~]# yum list  |grep bash-completion
bash-completion.noarch                   1:2.1-6.el7               CentOS7-1708 
libguestfs-bash-completion.noarch        1:1.36.3-6.el7            CentOS7-1708 

[root@mob ~]# yum  -y install  bash-completion  ## 支持table键
...................
Installed:
  bash-completion.noarch 1:2.1-6.el7                                            

Complete!
[root@mob ~]# rp
rpcbind      rpc.gssd     rpc.mountd   rpc.statd    rpmdb        rpmverify
rpcdebug     rpc.idmapd   rpc.nfsd     rpm          rpmkeys      
rpcgen       rpcinfo      rpc.rquotad  rpm2cpio     rpmquery  
   
[root@mob ~]# rpm  -qa |grep  bash
bash-completion-2.1-6.el7.noarch
bash-4.2.46-28.el7.x86_64

/*** *******************************************
[root@hiys ~]# virsh dominfo  Mob
Id:             1
名称：       Mob
UUID:           c1fcad11-0800-4f6d-97da-100a93993389
OS 类型：    hvm
状态：       running
CPU：          2
CPU 时间：   23.8s
最大内存： 2097152 KiB
使用的内存： 2097152 KiB
持久：       是
自动启动： 禁用
管理的保存： 否
安全性模式： none
安全性 DOI： 0

[root@hiys ~]#
****/
[root@Mob ~]# echo $LANG
zh_CN.UTF-8

[root@Mob ~]# sed  -n 7p  /etc/selinux/config 
SELINUX=disabled

[root@Mob ~]# rpm  -qa  |egrep  'NetworkManager-|firewalld-|python-firewall'

[root@Mob ~]# cat  -n  /etc/ssh/ssh_config  |sed  -n  '41p;58,60p' 
    41	   Port 22
    58	Host *
    59		GSSAPIAuthentication   yes
    60	        StrictHostKeyChecking  no

[root@Mob ~]# getenforce 
Disabled

[root@Mob ~]# LANG=en_US.UTF-8

[root@Mob ~]# echo  $LANG
en_US.UTF-8

[root@Mob ~]# locale   ## 查看系统安装的语言包
LANG=en_US.UTF-8
...........................
LC_IDENTIFICATION="en_US.UTF-8"
LC_ALL=

------------------------------  禁用空路由 ----------------------

[root@Mob ~]# vim   /etc/sysconfig/network
[root@Mob ~]# cat  /etc/sysconfig/network
# Created by anaconda
NOZEROCONF="yes"

--------------------------------------- 添 加 console配置 --------------

[root@Mob ~]#  cat  /etc/default/grub 
GRUB_TIMEOUT=5
GRUB_DISTRIBUTOR="$(sed 's, release .*$,,g' /etc/system-release)"
GRUB_DEFAULT=saved
GRUB_DISABLE_SUBMENU=true
GRUB_TERMINAL_OUTPUT="console"
GRUB_CMDLINE_LINUX="rhgb quiet"
GRUB_DISABLE_RECOVERY="true"

[root@mob ~]# ll  /etc/sysconfig/grub 
lrwxrwxrwx. 1 root root 17 Nov 29 20:09 /etc/sysconfig/grub -> /etc/default/grub

[root@mob ~]# ll  /etc/default/grub 
-rw-r--r-- 1 root root 386 Nov 30 16:42 /etc/default/grub

[root@Mob ~]# ll /etc/default/grub
-rw-r--r--. 1 root root 218 Nov 29 20:12 /etc/default/grub

[root@Mob ~]# vim  /etc/default/grub

[root@Mob ~]# cat  /etc/default/grub
GRUB_TIMEOUT=5
GRUB_DISTRIBUTOR="$(sed 's, release .*$,,g' /etc/system-release)"
GRUB_DEFAULT=saved
GRUB_DISABLE_SUBMENU=true
GRUB_TERMINAL="serial console"
GRUB_SERIAL_COMMAND="serial --unit=1 --speed=115200"
GRUB_CMDLINE_LINUX="biosdevname=0 net.ifnames=0 console=tty0 console=ttyS0,115200n8"
GRUB_DISABLE_LINUX_UUID="true"
GRUB_ENABLE_LINUX_LABEL="true"
GRUB_DISABLE_RECOVERY="true"

/**** tty0 字符终端
ttyS0 串口终端
serial console  串口终端配置
目的: 台机已经装好Linux，显示器有问题，平时一般都SSH控制，当Linux网络挂的时候，想通过串口来管理。
硬件:台机自带两个串口(上面的是COM1)[under Windows] or ttyS0[under Linux))，
笔记本T61p没有串口，买了个USB转串口。
同时需要串口交叉线一根(NULL modem Cable),母对母(公的是针)，都是凹口那种。
  控制台定向到串口终端
物理连接好串口； 然后配置： 编辑/boot/grub/grub.conf ，添加内容： console=ttyS0,115200n8  console=tty0

--------------------------------- 重新生成grub.cfg ------------------

[root@Mob ~]# rpm  -q  grub2-tools
grub2-tools-2.02-0.64.el7.centos.x86_64

[root@Mob ~]# grub2-mkconfig  -o  /boot/grub2/grub.cfg 

Generating grub configuration file ...
Found linux image: /boot/vmlinuz-3.10.0-693.el7.x86_64
Found initrd image: /boot/initramfs-3.10.0-693.el7.x86_64.img
Found linux image: /boot/vmlinuz-0-rescue-c1fcad1108004f6d97da100a93993389
Found initrd image: /boot/initramfs-0-rescue-c1fcad1108004f6d97da100a93993389.img
done

[root@mob ~]# cat  /etc/securetty |grep ttyS0
ttyS0


[root@Mob ~]# ifconfig 

eth0: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 1500
        inet 192.168.1.123  netmask 255.255.255.0  broadcast 192.168.1.255
........................

lo: flags=73<UP,LOOPBACK,RUNNING>  mtu 65536
        inet 127.0.0.1  netmask 255.0.0.0
........................

virbr0: flags=4099<UP,BROADCAST,MULTICAST>  mtu 1500
        inet 192.168.122.1  netmask 255.255.255.0  broadcast 192.168.122.255
...................................

[root@Mob ~]# blkid                  ## 具体看blkid行首显示的结果/dev/vda1

/dev/vda1: UUID="bb518764-138d-4e2c-b5eb-6da898ce34ec" TYPE="xfs" 

[root@Mob ~]# tail  -2  /etc/fstab   ## 在文件 /etc/fstab中 把UUID 改成 /dev/vda1
#
UUID=bb518764-138d-4e2c-b5eb-6da898ce34ec /         xfs     defaults        0   0

[root@Mob ~]# lsblk
NAME   MAJ:MIN RM SIZE RO TYPE MOUNTPOINT
vda    253:0    0   3G  0 disk 
└─vda1 253:1    0   3G  0 part /


[root@Mob ~]# du  -sh  /dev/vda1
0	/dev/vda1

[root@Mob ~]# vim  /etc/fstab    ## 在文件 /etc/fstab中 把UUID 改成 /dev/vda1
[root@Mob ~]# tail  -2  /etc/fstab
#
/dev/vda1     /     xfs       defaults    0   0

---------------------------- ## 安装扩展分区软件 ---------------------------------
             第一次开机自动扩容【英语环境LANG=en_US.UTF-8】

[root@Mob ~]# rpm  -q   cloud-utils-growpart
cloud-utils-growpart-0.29-2.el7.noarch

[root@Mob ~]# rpm  -qf  /bin/growpart
cloud-utils-growpart-0.29-2.el7.noarch

[root@Mob ~]# ll  /usr/bin/growpart 
-rwxr-xr-x. 1 root root 21428 Aug  4  2017 /usr/bin/growpart



------------------------------------------  配置网卡 ------------------------

[root@Mob ~]# cat  /etc/sysconfig/network-scripts/ifcfg-eth0

# Generated by dracut initrd
NAME="eth0"
HWADDR="52:54:00:6e:a4:4f"
ONBOOT=yes
NETBOOT=yes   ## 是 支持网络引导
UUID="f34edaad-569e-485d-a523-2f969cac397e"
IPV6INIT=yes
BOOTPROTO=dhcp
TYPE=Ethernet

[root@Mob ~]# vim  /etc/sysconfig/network-scripts/ifcfg-eth0 

[root@Mob ~]# cat  /etc/sysconfig/network-scripts/ifcfg-eth0

# Generated by dracut initrd
NAME="eth0"
DEVICE="eth0"  ## 指定设备驱动
ONBOOT=yes   ## 开机自启动
IPV6INIT=no
NM_CONTROLLED="no"  ## 禁用 NetworkManager 服务
BOOTPROTO=dhcp
TYPE=Ethernet   ## 网卡类型

[root@Mob ~]# systemctl restart  network

[root@Mob ~]# cat  /etc/sysconfig/network-scripts/ifcfg-eth0

# Generated by dracut initrd
NAME="eth0"
DEVICE="eth0"
ONBOOT=yes
NM_CONTROLLED="no"
TYPE=Ethernet
BOOTPROTO=dhcp
IPV6INIT=no

[root@Mob ~]# systemctl status  network

● network.service - LSB: Bring up/down networking
.....................
   Active: active (running) since Fri 2018-11-30 17:25:48 CST; 18s ago
..................................
Nov 30 17:25:48 Mob network[20478]: [  OK  ]
..................

[root@Mob ~]# systemctl is-active  network
active
[root@Mob ~]# systemctl is-active  NetworkManager
inactive

[root@Mob ~]# ifconfig 
eth0: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 1500
        inet 192.168.1.123  netmask 255.255.255.0  broadcast 192.168.1.255
...........................................

lo: flags=73<UP,LOOPBACK,RUNNING>  mtu 65536
        inet 127.0.0.1  netmask 255.0.0.0
.................................

virbr0: flags=4099<UP,BROADCAST,MULTICAST>  mtu 1500
        inet 192.168.122.1  netmask 255.255.255.0  broadcast 192.168.122.255
..............................
-------------------------------虚拟机可以上网 -----------------------


[root@Mob ~]# ping -c2  www.baidu.com
.......................
64 bytes from 14.215.177.39 (14.215.177.39): icmp_seq=1 ttl=54 time=10.2 ms
64 bytes from 14.215.177.39 (14.215.177.39): icmp_seq=2 ttl=54 time=11.0 ms
..................................

[root@Mob ~]# cat  /etc/resolv.conf 
; generated by /usr/sbin/dhclient-script
search vbr
nameserver 192.168.1.254

[root@Mob ~]# elinks  -dump www.baidu.com |head  -30 |tail  -7
   网页 [31]资讯 [32]贴吧 [33]知道 [34]音乐 [35]图片 [36]视频 [37]地图 [38]文
   库 [39]更多»

                                      百度

   [40]把百度设为主页[41]关于百度[42]About  Baidu[43]百度推广

[root@Mob ~]# yum  provides  dig
.........................  
32:bind-utils-9.9.4-50.el7.x86_64 : Utilities for querying DNS name servers
Repo        : CentOS7-1708
Matched from:
Filename    : /usr/bin/dig

[root@Mob ~]# rpm  -qa  |grep bind
...................
[root@Mob ~]# yum  -y install  bind-utils
 .......................
Installed:
  bind-utils.x86_64 32:9.9.4-50.el7                                                                       

Complete!
[root@Mob ~]# rpm  -qa  |grep bind
bind-license-9.9.4-50.el7.noarch
rpcbind-0.2.0-42.el7.x86_64
bind-chroot-9.9.4-50.el7.x86_64
bind-libs-9.9.4-50.el7.x86_64
bind-utils-9.9.4-50.el7.x86_64
bind-libs-lite-9.9.4-50.el7.x86_64
bind-9.9.4-50.el7.x86_64

[root@Mob ~]# dig  +trace  ntp.aliyun.com
....................................+gxtmOn3n8ZIwyDitH3E7zW e8hArA==
;; Received 841 bytes from 192.168.1.254#53(192.168.1.254) in 252 ms
................................................
ntp.aliyun.com.		300	IN	A	203.107.6.88
aliyun.com.		172800	IN	NS	ns3.aliyun.com.
aliyun.com.		172800	IN	NS	ns5.aliyun.com.
aliyun.com.		172800	IN	NS	ns4.aliyun.com.
;; Received 209 bytes from 140.205.2.187#53(ns5.aliyun.com) in 35 ms

----------------------------------真机 可以上网   -----------------------------------------------------

[root@hiys ~]# systemctl is-active  network
failed
[root@hiys ~]# systemctl is-active  NetworkManager
active

[root@hiys ~]#   ping -c2  www.baidu.com
PING www.a.shifen.com (14.215.177.39) 56(84) bytes of data.
64 bytes from 14.215.177.39 (14.215.177.39): icmp_seq=1 ttl=55 time=10.6 ms
64 bytes from 14.215.177.39 (14.215.177.39): icmp_seq=2 ttl=55 time=10.1 ms

--- www.a.shifen.com ping statistics ---
2 packets transmitted, 2 received, 0% packet loss, time 1001ms
rtt min/avg/max/mdev = 10.183/10.417/10.651/0.234 ms

[root@hiys ~]# cat  /etc/resolv.conf 
# Generated by NetworkManager
nameserver 176.121.0.100

[root@hiys ~]# elinks -dump  www.baidu.com
   Refresh: [1]/baidu.html?from=noscript
   Link: [2]百度搜索 (search)
   Link: [3]dns-prefetch
.............................
                          [19]百度首页[20]设置[21]登录
   [22]新闻[23]hao123[24]地图[25]视频[26]贴吧[27]学术[28]登录[29]设置[30]更多
                                      产品
   网页 [31]资讯 [32]贴吧 [33]知道 [34]音乐 [35]图片 [36]视频 [37]地图 [38]文
   库 [39]更多»
............................................


============= 关闭虚拟机后执行信息清理工作 ===============

[root@Mob ~]# shutdown  -h  now

[root@hiys ~]# which  virt-sysprep 
/usr/bin/virt-sysprep

[root@hiys ~]# rpm  -qf  /usr/bin/virt-sysprep
libguestfs-tools-c-1.36.3-6.el7.x86_64

[root@hiys ~]# virt-sysprep  -d  Mob   ## 真机上面操作，Mob 为 模版 虚拟机 名称

[   0.0] Examining the guest ...
.................................
[  30.1] Performing "lvm-uuids" ...

[root@hiys ~]# virsh  start  Mob  && sleep  12
域 Mob 已开始

/** *********************
[root@Va1 ~]# ssh-keygen   ## 【 第二种方式 ssh-keygen  -b  2048  -t  rsa  -N  ''  -f  key 】
Generating public/private rsa key pair.
Enter file in which to save the key (/root/.ssh/id_rsa): 直接回车
**/

[root@hiys ~]# ssh  -X 192.168.1.123
ssh: connect to host 192.168.1.123 port 22: Connection refused

[root@hiys ~]# ssh-keygen   -R   192.168.1.123  ## 使用命令清除所连接的IP

# Host 192.168.1.123 found: line 24
/root/.ssh/known_hosts updated.
Original contents retained as /root/.ssh/known_hosts.old
[root@hiys ~]# ssh  -X 192.168.1.123
Warning: Permanently added '192.168.1.123' (ECDSA) to the list of known hosts.
Permission denied (publickey,gssapi-keyex,gssapi-with-mic).
[root@hiys ~]# ssh  -X 192.168.1.123
Permission denied (publickey,gssapi-keyex,gssapi-with-mic).
[root@hiys ~]# virsh  console  Mob
连接到域 Mob
换码符为 ^]

CentOS Linux 7 (Core)
Kernel 3.10.0-693.el7.x86_64 on an x86_64

mob login: root
Password: 1
Last login: Sat Dec  1 12:52:44 on tty1
[root@mob ~]# tty
/dev/ttyS0
[root@mob ~]# ifconfig 
eth0: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 1500
        inet 192.168.1.123  netmask 255.255.255.0  broadcast 192.168.1.255
..............................
lo: flags=73<UP,LOOPBACK,RUNNING>  mtu 65536
        inet 127.0.0.1  netmask 255.0.0.0
................................
virbr0: flags=4099<UP,BROADCAST,MULTICAST>  mtu 1500
        inet 192.168.122.1  netmask 255.255.255.0  broadcast 192.168.122.255
...........................
[root@mob ~]# rpm  -q rsync
rsync-3.0.9-18.el7.x86_64
[root@mob ~]# shutdown  -h now


====== 准备根据第一个后端盘【一个网卡】模版 制作 第二个子 后端盘【3个网卡】=============================

[root@hiys ~]# vim /etc/rc.local
[root@hiys ~]# source /etc/rc.local

[root@hiys ~]# tail -2 /etc/fstab 
/var/lib/libvirt/images/iso/rhel-server-7.4-x86_64-dvd.iso  /var/ftp/rhel7 iso9660 defaults 0 0
UUID=1ae681d3-b6db-4609-bed8-f78295a292cb  /javaweb           ext4     defaults    0   0

[root@hiys ~]# tail -3 /etc/rc.local 
mount  -t  iso9660  -o loop,ro  /var/lib/libvirt/images/iso/CentOS7-1708.iso   /var/ftp/CentOS7-1708/
mount  -t  iso9660  -o loop,ro  /var/lib/libvirt/images/iso/RHEL7-extras.iso   /var/ftp/RHEL7-extras/
mount  -t  iso9660  -o loop,ro  /var/lib/libvirt/images/iso/RHEL7OSP-10.iso    /var/ftp/RHEL7OSP/

[root@hiys ~]# ls  /var/ftp/
CentOS7-1708  docker  pub  rhel7  RHEL7-extras  RHEL7OSP  share

[root@hiys ~]# cd   /var/lib/libvirt/images/
[root@hiys images]# ls
。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。

[root@hiys images]# qemu-img  create  -b  Moban.qcow2  -f  qcow2  Va1.img  18G

Formatting 'Va1.img', fmt=qcow2 size=19327352832 backing_file='Moban.qcow2' encryption=off cluster_size=65536 lazy_refcounts=off 

[root@hiys images]# qemu-img  create   -f  qcow2  disk-Va1.img  12G

Formatting 'disk-Va1.img', fmt=qcow2 size=12884901888 encryption=off cluster_size=65536 lazy_refcounts=off 


[root@hiys images]# cd  /etc/libvirt/qemu/
[root@hiys qemu]# ls
autostart  networks    openstack.xml  Va6.xml  Va8.xml  Va.xml.txt
Mob.xml    nova01.xml  Va5.xml        Va7.xml  Va9.xml  win2008.xml
[root@hiys qemu]# cat  Va.xml.txt 
<domain type='kvm'>
  <name>Va</name>                   ## 修改点 1
  <memory unit='GB'>4</memory>
  <currentMemory unit='GB'>2</currentMemory>
  <vcpu placement='static'>2</vcpu>
  <os>
    <type arch='x86_64' machine='pc'>hvm</type>
    <boot dev='hd'/>
    <bootmenu enable='yes'/>
    <bios useserial='yes'/>
  </os>
  <features>
    <acpi/>
    <apic/>
  </features>
  <cpu mode='host-passthrough'>
  </cpu>
  <clock offset='localtime'/>
  <on_poweroff>destroy</on_poweroff>
  <on_reboot>restart</on_reboot>
  <on_crash>restart</on_crash>
  <devices>
    <emulator>/usr/libexec/qemu-kvm</emulator>
    <disk type='file' device='disk'>
      <driver name='qemu' type='qcow2'/>
      <source file='/var/lib/libvirt/images/Va.img'/>     ## 修改点 2
      <target dev='vda' bus='virtio'/>
    </disk>
    <disk type='file' device='disk'>
      <driver name='qemu' type='qcow2'/>
      <source file='/var/lib/libvirt/images/disk-Va.img'/>   ## 修改点 3
      <target dev='vdb' bus='virtio'/>
    </disk>
    <interface type='bridge'>
      <source bridge='vbr'/>
      <model type='virtio'/>
    </interface>
    <interface type='bridge'>
      <source bridge='private1'/>
      <model type='virtio'/>
    </interface>
    <interface type='bridge'>
      <source bridge='vbr2'/>
      <model type='virtio'/>
    </interface>
    <channel type='unix'>
      <target type='virtio' name='org.qemu.guest_agent.0'/>
    </channel>
    <serial type='pty'></serial>
    <console type='pty'>
      <target type='serial'/>
    </console>
    <memballoon model='virtio'></memballoon>
  </devices>
</domain>
[root@hiys qemu]# 
[root@hiys qemu]# \cp  Va.xml.txt   Va1.xml

[root@hiys qemu]# sed  -i  '/<name>/s/\(Va\)/\11/;/\/Va.img/s/Va/Va1/;/disk-Va.img/s/Va/Va1/' Va1.xml 

[root@hiys qemu]# cat  -n   Va1.xml  |sed  -n  '/<name>\|Va1.img\|disk-Va1.img/p'
     2	  <name>Va1</name>
    26	      <source file='/var/lib/libvirt/images/Va1.img'/>
    31	      <source file='/var/lib/libvirt/images/disk-Va1.img'/>

[root@hiys qemu]# 
[root@hiys qemu]# cat  Va1.xml 
<domain type='kvm'>
  <name>Va1</name>
  <memory unit='GB'>4</memory>
  <currentMemory unit='GB'>2</currentMemory>
  <vcpu placement='static'>2</vcpu>
  <os>
    <type arch='x86_64' machine='pc'>hvm</type>
    <boot dev='hd'/>
    <bootmenu enable='yes'/>
    <bios useserial='yes'/>
  </os>
  <features>
    <acpi/>
    <apic/>
  </features>
  <cpu mode='host-passthrough'>
  </cpu>
  <clock offset='localtime'/>
  <on_poweroff>destroy</on_poweroff>
  <on_reboot>restart</on_reboot>
  <on_crash>restart</on_crash>
  <devices>
    <emulator>/usr/libexec/qemu-kvm</emulator>
    <disk type='file' device='disk'>
      <driver name='qemu' type='qcow2'/>
      <source file='/var/lib/libvirt/images/Va1.img'/>
      <target dev='vda' bus='virtio'/>
    </disk>
    <disk type='file' device='disk'>
      <driver name='qemu' type='qcow2'/>
      <source file='/var/lib/libvirt/images/disk-Va1.img'/>
      <target dev='vdb' bus='virtio'/>
    </disk>
    <interface type='bridge'>
      <source bridge='vbr'/>
      <model type='virtio'/>
    </interface>
    <interface type='bridge'>
      <source bridge='private1'/>
      <model type='virtio'/>
    </interface>
    <interface type='bridge'>
      <source bridge='vbr2'/>
      <model type='virtio'/>
    </interface>
    <channel type='unix'>
      <target type='virtio' name='org.qemu.guest_agent.0'/>
    </channel>
    <serial type='pty'></serial>
    <console type='pty'>
      <target type='serial'/>
    </console>
    <memballoon model='virtio'></memballoon>
  </devices>
</domain>
[root@hiys qemu]# 
[root@hiys qemu]# pwd
/etc/libvirt/qemu
[root@hiys qemu]# virsh  define  /etc/libvirt/qemu/Va1.xml 
定义域 Va1（从 /etc/libvirt/qemu/Va1.xml）

[root@hiys qemu]# virsh start  Va1
域 Va1 已开始

[root@hiys qemu]# virsh  autostart   Va1
域 Va1标记为自动开始

[root@hiys qemu]# virsh  console  Va1

连接到域 Va1
换码符为 ^]



[root@hiys qemu]# Ctrl  +  ]  退出 控制台

--------------------------------------     第一次开机自动扩容【英语环境LANG=en_US.UTF-8】 -----------
-------------------------------------注意这是为 前端盘Va1 扩容准备-- 后端盘Mob不需要 扩容，仅仅是演示 --------------

****[root@Va1 ~]# /usr/bin/growpart   /dev/vda  1     ## 给/dev/vda的第1个分区扩容

NOCHANGE: partition 1 could only be grown by -33 [fudge=2048]

----------------------------------------注意这是为 前端盘 扩容准备---------- 后端盘不需要 扩容，仅仅是演示 ---------------------------------------------------------

[root@Va1 ~]# lsblk   # 先 查看 lsblk   ## 拼凑的实验失败品
NAME   MAJ:MIN RM SIZE RO TYPE MOUNTPOINT
vda    253:0    0   3G  0 disk 
└─vda1 253:1    0   3G  0 part /

[root@Mob ~]# ll /usr/sbin/xfs_growfs 
-rwxr-xr-x. 1 root root 335104 Aug  4  2017 /usr/sbin/xfs_growfs

-------------------------------------------------     第一次开机自动扩容【英语环境LANG=en_US.UTF-8】 -------------------------
-----------------注意这是为 前端盘 扩容准备---------- 后端盘不需要 扩容，仅仅是演示 --------------

***[root@Mob ~]# /usr/sbin/xfs_growfs   /    # 文件系统扩容
meta-data=/dev/vda1              isize=512    agcount=4, agsize=196544 blks
         =                       sectsz=512   attr=2, projid32bit=1
         =                       crc=1        finobt=0 spinodes=0
data     =                       bsize=4096   blocks=786176, imaxpct=25
         =                       sunit=0      swidth=0 blks
naming   =version 2              bsize=4096   ascii-ci=0 ftype=1
log      =internal               bsize=4096   blocks=2560, version=2
         =                       sectsz=512   sunit=0 blks, lazy-count=1
realtime =none                   extsz=4096   blocks=0, rtextents=0
[root@Mob ~]# echo  $?
0
[root@Mob ~]# 
**************** 自动 扩容的 配置静态ip 的脚本






http://www.cnblogs.com/rusking/p/7634412.html
客户端时间同步配置： 忘了在模版中设置

 注意/etc/resolv.conf
servername 在上
[root@Mob ~]# cat  /etc/resolv.conf 
; generated by /usr/sbin/dhclient-script
nameserver 192.168.1.254
search  vbr

## 1 U=44.45mm
IDC  Internet 数据中心

A (126) 1  -126.0.0.0  [0000  0001] -[0111 1111]  私有地址A 10.0.0.1    ~ 10.255.255.254
B (64 ) 128-191.0.0.0  [1000  0000] -[1011 1111]  私有地址B 172.16.0.1  ~ 172.31.255.254
C (32 ) 192-223.0.0.0  [1100  0000] -[1101 1111]  私有地址C 192.168.0.1 ~ 192.168.255.254

无法通网，派错？
1 ping网关  ping 底层 使用 icmp，工作第三层

2 ping 通 找高层次问题，否则底层次问题

3 ping 域名 可以找 DNS 问题

GNU GNU is Not Unix
rpm  RPM  Package Manager

gnu linux 全称

Red Hat Enterprise  Linux

Fedora Core  面向个人 社区版 免费

CentOS  社区企业操作系统 免费

红帽已经被IBM收购


windows 分区
C  ： 120 G 系统
D  ： 200 G 软件
E  ： 剩余空间1/2 常用文件
F  ： 不常用 文件
Linux 分区
[root@hiys ~]# lsblk 
NAME   MAJ:MIN RM   SIZE RO TYPE MOUNTPOINT
sda      8:0    0 931.5G  0 disk 
├─sda1   8:1    0   200G  0 part /var/lib/libvirt/images
├─sda2   8:2    0   120G  0 part /
└─sda3   8:3    0   122G  0 part /javaweb
sdb      8:16   1 117.2G  0 disk 
└─sdb1   8:17   1 117.2G  0 part /mnt
loop0    7:0    0   3.8G  0 loop /var/ftp/rhel7
loop1    7:1    0   8.1G  1 loop /var/ftp/CentOS7-1708
loop2    7:2    0   169M  1 loop /var/ftp/RHEL7-extras
loop3    7:3    0     3G  1 loop /var/ftp/RHEL7OSP

/boot
/
/var/


命令行提示符号是 PS1 定义的
PS1='\u@\t  \w\$ '
PS1='[ \u@\h  \W] \$ '


[root@Va9 ~]# stat  anaconda-ks.cfg                                                      ★ --虚拟机--★ 
stat: 无法获取"anaconda-ks.cfg" 的文件状态(stat): 没有那个文件或目录

[root@Va9 ~]# touch  anaconda-ks.cfg  ## touch 作用创建文件
[root@Va9 ~]# touch  anaconda-ks.cfg ## touch 更新文件的  时间
[root@Va9 ~]# stat  anaconda-ks.cfg
  文件："anaconda-ks.cfg"
  大小：0         	块：0          IO 块：4096   普通空文件
设备：fd01h/64769d	Inode：1053827     硬链接：1
权限：(0644/-rw-r--r--)  Uid：(    0/    root)   Gid：(    0/    root)
最近访问：2018-12-01 19:54:04.707834813 +0800
最近更改：2018-12-01 19:54:04.707834813 +0800
最近改动：2018-12-01 19:54:04.707834813 +0800
创建时间：-
[root@Va9 ~]# 
[root@Va9 ~]# touch  anaconda-ks.cfg
[root@Va9 ~]# stat  anaconda-ks.cfg
  文件："anaconda-ks.cfg"
  大小：0         	块：0          IO 块：4096   普通空文件
设备：fd01h/64769d	Inode：1053827     硬链接：1
权限：(0644/-rw-r--r--)  Uid：(    0/    root)   Gid：(    0/    root)
最近访问：2018-12-01 19:56:01.788812593 +0800
最近更改：2018-12-01 19:56:01.788812593 +0800
最近改动：2018-12-01 19:56:01.788812593 +0800
创建时间：-
[root@Va9 ~]# 


[root@Va9 ~]# alias cp
alias cp='cp -i'
[root@Va9 ~]# alias  ls
alias ls='ls --color=auto'
[root@Va9 ~]# which ls  ##ls是外部命令【删除相应文件，则无法执行】
alias ls='ls --color=auto'
	/usr/bin/ls

[root@Va9 ~]# type  ls
ls 是 `ls --color=auto' 的别名

[root@Va9 ~]# which  cd  ##cd 是内部命令
/usr/bin/cd
[root@Va9 ~]# type  cd  ## 查看是哪种命令类型
cd 是 shell 内嵌

[root@Va9 ~]# type   ]
-bash: type: ]: 未找到

[root@Va9 ~]# type   .
. 是 shell 内嵌

[root@Va9 ~]# type   :
: 是 shell 内嵌

[root@Va9 ~]# type   [
[ 是 shell 内嵌

[root@Va9 ~]# enable   ## 列出所有内部命令
enable .
enable :
enable [
enable alias
enable bg
enable bind
enable break
enable builtin
enable caller
enable cd
enable command
enable compgen
enable complete
enable compopt
enable continue
enable declare
enable dirs
enable disown
enable echo
enable enable
enable eval
enable exec
enable exit
enable export
enable false
enable fc
enable fg
enable getopts
enable hash
enable help
enable history
enable jobs
enable kill
enable let
enable local
enable logout
enable mapfile
enable popd
enable printf
enable pushd
enable pwd
enable read
enable readarray
enable readonly
enable return
enable set
enable shift
enable shopt                                                                             ★ --虚拟机--★ 
enable source
enable suspend
enable test
enable times
enable trap
enable true
enable type
enable typeset
enable ulimit
enable umask
enable unalias
enable unset
enable wait
[root@Va9 ~]# 
[root@Va9 ~]# vim  a.txt
192.168.1.188
192.198.192
~       192                                                                                             
~       168                                                                                             
~       188                                                                                             
~       198                                                                                             
~       Ctrl   + n  快捷键 组合 
~                                                                                                       
~                                                                                                       
~                                                                                                       
~                                                                                                       
~                                                                                                       
~                                                                                                       
~                                                                                                       
-- 关键字补全 (^N^P) 匹配 1 / 4

[root@Va9 ~]# grep  'a*c'  /etc/passwd       ## 表示 匹配 c 字符前面有 零到多个字符 a 的 行
sync:x:5:0:sync:/sbin:/bin/sync
tss:x:59:59:Account used by the trousers package to sandbox the tcsd daemon:/dev/null:/sbin/nologin
chrony:x:998:996::/var/lib/chrony:/sbin/nologin
tcpdump:x:72:72::/:/sbin/nologin
[root@Va9 ~]# 
[root@Va9 ~]# grep  '.*ot'  /etc/passwd
root:x:0:0:root:/root:/bin/bash
operator:x:11:0:operator:/root:/sbin/nologin









