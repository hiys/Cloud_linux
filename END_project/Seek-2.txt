


================= 安装 linux 自定义虚拟机 制作 模板 配置yum 网卡   配 置 转发 DNS  ===============

===================  配 置 ftp 服务 [ 1  ] =====================

[root@hiys ~]# rpm  -q  vsftpd
vsftpd-3.0.2-22.el7.x86_64

[root@hiys ~]# vim  /etc/vsftpd/vsftpd.conf 

112 listen=YES
117 listen_ipv6=NO

[root@hiys ~]# cat  -n  /etc/vsftpd/vsftpd.conf |sed  -n  '112p;117,118p'
   112	listen=YES
   117	#listen_ipv6=YES
   118	listen_ipv6=NO

[root@hiys ~]# systemctl  enable  vsftpd

[root@hiys ~]# systemctl  restart  vsftpd

[root@hiys ~]# systemctl  is-active  vsftpd
active

====================  =  搭建 网络 yum 源   [ 2  ]== 准备 光盘 iso 文件 ==========================

[root@hiys ~]# cp  /hiyes/ISO-RPM-TAR-ZIP/CentOS7-1708.iso   /var/lib/libvirt/images/iso/
cp：是否覆盖"/var/lib/libvirt/images/iso/CentOS7-1708.iso"？ y

[root@hiys ~]# du  -sh  /var/lib/libvirt/images/iso/CentOS7-1708.iso 
8.1G	/var/lib/libvirt/images/iso/CentOS7-1708.iso

[root@hiys ~]# ll  /var/lib/libvirt/images/iso/CentOS7-1708.iso
-rwxr-xr-x 1 root root 8694792192 12月  2 11:04 /var/lib/libvirt/images/iso/CentOS7-1708.iso

[root@hiys ~]# du  -s  /var/lib/libvirt/images/iso/CentOS7-1708.iso 
8491012	/var/lib/libvirt/images/iso/CentOS7-1708.iso


========================  搭建 网络 yum 源 [ 2  ] ============================

[root@hiys ~]# ls  /var/ftp/rhel7/
..........................

[root@hiys ~]# ls  /etc/yum.repos.d/
ansible.repo       NSD-2018-1-12.tar.gz   repo               RHEL7OSP.repo
CentOS7-1708.repo  packagekit-media.repo  RHEL7-extras.repo  rhel7.repo

[root@hiys ~]# cat  /etc/yum.repos.d/rhel7.repo 
[rhel7]
name=rhel7.4
baseurl=file:///var/ftp/rhel7/
gpgcheck=0
enabled=1

[root@hiys ~]# ifconfig  enp2s0 |sed  -n  '/inet /p'
        inet 176.121.213.151  netmask 255.255.255.0  broadcast 176.121.213.255

[root@hiys ~]# vim  /etc/yum.repos.d/CentOS7-1708.repo

[root@hiys ~]# cat  /etc/yum.repos.d/CentOS7-1708.repo 
[CentOS7-1708]
name=CentOS7-1708
gpgcheck=0
baseurl=ftp://176.121.213.151/CentOS7-1708/
enabled=1

[root@hiys ~]# mkdir  /var/ftp/CentOS7-1708
 
[root@hiys ~]# ls  /var/ftp/CentOS7-1708/

[root@hiys ~]# ls  /var/lib/libvirt/images/iso/CentOS7-1708.iso 
/var/lib/libvirt/images/iso/CentOS7-1708.iso

[root@hiys ~]# mount  -o  loop  -t  iso9660  /var/lib/libvirt/images/iso/CentOS7-1708.iso   /var/ftp/CentOS7-1708/
mount: /dev/loop2 is write-protected, mounting read-only

[root@hiys ~]# df  -hT  |grep  CentOS7
/dev/loop2     iso9660   8.1G  8.1G     0 100% /var/ftp/CentOS7-1708

[root@hiys ~]# du  -sh  /var/lib/libvirt/images/iso/CentOS7-1708.iso 
8.1G	/var/lib/libvirt/images/iso/CentOS7-1708.iso

[root@hiys ~]# umount   /var/ftp/CentOS7-1708/

[root@hiys ~]# df  -hT  |grep  CentOS7

[root@hiys ~]# vim  /etc/rc.local   ## 开机自动挂载

[root@hiys ~]# tail  -5  /etc/rc.local 
touch /var/lock/subsys/local
/usr/bin/crack_pycharm &
mount  -t  iso9660  -o  loop,ro  /var/lib/libvirt/images/iso/CentOS7-1708.iso  /var/ftp/CentOS7-1708/
mount  -t  iso9660  -o  loop,ro  /var/lib/libvirt/images/iso/RHEL7-extras.iso  /var/ftp/RHEL7-extras/
mount  -t  iso9660  -o  loop,ro  /var/lib/libvirt/images/iso/RHEL7OSP-10.iso   /var/ftp/RHEL7OSP/

[root@hiys ~]# source  /etc/rc.local
mount: /dev/loop2 is write-protected, mounting read-only
...........................

[root@hiys ~]# ls  /var/ftp/CentOS7-1708/
.............................

[root@hiys ~]# df  -hT  |grep  CentOS7
/dev/loop2     iso9660   8.1G  8.1G     0 100% /var/ftp/CentOS7-1708

[root@hiys ~]# ls  /etc/yum.repos.d/
ansible.repo       NSD-2018-1-12.tar.gz   repo               RHEL7OSP.repo
CentOS7-1708.repo  packagekit-media.repo  RHEL7-extras.repo  rhel7.repo

[root@hiys ~]# vim  /etc/yum.repos.d/ansible.repo 
[root@hiys ~]# cat  /etc/yum.repos.d/ansible.repo
[ansible]
name=ansible
baseurl=ftp://176.121.213.151/ansible
gpgcheck=0
enabled=1
[root@hiys ~]# vim  /etc/yum.repos.d/RHEL7OSP.repo 

[root@hiys ~]# cat  /etc/yum.repos.d/RHEL7OSP.repo
[RHEL7OSP-devtools-rpms]
name=RHEL7OSP/rhel-7-server-openstack-10-devtools-rpms
gpgcheck=0
baseurl=ftp://176.121.213.151/RHEL7OSP/rhel-7-server-openstack-10-devtools-rpms
enabled=1

[RHEL7OSP-optools-rpms]
name=RHEL7OSP/rhel-7-server-openstack-10-optools-rpms
gpgcheck=0
baseurl=ftp://176.121.213.151/RHEL7OSP/rhel-7-server-openstack-10-optools-rpms
enabled=1

[RHEL7OSP-rpms]
name=RHEL7OSP/rhel-7-server-openstack-10-rpms
gpgcheck=0
baseurl=ftp://176.121.213.151/RHEL7OSP/rhel-7-server-openstack-10-rpms
enabled=1

[RHEL7OSP-tools-rpms]
name=RHEL7OSP/rhel-7-server-openstack-10-tools-rpms
gpgcheck=0
baseurl=ftp://176.121.213.151/RHEL7OSP/rhel-7-server-openstack-10-tools-rpms
pnabled=1

[RHEL7OSP-rhceph-2-mon-rpms]
name=RHEL7OSP/rhel-7-server-rhceph-2-mon-rpms
gpgcheck=0
baseurl=ftp://176.121.213.151/RHEL7OSP/rhel-7-server-rhceph-2-mon-rpms
enabled=1

[RHEL7OSP-rhceph-2-osd-rpms]
name=RHEL7OSP/rhel-7-server-rhceph-2-osd-rpms
gpgcheck=0
baseurl=ftp://176.121.213.151/RHEL7OSP/rhel-7-server-rhceph-2-osd-rpms
enabled=1

[RHEL7OSP-rhceph-2-tools-rpms]
name=RHEL7OSP/rhel-7-server-rhceph-2-tools-rpms
gpgcheck=0
baseurl=ftp://176.121.213.151/RHEL7OSP/rhel-7-server-rhceph-2-tools-rpms
enabled=1

[RHEL7OSP-rhscon-2-agent-rpms]
name=RHEL7OSP/rhel-7-server-rhscon-2-agent-rpms
gpgcheck=0
baseurl=ftp://176.121.213.151/RHEL7OSP/rhel-7-server-rhscon-2-agent-rpms
enabled=1

[RHEL7OSP-rhscon-2-installer-rpms]
name=RHEL7OSP/rhel-7-server-rhscon-2-installer-rpms
gpgcheck=0
baseurl=ftp://176.121.213.151/RHEL7OSP/rhel-7-server-rhscon-2-installer-rpms
enabled=1

[RHEL7OSP-rhscon-2-main-rpms]
name=RHEL7OSP/rhel-7-server-rhscon-2-main-rpms
gpgcheck=0
baseurl=ftp://176.121.213.151/RHEL7OSP/rhel-7-server-rhscon-2-main-rpms
enabled=1

[root@hiys ~]# vim  /etc/yum.repos.d/CentOS7-1708.repo 
[root@hiys ~]# cat  /etc/yum.repos.d/CentOS7-1708.repo
[CentOS7-1708]
name=CentOS7-1708
gpgcheck=0
baseurl=ftp://176.121.213.151/CentOS7-1708/
enabled=1
[root@hiys ~]# vim  /etc/yum.repos.d/RHEL7-extras.repo 
[root@hiys ~]# cat   /etc/yum.repos.d/RHEL7-extras.repo
[RHEL7-extras]
name=RHEL7-extras
baseurl=ftp://176.121.213.151/RHEL7-extras
gpgcheck=0
enabled=1
[root@hiys ~]# cat   /etc/yum.repos.d/rhel7.repo 
[rhel7]
name=rhel7.4
baseurl=file:///var/ftp/rhel7/
gpgcheck=0
enabled=1
[root@hiys ~]#  yum  clean all >/dev/null  &&  yum repolist |tail  -16
源标识                           源名称                                    状态
CentOS7-1708                     CentOS7-1708                              9,591
RHEL7-extras                     RHEL7-extras                                 76
RHEL7OSP-devtools-rpms           RHEL7OSP/rhel-7-server-openstack-10-devto     3
RHEL7OSP-optools-rpms            RHEL7OSP/rhel-7-server-openstack-10-optoo    99
RHEL7OSP-rhceph-2-mon-rpms       RHEL7OSP/rhel-7-server-rhceph-2-mon-rpms     41
RHEL7OSP-rhceph-2-osd-rpms       RHEL7OSP/rhel-7-server-rhceph-2-osd-rpms     28
RHEL7OSP-rhceph-2-tools-rpms     RHEL7OSP/rhel-7-server-rhceph-2-tools-rpm    35
RHEL7OSP-rhscon-2-agent-rpms     RHEL7OSP/rhel-7-server-rhscon-2-agent-rpm    19
RHEL7OSP-rhscon-2-installer-rpms RHEL7OSP/rhel-7-server-rhscon-2-installer    46
RHEL7OSP-rhscon-2-main-rpms      RHEL7OSP/rhel-7-server-rhscon-2-main-rpms    29
RHEL7OSP-rpms                    RHEL7OSP/rhel-7-server-openstack-10-rpms    680
RHEL7OSP-tools-rpms              RHEL7OSP/rhel-7-server-openstack-10-tools    84
ansible                          ansible                                      18
rhel7                            rhel7.4                                   4,986
repolist: 15,735
[root@hiys ~]# 


[root@hiys ~]# blkid  |tail  -2

/dev/sdb1: UUID="562FB3196A04A1C8" TYPE="ntfs" 

/dev/loop2: UUID="2017-09-06-10-53-42-00" LABEL="CentOS 7 x86_64" TYPE="iso9660" PTTYPE="dos" 

[root@hiys ~]# blkid  /dev/sda
/dev/sda: PTTYPE="dos" 


-----===================-- 设置语言环境 为英文  [ 3  ] ========================

[root@hiys ~]# echo  $LANG
zh_CN.UTF-8

[root@hiys ~]# LANG=en_US.UTF-8

[root@hiys ~]# echo  $LANG
en_US.UTF-8

/**
[root@hiys ~]# export  LANG="en_US.UTF-8"
[root@hiys ~]# echo  $LANG
en_US.UTF-8
***/

[root@hiys ~]# locale  ## 查看系统安装的语言包

LANG=en_US.UTF-8
LC_CTYPE="en_US.UTF-8"
........................
LC_IDENTIFICATION="en_US.UTF-8"
LC_ALL=

================================ 查看电脑 环境 是否支持 虚拟化 [ 4  ] ==================

[root@hiys ~]# cat  /etc/issue    ##查看Linux系统版本的命令
\S
Kernel \r on an \m


[root@hiys ~]# lsb_release  -a   ## 查看Linux系统版本的命令
.......................

[root@hiys ~]# cat  /etc/redhat-release   ## 查看Linux系统版本的命令
CentOS Linux release 7.4.1708 (Core) 

[root@hiys ~]# cat  /etc/centos-release
CentOS Linux release 7.4.1708 (Core) 

[root@hiys ~]# ll  /etc/issue
-rw-r--r--. 1 root root 23 8月  30 2017 /etc/issue
[root@hiys ~]# cat  /etc/issue   ##查看Linux系统版本的命令
\S
Kernel \r on an \m

[root@hiys ~]# cat  /proc/version    ## 查看Linux内核版本命令
Linux version 3.10.0-693.el7.x86_64 (builder@kbuilder.dev.centos.org) (gcc version 4.8.5 20150623 (Red Hat 4.8.5-16) (GCC) ) #1 SMP Tue Aug 22 21:09:27 UTC 2017

[root@hiys ~]# uname  -a     #查看Linux内核版本命令
Linux hiys 3.10.0-693.el7.x86_64 #1 SMP Tue Aug 22 21:09:27 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux

[root@hiys ~]# lsmod  |grep  kvm
kvm_intel             170086  0 
kvm                   566340  1 kvm_intel
irqbypass              13503  1 kvm

[root@hiys ~]# ls  /sys/module/kvm/
...............................

[root@hiys ~]# ls  /sys/module/kvm_intel/
............................

[root@hiys ~]# cat  /proc/cpuinfo   |grep  vmx |head  -1
flags		: fpu vme .................

[root@hiys ~]# sed   -n  '/vmx/p'  /proc/cpuinfo  |head  -1
flags		: fpu vme ..........monitor ds_cpl vmx smx .........

[root@hiys ~]# egrep  -o 'svm|vmx' /proc/cpuinfo  ##查看电脑是否支持 虚拟化# #-o参数(只输出匹配的部分)
vmx
vmx
vmx
vmx

========================  安装 创建 虚拟机 模版 需要的软件包 [ 5  ]============================

[root@hiys ~]# rpm  -q  qemu-kvm  libvirt  libvirt-client  libvirt-daemon  libvirt-daemon-driver-qemu \
> libguestfs-tools  libvirt-python   python-setuptools   virt-install   virt-manager \
> virt-v2v  virt-p2v  virt-viewer  bind-chroot  bind  chrony  vsftpd  \
>  bash-completion   lrzsz   tree


qemu-kvm-1.5.3-141.el7.x86_64      ## 为 kvm 提供底层仿真支持  【虚拟化平台 安装必备软件】
libvirt-3.2.0-14.el7.x86_64
libvirt-client-3.2.0-14.el7.x86_64   ## 用户端软件,提供客户端管理命令 【虚拟化平台 安装必备软件】
libvirt-daemon-3.2.0-14.el7.x86_64    ## 守护进程,管理虚拟机     【虚拟化平台 安装必备软件】
libvirt-daemon-driver-qemu-3.2.0-14.el7.x86_64   ## libvirtd 连接 qemu 的驱动  【虚拟化平台 安装必备软件】

libguestfs-tools-1.36.3-6.el7.noarch
libvirt-python-3.2.0-3.el7.x86_64
python-setuptools-0.9.8-7.el7.noarch
virt-install-1.4.1-7.el7.noarch       ## 系统安装工具 【可选功能】
virt-manager-1.4.1-7.el7.noarch       ## 图形管理工具 【可选功能】

virt-v2v-1.36.3-6.el7.x86_64        ## 虚拟机 迁移 工具【可选功能】
未安装软件包 virt-p2v                ## 物理机 迁移 工具 【可选功能】

virt-viewer-5.0-7.el7.x86_64
bind-chroot-9.9.4-50.el7.x86_64
bind-9.9.4-50.el7.x86_64
chrony-3.1-2.el7.centos.x86_64
vsftpd-3.0.2-22.el7.x86_64

bash-completion-2.1-6.el7.noarch   ## 支持table键
lrzsz-0.12.20-36.el7.x86_64        ## xshell 上传下载工具 软件包[上传rz、下载sz命令]
tree-1.6.0-10.el7.x86_64

[root@hiys ~]# yum list  |grep virt-p2v
virt-p2v-maker.x86_64                    1:1.36.3-6.el7            CentOS7-1708 

[root@hiys ~]# yum  -y install  virt-p2v
............................
没有可用软件包 virt-p2v。    ## 物理机 迁移 工具 【可选功能】
错误：无须任何处理

[root@hiys ~]# systemctl is-active  libvirtd
active
[root@hiys ~]# systemctl is-enabled  libvirtd
enabled
[root@hiys ~]# systemctl restart  libvirtd

-========================  禁止 firewalld 并且 屏蔽 防火墙服务 [ 6  ] ==============

[root@hiys ~]# systemctl is-active  firewalld
unknown
[root@hiys ~]# systemctl is-enabled  firewalld
disabled
[root@hiys ~]# systemctl  mask  firewalld  ## 屏蔽 防火墙服务 
Created symlink from /etc/systemd/system/firewalld.service to /dev/null.

[root@hiys ~]# systemctl is-enabled  firewalld
masked

[root@hiys ~]# getenforce 
Disabled
[root@hiys ~]# sed  -n  7p  /etc/sysconfig/selinux 
SELINUX=disabled

=======================   配 置 转发 DNS  [  7  ] ====================

[root@hiys ~]# rpm  -q  bind-chroot  bind  bind-utils
bind-chroot-9.9.4-50.el7.x86_64
bind-9.9.4-50.el7.x86_64
bind-utils-9.9.4-50.el7.x86_64

[root@hiys ~]# vim  /etc/named.conf 

[root@hiys ~]# cat  -n  /etc/named.conf |sed  -n  '12,22p;33,35p'
    12	options {
    13		listen-on port 53 { 192.168.1.254; };
    14	//	listen-on-v6 port 53 { ::1; };
    15		directory 	"/var/named";
    16		dump-file 	"/var/named/data/cache_dump.db";
    17		statistics-file "/var/named/data/named_stats.txt";
    18		memstatistics-file "/var/named/data/named_mem_stats.txt";
    19		allow-query     { any; };
    20	        forwarders   { 114.114.114.114; };
    21		/* 
    22		 - If you are building an AUTHORITATIVE DNS server, do NOT enable recursion.
    33		dnssec-enable no;   ## 关闭dnssec 服务 , 不支持DNSSEC开关
    34		dnssec-validation no; ## 是否进行DNSSEC确认开关 ,no
    35	
[root@hiys ~]# 

[root@hiys ~]# systemctl  restart  named
[root@hiys ~]# systemctl  enable   named
[root@hiys ~]# systemctl is-active  named
active
[root@hiys ~]# systemctl  is-enabled  named
enabled

[root@hiys ~]# cat  /etc/resolv.conf 
# Generated by NetworkManager
search tedu.com
nameserver 176.121.0.100

[root@hiys ~]# cat  /etc/resolv.conf 
# Generated by NetworkManager
nameserver 176.121.0.100

[root@hiys ~]# nslookup  tedu.com
.....................

[root@hiys ~]# dig  +trace  ntp.aliyun.com
.....................

[root@hiys ~]# dig  ntp.aliyun.com
..............

[root@hiys ~]# nslookup  ntp.aliyun.com
Server:		176.121.0.100
Address:	176.121.0.100#53

Non-authoritative answer:
Name:	ntp.aliyun.com
Address: 203.107.6.88

==================== 配置  时间服务 [  8  ] ==================

[root@hiys ~]# rpm  -q  chrony
chrony-3.1-2.el7.centos.x86_64
[root@hiys ~]# vim  /etc/chrony.conf 
[root@hiys ~]# sed  -n  '3,11p'  /etc/chrony.conf

#server 0.centos.pool.ntp.org iburst
#server 1.centos.pool.ntp.org iburst
#server 2.centos.pool.ntp.org iburst
#server 3.centos.pool.ntp.org iburst
server  ntp.aliyun.com iburst

bindacqaddress  0.0.0.0  ##  该指令 允许 你 限制 chronyd 监听 哪个网络接口的命令包（由chronyc执行）。
                            ### 该指令通过cmddeny机制提供了一个除上述限制以外可用的额外的访问控制等级

#allow  0/0  ## 允许所有客户端主机

allow   all  ## 允许所有客户端主机

cmdallow 127.0.0.1   ## 指定哪个IP地址或哪台主机可以通过chronyd使用控制命令

[root@hiys ~]# systemctl restart  chronyd

## allow   all 区别  allow  0/0  /etc/chrony.conf

[root@hiys ~]# systemctl  is-enabled  chronyd
enabled

[root@hiys ~]# systemctl  is-active  chronyd
active

[root@hiys ~]# chronyc  sources  -v    # # 查看时间同步源* 203.107.6.88
210 Number of sources = 1

  .-- Source mode  '^' = server, '=' = peer, '#' = local clock.
 / .- Source state '*' = current synced, '+' = combined , '-' = not combined,
| /   '?' = unreachable, 'x' = time may be in error, '~' = time too variable.
||                                                 .- xxxx [ yyyy ] +/- zzzz
||      Reachability register (octal) -.           |  xxxx = adjusted offset,
||      Log2(Polling interval) --.      |          |  yyyy = measured offset,
||                                \     |          |  zzzz = estimated error.
||                                 |    |           \
MS Name/IP address         Stratum Poll Reach LastRx Last sample               
===============================================================================
^* 203.107.6.88                  2   6    17    34   +281us[+4512us] +/-   34ms

[root@hiys ~]# chronyc  sourcestats  -v    ##  #查看同步状态
210 Number of sources = 1
                             .- Number of sample points in measurement set.
                            /    .- Number of residual runs with same sign.
                           |    /    .- Length of measurement set (time).
                           |   |    /      .- Est. clock freq error (ppm).
                           |   |   |      /           .- Est. error in freq.
                           |   |   |     |           /         .- Est. offset.
                           |   |   |     |          |          |   On the -.
                           |   |   |     |          |          |   samples. \
                           |   |   |     |          |          |             |
Name/IP Address            NP  NR  Span  Frequency  Freq Skew  Offset  Std Dev
==============================================================================
203.107.6.88                4   3     6   +575.789   9923.880    +35ms  1415us


========================  真机 设置 ssh  免 询问 登陆   [  9   ]  =================

[root@hiys ~]# vim  /etc/ssh/ssh_config 

 41   Port 22

 58 Host *
 59         GSSAPIAuthentication   yes
 60         StrictHostKeyChecking  no

[root@hiys ~]# cat  -n  /etc/ssh/ssh_config  |sed  -n '41p;58,60p'
    41	  Port 22
    58	Host *
    59		GSSAPIAuthentication   yes
    60	        StrictHostKeyChecking  no

[root@hiys ~]# systemctl  is-enabled  sshd
enabled
[root@hiys ~]# systemctl  restart   sshd
[root@hiys ~]# systemctl  is-active  sshd
active
======================   虚拟网络 命令 常用 =====================

[root@hiys ~]# virsh  net-autostart --disable  vbr
网络vbr取消标记为自动启动

[root@hiys ~]# virsh  net-autostart --disable  vbr2
网络vbr2取消标记为自动启动

[root@hiys ~]# virsh  net-list  --all
 名称                      状态     自动开始    持久
----------------------------------------------------------
 default              活动     是           是
 private1             活动     是           是
 private2             活动     是           是
 public1              活动     是           是
 public2              活动     是           是
 rhce                 活动     是           是
 vbr                  活动     否           是
 vbr2                 活动     否           是

[root@hiys ~]# virsh  net-destroy   vbr
网络 vbr 被删除

[root@hiys ~]# virsh  net-destroy   vbr2
网络 vbr2 被删除

[root@hiys ~]# virsh  net-list  --all
 名称               状态          自动开始      持久
----------------------------------------------------------
 default              活动     是           是
 private1             活动     是           是
 private2             活动     是           是
 public1              活动     是           是
 public2              活动     是           是
 rhce                 活动     是           是
 vbr                  不活跃  否           是
 vbr2                 不活跃  否           是

[root@hiys ~]# ls  /etc/libvirt/qemu/networks/
autostart    private1.xml  public1.xml  rhce.xml  vbr.xml
default.xml  private2.xml  public2.xml  vbr2.xml

[root@hiys ~]# virsh net-undefine  vbr   ##取消定义一个非活跃的网络 vbr
网络 vbr 已经被取消定义

[root@hiys ~]# virsh net-undefine  vbr2  ## 取消定义一个非活跃的网络 vbr2
网络 vbr2 已经被取消定义

[root@hiys ~]# ls  /etc/libvirt/qemu/networks/
autostart  default.xml  private1.xml  private2.xml  public1.xml  public2.xml  rhce.xml

[root@hiys ~]# virsh  net-list  --all
 名称               状态     自动开始  持久
----------------------------------------------------------
 default              活动     是           是
 private1             活动     是           是
 private2             活动     是           是
 public1              活动     是           是
 public2              活动     是           是
 rhce                 活动     是           是

[root@hiys ~]# virsh nodeinfo

CPU 型号：        x86_64
CPU：               4
CPU 频率：        899 MHz
CPU socket：        1
每个 socket 的内核数： 4
每个内核的线程数： 1
NUMA 单元：       1
内存大小：      16687548 KiB

==================  创建  虚拟网络  vbr   vbr1  private2  [ 10 ] ===========================

vbr     :   inet 192.168.0  .254  --eth0
vbr1    :   inet 192.168.1  .254  --eth1
private2:   inet 192.168.2  .254  --eth2

[root@hiys ~]# cd  /etc/libvirt/qemu/networks/

[root@hiys networks]# ls
autostart  default.xml  private1.xml  private2.xml  public1.xml  public2.xml  rhce.xml

[root@hiys networks]# vim  /etc/libvirt/qemu/networks/vbr.xml

[root@hiys networks]# cat  /etc/libvirt/qemu/networks/vbr.xml

<network>
  <name>vbr</name>
  <forward mode='nat'>
  </forward>
  <bridge name='vbr' stp='on' delay='0'/>
  <domain name='vbr'/>
  <ip address='192.168.0.254' netmask='255.255.255.0'>
    <dhcp>
      <range start='192.168.0.100' end='192.168.0.200'/>
    </dhcp>
  </ip>
</network>

[root@hiys networks]# cp  /etc/libvirt/qemu/networks/vbr.xml  /etc/libvirt/qemu/networks/vbr1.xml

[root@hiys networks]# vim  /etc/libvirt/qemu/networks/vbr1.xml

[root@hiys networks]# cat  /etc/libvirt/qemu/networks/vbr1.xml

<network>
  <name>vbr1</name>
  <forward mode='nat'>
  </forward>
  <bridge name='vbr1' stp='on' delay='0'/>
  <domain name='vbr1'/>
  <ip address='192.168.1.254' netmask='255.255.255.0'>
    <dhcp>
      <range start='192.168.1.100' end='192.168.1.200'/>
    </dhcp>
  </ip>
</network>

[root@hiys networks]# ls
autostart  default.xml  private1.xml  private2.xml  public1.xml  public2.xml  rhce.xml  vbr1.xml  vbr.xml

[root@hiys networks]# virsh  net-define  vbr.xml 
Network vbr defined from vbr.xml

[root@hiys networks]# virsh  net-define  vbr1.xml 
Network vbr1 defined from vbr1.xml

[root@hiys networks]# virsh  net-autostart  vbr
Network vbr marked as autostarted

[root@hiys networks]# virsh  net-autostart  vbr1
Network vbr1 marked as autostarted

[root@hiys networks]# virsh  net-start  vbr
Network vbr started

[root@hiys networks]# virsh  net-start  vbr1
Network vbr1 started

[root@hiys networks]# ifconfig vbr ;ifconfig vbr1

vbr: flags=4099<UP,BROADCAST,MULTICAST>  mtu 1500
        inet 192.168.0.254  netmask 255.255.255.0  broadcast 192.168.0.255
        ether 52:54:00:ea:38:40  txqueuelen 1000  (Ethernet)
..........................

vbr1: flags=4099<UP,BROADCAST,MULTICAST>  mtu 1500
        inet 192.168.1.254  netmask 255.255.255.0  broadcast 192.168.1.255
        ether 52:54:00:81:da:cc  txqueuelen 1000  (Ethernet)
..................................

[root@hiys networks]# ifconfig  private2

private2: flags=4099<UP,BROADCAST,MULTICAST>  mtu 1500
        inet 192.168.2.254  netmask 255.255.255.0  broadcast 192.168.2.255
        ether 52:54:00:f8:f9:d7  txqueuelen 1000  (Ethernet)
..........................................

[root@hiys networks]# pwd
/etc/libvirt/qemu/networks

[root@hiys networks]# cd

[root@hiys ~]# virsh  -c  qemu:///system net-dumpxml  vbr   ##虚拟网络vbr --> eth0
<network>
  <name>vbr</name>
  <uuid>4c71be3c-1f88-4e54-9101-df03f7d23865</uuid>
  <forward mode='nat'>
    <nat>
      <port start='1024' end='65535'/>
    </nat>
  </forward>
  <bridge name='vbr' stp='on' delay='0'/>
  <mac address='52:54:00:e7:9b:14'/>
  <domain name='vbr'/>
  <ip address='192.168.0.254' netmask='255.255.255.0'>
    <dhcp>
      <range start='192.168.0.100' end='192.168.0.200'/>
    </dhcp>
  </ip>
</network>

[root@hiys ~]# virsh  -c  qemu:///system net-dumpxml  vbr1  ##虚拟网络vbr1 --> eth1

[root@hiys networks]# virsh net-dumpxml  vbr1
<network>
  <name>vbr1</name>
  <uuid>4b710e74-4650-4e7f-a357-8b02187824c7</uuid>
  <forward mode='nat'>
    <nat>
      <port start='1024' end='65535'/>
    </nat>
  </forward>
  <bridge name='vbr1' stp='on' delay='0'/>
  <mac address='52:54:00:81:da:cc'/>
  <domain name='vbr1'/>
  <ip address='192.168.1.254' netmask='255.255.255.0'>
    <dhcp>
      <range start='192.168.1.100' end='192.168.1.200'/>
    </dhcp>
  </ip>
</network>


[root@hiys ~]# virsh  -c  qemu:///system net-dumpxml  private2  ##虚拟网络private2 -->  eth2
<network>
  <name>private2</name>
  <uuid>dca824f3-cdfc-4fcd-9b98-f8a46656c27d</uuid>
  <bridge name='private2' stp='on' delay='0'/>
  <mac address='52:54:00:f8:f9:d7'/>
  <domain name='private2'/>
  <ip address='192.168.2.254' netmask='255.255.255.0'>
  </ip>
</network>

============================   CentOS1708 虚拟机模版 制作  [ 11  ] ===========

[root@hiys ~]# qemu-img  create  -f  qcow2  /var/lib/libvirt/images/Seek.qcow2  3G 

Formatting '/var/lib/libvirt/images/Seek.qcow2', fmt=qcow2 size=3221225472 encryption=off cluster_size=65536 lazy_refcounts=off 

[root@hiys ~]# chmod  777  /var/lib/libvirt/images/Seek.qcow2 

[root@hiys ~]# du  -sh   /var/lib/libvirt/images/Seek.qcow2

196K	/var/lib/libvirt/images/Seek.qcow2

[root@hiys ~]# ls   /var/lib/libvirt/images/
bin      db    lost+found  Seek.qcow2             tedu-wallpaper-weekend.png  win.img
conf.d   exam  node.qcow2  Student.sh             vsftpd.conf
content  iso   qemu        tedu-wallpaper-01.png  Weekend.sh

[root@hiys ~]# ls  /var/log/libvirt/qemu/
win2008.log

[root@hiys ~]# tty
/dev/pts/0

[root@hiys ~]# echo  $LANG 
en_US.UTF-8

[root@hiys ~]# virt-manager 

/**
KDUMP 【dump整个系统的内存空间，以便于系统管理员debug分析系统挂掉的原因；
kdump专用内核，通过kexec工具load到预留的内存中，供故障引导使用】
----------------------------------------------------------
***/

==================================================================
      虚拟系统管理器                                                                                           |
-----------------------------------------------------                                                                          |
   点击菜单  文件 ---> 新建虚拟机（N）                                                        |
                                                                                                                |
生成新虚拟机                                                                                                    |

  选择  网络安装，可为 HTTP，FTP 或者 NFS

点击  前进
---------------------------------------------------------
生成新虚拟机
提供操作系统安装 URL
URL ： yum 源地址  ftp://176.121.213.151/CentOS7-1708/
           baseurl=ftp://176.121.213.151/CentOS7-1708

默认勾 上 根据安装介质 自动侦测 操作系统（U）

点击  前进
-----------------------------------------------
/*****
[root@hiys ~]# echo "1024*4" |bc
4096
[root@hiys ~]# echo  "1024*2" |bc
2048
***/
-------------------------------
生成新虚拟机

内存（M），RAM   2048 MiB
         CPU    2

点击  前进
------------------------------------------------------------

生成新虚拟机

默认勾 上 为虚拟机启用存储（E）

选择或创建自定义存储（S）
 点击 管理（M）...   /var/lib/libvirt/images/Seek.qcow2

点击  前进
------------------------------------------------------------

生成新虚拟机
名称（N）  Seek  【自定义虚拟机名称】

选择网络
    虚拟网络‘vbr’：NAT

点击 完成
----------------------------------------------------------------

WELCOME TO CENTOS 7.
选择语言必须是 英语
English        English(United States)

           点击     Continue
---------------------------------------------------------
Installation  Summary
------------------------------------------
INSTALLATION   SUMMARY

LOCALIZATION
  DATE  & TIME                   KEYBOARD
 Asia/Shanghai timezone          English(US)

LANGUAGE SUPPORT
English (United States)

SOFTWARE

INSTALLATION  SOURCE                      注意 SOFTWARE SELECTION  
ftp://176.121.213.151/CentOS7-1708/        Minimal Install
                                                        最小化安装

                                               点击  KDUMP 
                                     ---------------------------------------------------
                                       去掉 勾 Enable  kdump
                                                 点击Done
                                       ----------------------------------------------
SYSTEM
    installation  destination
 点击INSTALLATION  DESTINATION           KDUMP
                                        Kdump is disabled
            |
            |
----------------------------------    

Device Selection
 
Other  Storage  Options
选择 I will configure partitioning

点击左上角 Done

--------------------------------------------------
MANUAL  PARTITIONING


New CentOS 7 Installation


Create  new  mount  points  by clicking  the  '+' button.
New  mount points  will user the following  partitioning scheme:

选择  Standard Partition  标准分区

点击 左下角 加号 + 
-----------------------------------------
ADD   A  NEW  MOUNT  POINT

Mount  Point:   /  只选择根分区

Desired Capacity:

     点击  Add mount point 确定
------------------------------------------------------
MANUAL  PARTITIONING
点击左上角 Done  (需要点击二次）
--------------------------------------
New CentOS 7 Installation
   SYSTEM 
  /               3071 MiB
  vda1
---------------------------------------------------------
------------------------------------------------
弹出对话框 
  SUMMARY  OF  CHANGES
1   Destroy  Format    Unknow                    vda
2   Create   Format    partition  table (MSDOS)  vda
3   Create   Device    partition                 vda1
4   Create   Format     xfs             vda1          /

选择 Accept Changes
-----------------------------------------
------------------------------------------
INSTALLATION   SUMMARY


             点击 Begin Installation
----------------------------------------------------
CONFIGURATION

USER SETTINGS  

ROOT  PASSWORD              USER  CREATION
         1                   lily     1
----------------------------(需要点击二次）---------------------                                                     |
                                                                                                        |
最后点击 Reboot      [ 今后做 多网卡 模版 可以尝试 在这时候加网络网卡 ]                   |
==============================================================
[root@hiys ~]# rm   -f  /var/log/libvirt/qemu/Va{1..6}.log 

[root@hiys ~]# ll /var/log/libvirt/qemu/Seek.log 
-rw------- 1 root root 3243 Dec  4 09:05 /var/log/libvirt/qemu/Seek.log

[root@hiys ~]# ls  /var/log/libvirt/qemu/
Seek.log  win2008.log

[root@hiys ~]# tty
/dev/pts/0

-------------------=============打开 虚拟机 Seek 图形窗口 [  1  ] -----------------------------------

localhost  login: root
Password:  1

[root@localhost ~]# echo Seek > /etc/hostname

[root@localhost ~]# ls
anaconda-ks.cfg

[root@localhost ~]# yum  provides  ifconfig
.................
[root@localhost ~]# yum  -y install  net-tools   vim-enhanced

[root@localhost ~]# ifconfig  |awk '/inet /&&/192.168/{print $2}'
192.168.0.?

[root@localhost ~]#  cat  /etc/sysconfig/network-scripts/ifcfg-eth0

[root@localhost ~]# tty
/dev/tty1

[root@localhost ~]# shutdown  -h  now

[root@hiys ~]# virsh  start  Seek
Domain Seek started

---------------------------------------------------- 真机    [  2  ] ---------------------------------------
[root@hiys ~]# vim  local.repo.txt
[root@hiys ~]# cat  local.repo.txt
[CentOS7-1708]
name=CentOS7-1708
gpgcheck=0
baseurl=ftp://192.168.0.254/CentOS7-1708/
enabled=1

[docker]
name=docker
baseurl="ftp://192.168.0.254/docker"
enabled=1
gpgcheck=0

[ansible]
name=ansible
baseurl=ftp://192.168.0.254/ansible
gpgcheck=0
enabled=1
------------------------------------------------------
[root@hiys ~]# ssh  -X  192.168.0.119
Warning: Permanently added '192.168.0.119' (ECDSA) to the list of known hosts.
root@192.168.0.119's password: 1

[root@Seek ~]# tty
/dev/pts/0

[root@Seek ~]# ls
anaconda-ks.cfg

[root@Seek ~]# cat  -n  anaconda-ks.cfg 
...........................

[root@Seek ~]# ll  anaconda-ks.cfg
-rw-------. 1 root root 1459 Dec  4 09:17 anaconda-ks.cfg

[root@Seek ~]# stat  anaconda-ks.cfg
......................
/*******
Linux:root下的文件-anaconda-ks.cfg详解
系统安装的时候生成的一个文件，通过这个文件可以修改成自动安装的脚本,用于自动安装同样配置的系统.
************/

[root@Seek ~]# ifconfig 
eth0: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 1500
................................
lo: flags=73<UP,LOOPBACK,RUNNING>  mtu 65536
        inet 127.0.0.1  netmask 255.0.0.0
........................

======================虚拟机  DNS 域名解析 能上网  [  3  ]  ====================
[root@Seek ~]# echo $LANG
en_US.UTF-8
[root@Seek ~]# tty
/dev/pts/0

[root@Seek ~]# route  -n
Kernel IP routing table
Destination     Gateway         Genmask         Flags Metric Ref    Use Iface
0.0.0.0         192.168.0.254   0.0.0.0         UG    100    0        0 eth0
192.168.0.0     0.0.0.0         255.255.255.0   U     100    0        0 eth0

[root@Seek ~]# ip  route  show
default via 192.168.0.254 dev eth0 proto static metric 100 
192.168.0.0/24 dev eth0 proto kernel scope link src 192.168.0.119 metric 100 

[root@Seek ~]# hostname
Seek

[root@Seek ~]# ping  -c3  www.baidu.com
............................

=====================  配置yum源   [  4  ]  ==================

[root@Seek ~]# mkdir /etc/yum.repos.d/repo

[root@Seek ~]# mv  /etc/yum.repos.d/*.repo  /etc/yum.repos.d/repo
[root@Seek ~]# ls  /etc/yum.repos.d/
repo

[root@Seek ~]# scp  -o  StrictHostKeyChecking=no  root@192.168.0.254:/root/local.repo.txt   /etc/yum.repos.d/local.repo
..........................

[root@Seek ~]# ls  /etc/yum.repos.d/
local.repo  repo

[root@Seek ~]# cat /etc/yum.repos.d/local.repo 
[CentOS7-1708]
name=CentOS7-1708
gpgcheck=0
baseurl=ftp://192.168.0.254/CentOS7-1708/
enabled=1

[docker]
name=docker
baseurl="ftp://192.168.0.254/docker"
enabled=1
gpgcheck=0

[ansible]
name=ansible
baseurl=ftp://192.168.0.254/ansible
gpgcheck=0
enabled=1

[root@Seek ~]# yum  clean all >/dev/null && yum  repolist  |tail -5
repo id                              repo name                            status
CentOS7-1708                         CentOS7-1708                         9,591
ansible                              ansible                                 18
docker                               docker                                   2
repolist: 9,611

/*****
[root@hiys ~]# ls /var/ftp/iso/RPM-GPG-KEY-CentOS-7 
/var/ftp/iso/RPM-GPG-KEY-CentOS-7

[root@H127 ~]# rpm  --import ftp://192.168.1.254/iso/RPM-GPG-KEY-CentOS-7  ## 导入公钥 方式一
[root@H127 ~]# echo $?
0
[root@H127 ~]# lftp 192.168.1.254      ## 导入公钥 方式 2
lftp 192.168.1.254:~> ls
lftp 192.168.1.254:/> pwd
ftp://192.168.1.254/
lftp 192.168.1.254:/> cd iso/
lftp 192.168.1.254:/iso> ls
lftp 192.168.1.254:/iso> get  RPM-GPG-KEY-CentOS-7
1690 bytes transferred
lftp 192.168.1.254:/iso> exit
[root@H127 ~]# rpm  --import  RPM-GPG-KEY-CentOS-7    ## 导入公钥 方式2

****/
====================== 禁用selinux   [  5  ] ===========================

[root@Seek ~]# sed  -i  's/\(SELINUX=\)enforcing/\1disabled/' /etc/selinux/config 

[root@Seek ~]# sed  -n  7p  /etc/selinux/config
SELINUX=disabled

==================  停止 服务 NetworkManager  ===========

[root@Seek ~]# systemctl is-active   NetworkManager
active
[root@Seek ~]# systemctl is-active   network
active

[root@Seek ~]# systemctl  stop  NetworkManager    ## 与openstack 和 network 冲突

[root@Seek ~]# systemctl  is-active  NetworkManager
inactive

[root@Seek ~]# systemctl  is-active  network
active

======================== 配置网卡  ifcfg-eth0  [  6  ] ============

[root@Seek ~]# cat  /etc/sysconfig/network-scripts/ifcfg-eth0
# Generated by dracut initrd
NAME="eth0"
HWADDR="52:54:00:5b:5f:dc"
ONBOOT=yes     ## 开机自启动
NETBOOT=yes     ## 是 支持网络引导
UUID="9132dfd0-b0d5-4c2d-9dd2-33b17b52a956"
IPV6INIT=yes
BOOTPROTO=dhcp
TYPE=Ethernet

[root@Seek ~]# vim  /etc/sysconfig/network-scripts/ifcfg-eth0

[root@Seek ~]# cat  /etc/sysconfig/network-scripts/ifcfg-eth0
NAME="eth0"
DEVICE="eth0"      ## 指定设备驱动
ONBOOT=yes          ## 开机自启动
NM_CONTROLLED="no"    ## 禁用 NetworkManager 服务
TYPE=Ethernet     ## 网卡类型
BOOTPROTO=dhcp
IPV6INIT=no

/*******************************************************
# cat  /etc/sysconfig/network-scripts/ifcfg-eth0  ## 这是  动 态ip 配置

NAME="eth0"
DEVICE="eth0"
ONBOOT=yes      
NM_CONTROLLED="no"
TYPE=Ethernet
BOOTPROTO=dhcp
IPV6INIT=no

~]# cat  /etc/sysconfig/network-scripts/ifcfg-eth0  ## 这是 静态ip 配置

NAME="eth0"
DEVICE="eth0"
ONBOOT=yes
NM_CONTROLLED="no"
TYPE=Ethernet
IPV6INIT=no

BOOTPROTO="static"
IPADDR="192.168.0.1"
NETMASK="255.255.255.0"
GATEWAY="192.168.0.254"
*********************************/
======================  卸载 防火墙 与 NetworkManager  [  7  ]  ==============
[root@Seek ~]# echo $LANG
en_US.UTF-8

[root@Seek ~]# yum  -y   remove  NetworkManager-*  firewalld-*  python-firewall
....................

=================== 测试 network 能否 连接   [  8  ] ==============

[root@Seek ~]# systemctl  restart  network
[root@Seek ~]# systemctl status  network
● network.service - LSB: Bring up/down networking
   Loaded: loaded (/etc/rc.d/init.d/network; bad; vendor preset: disabled)
   Active: active (running) since Mon 2018-12-03 13:32:12 CST; 11s ago
.....................

[root@Seek ~]# reboot
..............
[root@hiys ~]# ssh  -X   192.168.0.200
root@192.168.0.200's password: 1
.........................
[root@Seek ~]# ifconfig 
eth0: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 1500
        inet 192.168.0.200  netmask 255.255.255.0  broadcast 192.168.0.255
        inet6 fe80::5054:ff:fe5b:5fdc  prefixlen 64  scopeid 0x20<link>
............................
lo: flags=73<UP,LOOPBACK,RUNNING>  mtu 65536
        inet 127.0.0.1  netmask 255.0.0.0
        inet6 ::1  prefixlen 128  scopeid 0x10<host>
..............................

[root@Seek ~]# cat  /etc/sysconfig/network-scripts/ifcfg-eth0 

NAME="eth0"
DEVICE="eth0"     ## 指定设备驱动
ONBOOT=yes
NM_CONTROLLED="no"   ## 禁用 NetworkManager 服务
TYPE=Ethernet       ## 网卡类型
BOOTPROTO=dhcp
IPV6INIT=no

[root@Seek ~]# tty
/dev/pts/0

======================虚拟机  DNS 域名解析 能上网   [  9  ] ====================

[root@Seek ~]#  ping -c2  www.baidu.com    ## 虚拟机可以上网
PING................
64 bytes from 14.215.177.38 (14.215.177.38): icmp_seq=1 ttl=54 time=7.19 ms
64 bytes from 14.215.177.38 (14.215.177.38): icmp_seq=2 ttl=54 time=7.45 ms
..................................

 ===============  虚 拟 机 设置 ssh  免 询问 登陆   [   10   ]  ================

[root@Seek ~]# ls -a
.   anaconda-ks.cfg  .bash_logout   .bashrc  .ssh     .viminfo
..  .bash_history    .bash_profile  .cshrc   .tcshrc

[root@Seek ~]# ls  .ssh/  ## StrictHostKeyChecking no  #ssh将自动把计算机的密匙加入"$HOME/.ssh/known_hosts"文件
known_hosts

[root@Seek ~]# cat  .ssh/known_hosts 
192.168.0.254 ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBPaPxCXbd6vnjaSOyyPw8GCwISPel9dwAOk5lXwvlu/8hR/al2c7CcdihhkDynKmm7W0ownroNHIrD420VMJYr8=

[root@Seek ~]# ls  /etc/ssh/
moduli       ssh_host_ecdsa_key      ssh_host_ed25519_key.pub
ssh_config   ssh_host_ecdsa_key.pub  ssh_host_rsa_key
sshd_config  ssh_host_ed25519_key    ssh_host_rsa_key.pub

/****
ssh_config和sshd_config都是ssh服务器的配置文件，二者区别在于，
前者ssh_config 是针对客户端的配置文件，
后者 sshd_config 则是针对服务端的配置文件

**********************/

================== 安装虚拟化 常用 软件包    [  11  ] ==============

[root@Seek ~]#  yum clean all >/dev/null  && yum repolist |tail -5
repo id                              repo name                            status
CentOS7-1708                         CentOS7-1708                         9,591
ansible                              ansible                                 18
docker                               docker                                   2
repolist: 9,611

[root@Seek ~]# yum  -y  install  git  vim-enhanced   net-tools  tree   lrzsz  \
> libguestfs-tools   libvirt-python    python-setuptools    virt-install   virt-manager \
> virt-v2v     virt-viewer    bind-chroot     bind     chrony   \
> cloud-utils-growpart  cloud-init    vsftpd    elinks   lftp   \
> qemu-kvm   libvirt    libvirt-client   libvirt-daemon   libvirt-daemon-driver-qemu \
> bridge-utils    bash-completion

...................
Installed:
  bash-completion.noarch 1:2.1-6.el7                                                       
  bind.x86_64 32:9.9.4-50.el7                                                              
  bind-chroot.x86_64 32:9.9.4-50.el7                                                       
  bridge-utils.x86_64 0:1.5-9.el7                                                          
  cloud-init.x86_64 0:0.7.9-9.el7.centos.2  
                                               
  cloud-utils-growpart.noarch 0:0.29-2.el7      ### 扩展分区软件cloud-utils-growpart 
  elinks.x86_64 0:0.12-0.36.pre6.el7                                                       
  git.x86_64 0:1.8.3.1-11.el7                                                              
  lftp.x86_64 0:4.4.8-8.el7_3.2                                                            
  libguestfs-tools.noarch 1:1.36.3-6.el7   
                                                
  libvirt.x86_64 0:3.2.0-14.el7                                                            
  libvirt-client.x86_64 0:3.2.0-14.el7                                                     
  libvirt-daemon.x86_64 0:3.2.0-14.el7                                                     
  libvirt-daemon-driver-qemu.x86_64 0:3.2.0-14.el7                                         
  libvirt-python.x86_64 0:3.2.0-3.el7   
                                                   
  lrzsz.x86_64 0:0.12.20-36.el7                                                            
  python-setuptools.noarch 0:0.9.8-7.el7                                                   
  qemu-kvm.x86_64 10:1.5.3-141.el7                                                         
  tree.x86_64 0:1.6.0-10.el7                                                               
  virt-install.noarch 0:1.4.1-7.el7 
                                                       
  virt-manager.noarch 0:1.4.1-7.el7                                                        
  virt-v2v.x86_64 1:1.36.3-6.el7                                                           
  virt-viewer.x86_64 0:5.0-7.el7                                                           
  vsftpd.x86_64 0:3.0.2-22.el7                                                             

Dependency Installed:
  OVMF.noarch 0:20170228-5.gitc325e41585e3.el7                                             
  PyYAML.x86_64 0:3.10-11.el7                                                              
.........................                                                     
                                                
  perl-Sys-Virt.x86_64 0:3.2.0-1.el7                                                       
..........................                                                                    
  yum-utils.noarch 0:1.1.31-42.el7                                                         

Complete!

[root@Seek ~]# rpm  -q   git   vim-enhanced   net-tools   tree          lrzsz  
  libguestfs-tools   libvirt-python   python-setuptools   virt-install  virt-manager 
  virt-v2v              virt-viewer   bind-chroot         bind          chrony  
  cloud-utils-growpart   cloud-init   vsftpd              elinks        lftp  
  qemu-kvm           libvirt          libvirt-client    libvirt-daemon  libvirt-daemon-driver-qemu 
  bridge-utils       bash-completion

git-1.8.3.1-11.el7.x86_64
vim-enhanced-7.4.160-5.el7.x86_64
net-tools-2.0-0.24.20131004git.el7.x86_64
tree-1.6.0-10.el7.x86_64 
lrzsz-0.12.20-36.el7.x86_64    ## xshell 上传下载工具 软件包[上传rz、下载sz命令]

libguestfs-tools-1.36.3-6.el7.noarch
libvirt-python-3.2.0-3.el7.x86_64
python-setuptools-0.9.8-7.el7.noarch
virt-install-1.4.1-7.el7.noarch       ## 系统安装工具 【可选功能】
virt-manager-1.4.1-7.el7.noarch       ## 图形管理工具 【可选功能】

virt-v2v-1.36.3-6.el7.x86_64     ## 虚拟机 迁移 工具【可选功能】
virt-viewer-5.0-7.el7.x86_64
bind-chroot-9.9.4-50.el7.x86_64
bind-9.9.4-50.el7.x86_64
chrony-3.1-2.el7.centos.x86_64

cloud-utils-growpart-0.29-2.el7.noarch  ### 扩展分区软件cloud-utils-growpart
cloud-init-0.7.9-9.el7.centos.2.x86_64
vsftpd-3.0.2-22.el7.x86_64
elinks-0.12-0.36.pre6.el7.x86_64
lftp-4.4.8-8.el7_3.2.x86_64

qemu-kvm-1.5.3-141.el7.x86_64   ## 为 kvm 提供底层仿真支持  【虚拟化平台 安装必备软件】
libvirt-3.2.0-14.el7.x86_64
libvirt-client-3.2.0-14.el7.x86_64   ## 用户端软件,提供客户端管理命令 【虚拟化平台 安装必备软件】
libvirt-daemon-3.2.0-14.el7.x86_64    ## 守护进程,管理虚拟机     【虚拟化平台 安装必备软件】
libvirt-daemon-driver-qemu-3.2.0-14.el7.x86_64   ## libvirtd 连接 qemu 的驱动  【虚拟化平台 安装必备软件】

bridge-utils-1.5-9.el7.x86_64       ## 虚拟 交换机 管理工具包
bash-completion-2.1-6.el7.noarch      ## 支持Tab键


[root@Seek ~]# free
              total        used        free      shared  buff/cache   available
Mem:        2048200       99072     1240968        8580      708160     1741704
Swap:             0           0           0

[root@Seek ~]# head  -6  /proc/meminfo    ## 查看内存信息
MemTotal:        2048200 kB
MemFree:         1240872 kB
MemAvailable:    1741732 kB
Buffers:            2068 kB
Cached:           610772 kB
SwapCached:            0 kB

### egrep  -o 'svm|vmx' /proc/cpuinfo  ##查看电脑是否支持 虚拟化# #-o参数(只输出匹配的部分)

[root@Seek ~]# egrep   -o  'svm|vmx'  /proc/cpuinfo

[root@Seek ~]# grep  -n   'physical id'  /proc/cpuinfo 
10:physical id	: 0
36:physical id	: 1

[root@Seek ~]# yum list |grep psmisc
psmisc.x86_64                            22.20-15.el7              @CentOS7-1708
[root@Seek ~]# yum  -y install psmisc
.....................
[root@Seek ~]# which  fuser
/usr/sbin/fuser
[root@Seek ~]# rpm  -qf  /usr/sbin/fuser
psmisc-22.20-15.el7.x86_64

========================= 检查 路由 ---  禁用空路由 -  [  12  ]=====================

[root@Seek ~]# route  -n
Kernel IP routing table
Destination     Gateway         Genmask         Flags Metric Ref    Use Iface
0.0.0.0         192.168.0.254   0.0.0.0         UG    0      0        0 eth0
169.254.0.0     0.0.0.0         255.255.0.0     U     1002   0        0 eth0
192.168.0.0     0.0.0.0         255.255.255.0   U     0      0        0 eth0

[root@Seek ~]# ip   route  show

default via 192.168.0.254 dev eth0 
169.254.0.0/16 dev eth0 scope link metric 1002 
192.168.0.0/24 dev eth0 proto kernel scope link src 192.168.0.200 

[root@Seek ~]# cat   /etc/sysconfig/network
# Created by anaconda
[root@Seek ~]# echo  "NOZEROCONF=\"yes\""  >>  /etc/sysconfig/network

[root@Seek ~]# cat   /etc/sysconfig/network
# Created by anaconda
NOZEROCONF="yes"        ## 禁用空路由

[root@Seek ~]# systemctl  restart   network

[root@Seek ~]# route  -n
Kernel IP routing table
Destination     Gateway         Genmask         Flags Metric Ref    Use Iface
0.0.0.0         192.168.0.254   0.0.0.0         UG    0      0        0 eth0
192.168.0.0     0.0.0.0         255.255.255.0   U     0      0        0 eth0

[root@Seek ~]# ip  route  show

default via 192.168.0.254 dev eth0 
192.168.0.0/24 dev eth0 proto kernel scope link src 192.168.0.200 

[root@Seek ~]# ifconfig 
eth0: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 1500
        inet 192.168.0.119  netmask 255.255.255.0  broadcast 192.168.0.255
..............................

lo: flags=73<UP,LOOPBACK,RUNNING>  mtu 65536
        inet 127.0.0.1  netmask 255.0.0.0
................................
[root@Seek ~]# ip   a
...................................
[root@Seek ~]# ip   address
...................

[root@Seek ~]# ip  address   show  
1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN qlen 1
    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
    inet 127.0.0.1/8 scope host lo
...........................
2: eth0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc pfifo_fast state UP qlen 1000
    link/ether 52:54:00:1d:ee:21 brd ff:ff:ff:ff:ff:ff
    inet 192.168.0.200/24 brd 192.168.0.255 scope global dynamic eth0
....................

[root@Seek ~]# echo $LANG   ### 注意英语环境
en_US.UTF-8
[root@Seek ~]# tty
/dev/pts/0

[root@Seek ~]# vim  /etc/resolv.conf

[root@Seek ~]# cat   /etc/resolv.conf
nameserver 192.168.0.254     ## 注意 search 必须在 nameserver 的下一行
search vbr

======================  添 加 console配置 [  13  ] =============================

[root@Seek ~]# ll  /etc/default/grub 
-rw-r--r--. 1 root root 218 Dec  4 09:17 /etc/default/grub

[root@Seek ~]# ll  /etc/sysconfig/grub 
lrwxrwxrwx. 1 root root 17 Dec  4 09:13 /etc/sysconfig/grub -> /etc/default/grub

[root@Seek ~]# cat  /etc/default/grub   ## 内核启动参数 配置文件

GRUB_TIMEOUT=5
GRUB_DISTRIBUTOR="$(sed 's, release .*$,,g' /etc/system-release)"
GRUB_DEFAULT=saved
GRUB_DISABLE_SUBMENU=true
GRUB_TERMINAL_OUTPUT="console"
GRUB_CMDLINE_LINUX="rhgb quiet"
GRUB_DISABLE_RECOVERY="true"


[root@Seek ~]# vim  /etc/default/grub

[root@Seek ~]# cat  /etc/default/grub  ## 添加串口终端
GRUB_TIMEOUT=5
GRUB_DISTRIBUTOR="$(sed 's, release .*$,,g' /etc/system-release)"
GRUB_DEFAULT=saved
GRUB_DISABLE_SUBMENU=true
GRUB_TERMINAL_OUTPUT="serial  console"         ##串口终端
GRUB_SERIAL_COMMAND="serial --unit=1 --speed=115200"    ## 串口连接速率 是 115200
GRUB_CMDLINE_LINUX="biosdevname=0 net.ifnames=0 console=tty0 console=ttyS0,115200n8" ##注意 115200n8
GRUB_DISABLE_LINUX_UUID="true"    ## 不使用uuid
GRUB_ENABLE_LINUX_LABEL="true"
GRUB_DISABLE_RECOVERY="true"


================ 重新生成grub.cfg  [ 14 ]重新生成GRUB配置并更新内核参数====================

[root@Seek ~]# ll   /etc/default/grub
-rw-r--r--. 1 root root 394 Dec  4 13:06 /etc/default/grub

[root@Seek ~]# ll  /etc/sysconfig/grub 
lrwxrwxrwx. 1 root root 17 Dec  4 09:13 /etc/sysconfig/grub -> /etc/default/grub

[root@Seek ~]# ll  /boot/grub2/grub.cfg 
-rw-r--r--. 1 root root 4071 Dec  4 09:17 /boot/grub2/grub.cfg

[root@Seek ~]# sed  -n  '100p;114p'  /boot/grub2/grub.cfg

	linux16 /boot/vmlinuz-3.10.0-693.el7.x86_64 root=UUID=cff83d0f-d6d9-46cd-9361-cd49ef30bedf ro rhgb quiet LANG=en_US.UTF-8
	linux16 /boot/vmlinuz-0-rescue-3a23bfec491445d6b8b2bafca80e9ab4 root=UUID=cff83d0f-d6d9-46cd-9361-cd49ef30bedf ro rhgb quiet


[root@Seek ~]# grub2-mkconfig  -o  /boot/grub2/grub.cfg  ## 重新生成GRUB配置并更新内核参数(是为了真机能virsh console进行管理)
........................

===================== 修改/etc/fstab 文件中 UUID 手工修改成系统设备  【 15 】============

[root@Seek ~]# tail  -3  /etc/fstab 
# See man pages fstab(5), findfs(8), mount(8) and/or blkid(8) for more info
#
UUID=cff83d0f-d6d9-46cd-9361-cd49ef30bedf /                       xfs     defaults        0 0

[root@Seek ~]# lsblk
NAME   MAJ:MIN RM SIZE RO TYPE MOUNTPOINT
vda    253:0    0   3G  0 disk 
└─vda1 253:1    0   3G  0 part /

[root@Seek ~]# blkid 
/dev/vda1: UUID="cff83d0f-d6d9-46cd-9361-cd49ef30bedf" TYPE="xfs" 


[root@Seek ~]# sed  -i  's/UUID=.*\(xfs\).*\(defaults\).*/\/dev\/vda1    \/    \1     \2    0   0/'  /etc/fstab 

[root@Seek ~]# tail   -3  /etc/fstab
# See man pages fstab(5), findfs(8), mount(8) and/or blkid(8) for more info
#
/dev/vda1    /    xfs     defaults    0   0

[root@Seek ~]# ls
anaconda-ks.cfg
[root@Seek ~]# ll  anaconda-ks.cfg 
-rw-------. 1 root root 1459 Dec  4 09:17 anaconda-ks.cfg

[root@Seek ~]# cat  -n  anaconda-ks.cfg
     1	#version=DEVEL
     2	# System authorization information
     3	auth --enableshadow --passalgo=sha512
     4	# Use network installation
     5	url --url="ftp://176.121.213.151/CentOS7-1708/"
     6	# Use graphical install
     7	graphical
     8	# Run the Setup Agent on first boot
     9	firstboot --enable
    10	ignoredisk --only-use=vda
    11	# Keyboard layouts
    12	keyboard --vckeymap=us --xlayouts='us'
    13	# System language
    14	lang en_US.UTF-8
    15	
    16	# Network information
    17	network  --bootproto=dhcp --device=eth0 --ipv6=auto --activate
    18	network  --hostname=localhost.localdomain
    19	
    20	# Root password
    21	rootpw --iscrypted $6$hrHt9RqEzRrz5TQe$2.FrvykEqp42Oqh7oryO1DMmc94OoVReHt4hOYivlATY9nNnWkW42SXXfhhEkrV/W0ZCTBsUteTVATStapSpd0
    22	# System services
    23	services --enabled="chronyd"
    24	# System timezone
    25	timezone Asia/Shanghai --isUtc
    26	user --name=lily --password=$6$KXcF7Cf8FhBPhoCt$s/IZfHbbRQ9PddHft9T/hgvx1iwkzPYJ8rVR0W5Vpd0SbG.5y9Cran4HvSa9evsE3UnNSFkUmdODYbcnni4ja0 --iscrypted --gecos="lily"
    27	# System bootloader configuration
    28	bootloader --location=mbr --boot-drive=vda
    29	# Partition clearing information
    30	clearpart --none --initlabel
    31	# Disk partitioning information
    32	part / --fstype="xfs" --ondisk=vda --size=3071
    33	
    34	%packages
    35	@^minimal
    36	@core
    37	chrony
    38	
    39	%end
    40	
    41	%addon com_redhat_kdump --disable --reserve-mb='auto'
    42	
    43	%end
    44	
    45	%anaconda
    46	pwpolicy root --minlen=6 --minquality=1 --notstrict --nochanges --notempty
    47	pwpolicy user --minlen=6 --minquality=1 --notstrict --nochanges --emptyok
    48	pwpolicy luks --minlen=6 --minquality=1 --notstrict --nochanges --notempty
    49	%end
[root@Seek ~]# 

[root@Seek ~]# reboot

==================== 测试 真机 可以 console 远程连接   【 16 】================

[root@hiys ~]# virsh  console  Seek
Connected to domain Seek
Escape character is ^]
                            回车
CentOS Linux 7 (Core)
Kernel 3.10.0-693.el7.x86_64 on an x86_64

Seek login: root
Password: 1
Last login: Mon Dec  3 13:35:53 from 192.168.0.254
[root@Seek ~]# ifconfig 
eth0: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 1500
        inet 192.168.0.119  netmask 255.255.255.0  broadcast 192.168.0.255
        inet6 fe80::5054:ff:fe5b:5fdc  prefixlen 64  scopeid 0x20<link>
................................
lo: flags=73<UP,LOOPBACK,RUNNING>  mtu 65536
        inet 127.0.0.1  netmask 255.0.0.0
        inet6 ::1  prefixlen 128  scopeid 0x10<host>
        loop  txqueuelen 1  (Local Loopback)
.........................

virbr0: flags=4099<UP,BROADCAST,MULTICAST>  mtu 1500
        inet 192.168.122.1  netmask 255.255.255.0  broadcast 192.168.122.255
        ether 52:54:00:c1:6c:55  txqueuelen 1000  (Ethernet)
...................
[root@seek ~]# route  -n
Kernel IP routing table
Destination     Gateway         Genmask         Flags Metric Ref    Use Iface
0.0.0.0         192.168.0.254   0.0.0.0         UG    0      0        0 eth0
192.168.0.0     0.0.0.0         255.255.255.0   U     0      0        0 eth0
192.168.122.0   0.0.0.0         255.255.255.0   U     0      0        0 virbr0

[root@seek ~]# ip  route  show
default via 192.168.0.254 dev eth0 
192.168.0.0/24 dev eth0 proto kernel scope link src 192.168.0.200 
192.168.122.0/24 dev virbr0 proto kernel scope link src 192.168.122.1 

[root@Seek ~]# rpm  -q  rsync
rsync-3.0.9-18.el7.x86_64

[root@seek ~]# cat   -n   /etc/ssh/ssh_config |sed  -n  '41p;58,61p'  ## 客户端ssh_config
    41	#   Port 22
    58	Host *
    59		GSSAPIAuthentication yes
    60	# If this option is set to yes then remote X11 clients will have full access
    61	# to the original X11 display. As virtually no X11 client supports the untrusted

[root@seek ~]#  cat  -n  /etc/ssh/sshd_config  |sed  -n  '17p;65p'  ## 服务端 sshd_config
    17	Port 22
    65	PasswordAuthentication no

[root@seek ~]# sed   -n   '65s/no/yes/p'   /etc/ssh/sshd_config 
PasswordAuthentication yes

[root@seek ~]# sed  -i   '65s/no/yes/'   /etc/ssh/sshd_config  ## 注意不能ssh 登陆的解决办法,服务端 '65s/no/yes/' 

[root@seek ~]# cat   -n  /etc/ssh/sshd_config |sed  -n   '17p;65p'
    17	Port 22
    65	PasswordAuthentication yes  

[root@seek ~]# systemctl restart   sshd

[root@seek ~]# systemctl is-enabled   sshd
enabled

[root@Seek ~]# echo  $LANG
en_US.UTF-8
[root@Seek ~]# tty
/dev/ttyS0

[root@Seek ~]#  Ctrl  +  ]   退出 

/*****[root@hiys ~]# ssh  -X   192.168.0.200   ## 注意不能ssh 登陆 ，下面的解决办法--->
Permission denied (publickey,gssapi-keyex,gssapi-with-mic).
******/

[root@hiys ~]# ssh  -X   192.168.0.200
root@192.168.0.200's password: 1

[root@seek ~]# tty
/dev/pts/0

[root@seek ~]# sed  -n  '17p;65p'   /etc/ssh/sshd_config 
Port 22
PasswordAuthentication yes

[root@Seek ~]# cat   /etc/resolv.conf
; generated by /usr/sbin/dhclient-script
search vbr
nameserver 192.168.0.254

[root@seek ~]# echo  -e  "nameserver 192.168.0.254\nsearch vbr" > /etc/resolv.conf

[root@seek ~]# cat  /etc/resolv.conf 
nameserver 192.168.0.254   ## 注意 search 必须在 nameserver 的下一行
search vbr

[root@Seek ~]# rpm  -qa  |grep  cloud-  ## 安装扩展分区软件

cloud-init-0.7.9-9.el7.centos.2.x86_64
cloud-utils-growpart-0.29-2.el7.noarch

[root@seek ~]# ls  /etc/sysconfig/network-scripts/
....................
[root@seek ~]# ls
anaconda-ks.cfg
[root@seek ~]# ll  anaconda-ks.cfg 
-rw-------. 1 root root 1459 Dec  4 09:17 anaconda-ks.cfg
[root@seek ~]# cat  -n  anaconda-ks.cfg
     1	#version=DEVEL
     2	# System authorization information
     3	auth --enableshadow --passalgo=sha512
     4	# Use network installation
     5	url --url="ftp://176.121.213.151/CentOS7-1708/"
     6	# Use graphical install
     7	graphical
     8	# Run the Setup Agent on first boot
     9	firstboot --enable
    10	ignoredisk --only-use=vda
    11	# Keyboard layouts
    12	keyboard --vckeymap=us --xlayouts='us'
    13	# System language
    14	lang en_US.UTF-8
    15	
    16	# Network information
    17	network  --bootproto=dhcp --device=eth0 --ipv6=auto --activate
    18	network  --hostname=localhost.localdomain
    19	
    20	# Root password
    21	rootpw --iscrypted $6$hrHt9RqEzRrz5TQe$2.FrvykEqp42Oqh7oryO1DMmc94OoVReHt4hOYivlATY9nNnWkW42SXXfhhEkrV/W0ZCTBsUteTVATStapSpd0
    22	# System services
    23	services --enabled="chronyd"
    24	# System timezone
    25	timezone Asia/Shanghai --isUtc
    26	user --name=lily --password=$6$KXcF7Cf8FhBPhoCt$s/IZfHbbRQ9PddHft9T/hgvx1iwkzPYJ8rVR0W5Vpd0SbG.5y9Cran4HvSa9evsE3UnNSFkUmdODYbcnni4ja0 --iscrypted --gecos="lily"
    27	# System bootloader configuration
    28	bootloader --location=mbr --boot-drive=vda
    29	# Partition clearing information
    30	clearpart --none --initlabel
    31	# Disk partitioning information
    32	part / --fstype="xfs" --ondisk=vda --size=3071
    33	
    34	%packages
    35	@^minimal
    36	@core
    37	chrony
    38	
    39	%end
    40	
    41	%addon com_redhat_kdump --disable --reserve-mb='auto'
    42	
    43	%end
    44	
    45	%anaconda
    46	pwpolicy root --minlen=6 --minquality=1 --notstrict --nochanges --notempty
    47	pwpolicy user --minlen=6 --minquality=1 --notstrict --nochanges --emptyok
    48	pwpolicy luks --minlen=6 --minquality=1 --notstrict --nochanges --notempty
    49	%end

[root@seek ~]# elinks   -dump  www.baidu.com  |awk 'NR>=27&&NR<32{print NR,$0}'
27                                       百度
28 
29    [39]把百度设为主页[40]关于百度[41]About  Baidu[42]百度推广
30 
31    ©2018 Baidu [43]使用百度前必读 [44]意见反馈 京ICP证030173号  [45]京公网安

[root@seek ~]# elinks   -dump  www.baidu.com  |awk 'NR>24&&NR<32{print NR"\t\t"$0}'
25		   库 [38]更多»
26		
27		                                      百度
28		
29		   [39]把百度设为主页[40]关于百度[41]About  Baidu[42]百度推广
30		
31		   ©2018 Baidu [43]使用百度前必读 [44]意见反馈 京ICP证030173号  [45]京公网安

[root@seek ~]# cat  /etc/hostname 
seek
[root@seek ~]# echo  Seek  >/etc/hostname
[root@seek ~]# cat  /etc/hostname 
Seek
[root@seek ~]# cat  /etc/resolv.conf 
nameserver 192.168.0.254
search vbr
 
[root@seek ~]# sed  -n  '17p;38p;65p'   /etc/ssh/sshd_config 
Port 22
PermitRootLogin yes
PasswordAuthentication yes


[root@seek ~]# shutdown  -h  now
Connection to 192.168.0.200 closed by remote host.
Connection to 192.168.0.200 closed.

[root@hiys ~]# which  virt-sysprep 
/usr/bin/virt-sysprep

[root@hiys ~]# rpm  -qf   /usr/bin/virt-sysprep 
libguestfs-tools-c-1.36.3-6.el7.x86_64

[root@hiys ~]# rpm  -qa  |grep  libguestfs
libguestfs-1.36.3-6.el7.x86_64
libguestfs-tools-c-1.36.3-6.el7.x86_64
libguestfs-tools-1.36.3-6.el7.noarch
libguestfs-winsupport-7.2-2.el7.x86_64

[root@hiys ~]# virt-sysprep   -d  Seek   ## 关闭虚拟机后执行信息清理工作

[   0.0] Examining the guest ...
[  19.9] Performing "abrt-data" ...
.............................
[  20.5] Setting a random seed
[  21.1] Performing "lvm-uuids" ...

[root@hiys ~]# ls  /var/log/libvirt/qemu/
guestfs-c1qm0j2pdl2cb6pt.log  Seek.log  win2008.log

[root@hiys ~]# ll  /var/log/libvirt/qemu/guestfs-c1qm0j2pdl2cb6pt.log 
-rw------- 1 root root 2604 Dec  4 14:44 /var/log/libvirt/qemu/guestfs-c1qm0j2pdl2cb6pt.log

[root@hiys ~]# ll  /var/log/libvirt/qemu/Seek.log 
-rw------- 1 root root 15656 Dec  4 14:42 /var/log/libvirt/qemu/Seek.log

[root@hiys ~]# du  -sh  /var/lib/libvirt/images/Seek.qcow2 
1.7G	/var/lib/libvirt/images/Seek.qcow2

[root@hiys ~]# ll /var/lib/libvirt/images/Seek.qcow2
-rwxrwxrwx 1 root root 1748172800 Dec  4 14:44 /var/lib/libvirt/images/Seek.qcow2

[root@hiys ~]# ls  /var/lib/libvirt/images/
bin     content  exam  lost+found  qemu        Student.sh             tedu-wallpaper-weekend.png  Weekend.sh
conf.d  db       iso   node.qcow2  Seek.qcow2  tedu-wallpaper-01.png  vsftpd.conf                 win.img

[root@hiys images]# du  -sh  /var/lib/libvirt/images/node.qcow2 
1.2G	/var/lib/libvirt/images/node.qcow2

/***[root@hiys ~]# rm  -f  /var/log/libvirt/qemu/Seek.log 
[root@hiys ~]# ls  /var/log/libvirt/qemu/
win2008.log
***/

===================== 建立 基于 Seek.qcow2  的第二个 3网卡 虚拟机模版 ===============

[root@hiys ~]# cd  /var/lib/libvirt/images/
[root@hiys images]# ls
bin     content  exam  lost+found  qemu        Student.sh             tedu-wallpaper-weekend.png  Weekend.sh
conf.d  db       iso   node.qcow2  Seek.qcow2  tedu-wallpaper-01.png  vsftpd.conf                 win.img

[root@hiys images]# qemu-img  create   -b   Seek.qcow2   -f  qcow2   VM.img   20G
..................

[root@hiys images]# cd  /etc/libvirt/qemu/

[root@hiys qemu]# ls
autostart  networks  Seek.xml  VM.xml  win2008.xml

[root@hiys qemu]# cat  VM.xml 

<domain type='kvm'>
  <name>VM</name>               ## 修改点 1
  <memory unit='GB'>4</memory>
  <currentMemory unit='GB'>2</currentMemory>
  <vcpu placement='static'>2</vcpu>
  <os>               ##系统信息
    <type arch='x86_64' machine='pc'>hvm</type>
    <boot dev='hd'/>     ##开机从哪里启动
    <bootmenu enable='yes'/>
    <bios useserial='yes'/>
  </os>
  <features>   ##硬件资源特性
    <acpi/>
    <apic/>
  </features>
  <cpu mode='host-passthrough'>
  </cpu>
  <clock offset='localtime'/>

        ## 突发事件处理定义了当发生poweroff时，直接destroy虚拟机。
    ## 当虚拟机reboot、crash的时候，会自动采用重启操作，还可以自定义。

  <on_poweroff>destroy</on_poweroff>   ##突发事件处理

  <on_reboot>restart</on_reboot>
  <on_crash>restart</on_crash>
  <devices>     ##外设资源
    <emulator>/usr/libexec/qemu-kvm</emulator>
    <disk type='file' device='disk'>    ##描述虚拟磁盘image
      <driver name='qemu' type='qcow2'/>
      <source file='/var/lib/libvirt/images/VM.img'/>    ## 修改点 2
      <target dev='vda' bus='virtio'/>
    </disk>

/****************如果要把VM.img 作为模版，则建议只有一个磁盘合适。 删除此附加虚拟磁盘disk-VM.img
    <disk type='file' device='disk'>
      <driver name='qemu' type='qcow2'/>
      <source file='/var/lib/libvirt/images/disk-VM.img'/>  ## 修改点 3
      <target dev='vda' bus='virtio'/>
    </disk>
********************************************************************/

    <interface type='bridge'>   ##虚拟网络，基于网桥
      <source bridge='vbr'/>
      <model type='virtio'/>
    </interface>
    <interface type='bridge'>
      <source bridge='vbr1'/>
      <model type='virtio'/>
    </interface>
    <interface type='bridge'>
      <source bridge='private2'/>
      <model type='virtio'/>
    </interface>
    <channel type='unix'>
      <target type='virtio' name='org.qemu.guest_agent.0'/>
    </channel>
    <serial type='pty'></serial>   ##串口信息
    <console type='pty'>
      <target type='serial'/>
    </console>
    <memballoon model='virtio'></memballoon>
  </devices>
</domain>

[root@hiys qemu]# cp  VM.xml   VM.xml.txt

[root@hiys qemu]# cat  VM.xml.txt 
<domain type='kvm'>
  <name>VM</name>
  <memory unit='GB'>4</memory>
  <currentMemory unit='GB'>2</currentMemory>
  <vcpu placement='static'>2</vcpu>
  <os>
    <type arch='x86_64' machine='pc'>hvm</type>
    <boot dev='hd'/>
    <bootmenu enable='yes'/>
    <bios useserial='yes'/>
  </os>
  <features>
    <acpi/>
    <apic/>
  </features>
  <cpu mode='host-passthrough'>
  </cpu>
  <clock offset='localtime'/>
  <on_poweroff>destroy</on_poweroff>
  <on_reboot>restart</on_reboot>
  <on_crash>restart</on_crash>
  <devices>
    <emulator>/usr/libexec/qemu-kvm</emulator>
    <disk type='file' device='disk'>
      <driver name='qemu' type='qcow2'/>
      <source file='/var/lib/libvirt/images/VM.img'/>
      <target dev='vda' bus='virtio'/>
    </disk>
    <disk type='file' device='disk'>
      <driver name='qemu' type='qcow2'/>
      <source file='/var/lib/libvirt/images/disk-VM.img'/>
      <target dev='vda' bus='virtio'/>
    </disk>
    <interface type='bridge'>
      <source bridge='vbr'/>
      <model type='virtio'/>
    </interface>
    <interface type='bridge'>
      <source bridge='vbr1'/>
      <model type='virtio'/>
    </interface>
    <interface type='bridge'>
      <source bridge='private2'/>
      <model type='virtio'/>
    </interface>
    <channel type='unix'>
      <target type='virtio' name='org.qemu.guest_agent.0'/>
    </channel>
    <serial type='pty'></serial>
    <console type='pty'>
      <target type='serial'/>
    </console>
    <memballoon model='virtio'></memballoon>
  </devices>
</domain>
[root@hiys qemu]# 

[root@hiys qemu]# vim  VM.xml

[root@hiys qemu]# cat  -n  VM.xml
     1	<domain type='kvm'>
     2	  <name>VM</name>
     3	  <memory unit='GB'>4</memory>
     4	  <currentMemory unit='GB'>2</currentMemory>
     5	  <vcpu placement='static'>2</vcpu>
     6	  <os>
     7	    <type arch='x86_64' machine='pc'>hvm</type>
     8	    <boot dev='hd'/>
     9	    <bootmenu enable='yes'/>
    10	    <bios useserial='yes'/>
    11	  </os>
    12	  <features>
    13	    <acpi/>
    14	    <apic/>
    15	  </features>
    16	  <cpu mode='host-passthrough'>
    17	  </cpu>
    18	  <clock offset='localtime'/>
    19	  <on_poweroff>destroy</on_poweroff>
    20	  <on_reboot>restart</on_reboot>
    21	  <on_crash>restart</on_crash>
    22	  <devices>
    23	    <emulator>/usr/libexec/qemu-kvm</emulator>
    24	    <disk type='file' device='disk'>
    25	      <driver name='qemu' type='qcow2'/>
    26	      <source file='/var/lib/libvirt/images/VM.img'/>
    27	      <target dev='vda' bus='virtio'/>
    28	    </disk>
    29	    <interface type='bridge'>
    30	      <source bridge='vbr'/>
    31	      <model type='virtio'/>
    32	    </interface>
    33	    <interface type='bridge'>
    34	      <source bridge='vbr1'/>
    35	      <model type='virtio'/>
    36	    </interface>
    37	    <interface type='bridge'>
    38	      <source bridge='private2'/>
    39	      <model type='virtio'/>
    40	    </interface>
    41	    <channel type='unix'>
    42	      <target type='virtio' name='org.qemu.guest_agent.0'/>
    43	    </channel>
    44	    <serial type='pty'></serial>
    45	    <console type='pty'>
    46	      <target type='serial'/>
    47	    </console>
    48	    <memballoon model='virtio'></memballoon>
    49	  </devices>
    50	</domain>

[root@hiys qemu]# virsh  net-dumpxml  private2
<network>
  <name>private2</name>
  <uuid>dca824f3-cdfc-4fcd-9b98-f8a46656c27d</uuid>
  <bridge name='private2' stp='on' delay='0'/>
  <mac address='52:54:00:f8:f9:d7'/>
  <domain name='private2'/>
  <ip address='192.168.2.254' netmask='255.255.255.0'>
  </ip>
</network>

[root@hiys qemu]# virsh  define   /etc/libvirt/qemu/VM.xml
Domain VM defined from /etc/libvirt/qemu/VM.xml

[root@hiys qemu]# virsh  start  VM
Domain VM started

[root@hiys qemu]# virsh  console  VM
Connected to domain VM
Escape character is ^]
[   74.187336] cloud-init[812]: .............

----------------------- 失败 -----------------------------





































