
[root@hiys ~]# lsblk 
NAME   MAJ:MIN RM   SIZE RO TYPE MOUNTPOINT
sda      8:0    0 931.5G  0 disk 
├─sda1   8:1    0   200G  0 part /var/lib/libvirt/images
└─sda2   8:2    0   120G  0 part /
loop0    7:0    0 935.4M  0 loop /var/ftp/ceph
loop1    7:1    0   3.8G  0 loop /var/ftp/rhel7
[root@hiys ~]# blkid  /dev/sda
/dev/sda: PTTYPE="dos" 
[root@hiys ~]# fdisk  /dev/sda

命令(输入 m 获取帮助)：p

磁盘 /dev/sda：1000.2 GB, 1000204886016 字节，1953525168 个扇区
Units = 扇区 of 1 * 512 = 512 bytes
扇区大小(逻辑/物理)：512 字节 / 4096 字节
I/O 大小(最小/最佳)：4096 字节 / 4096 字节
磁盘标签类型：dos
磁盘标识符：0x000a0f68

   设备 Boot      Start         End      Blocks   Id  System
/dev/sda1            2048   419432447   209715200   83  Linux
/dev/sda2   *   419432448   671090687   125829120   83  Linux

命令(输入 m 获取帮助)：n 
Partition type:
   p   primary (2 primary, 0 extended, 2 free)
   e   extended
Select (default p): p


磁盘 /dev/sda：1000.2 GB, 1000204886016 字节，1953525168 个扇区
Units = 扇区 of 1 * 512 = 512 bytes
扇区大小(逻辑/物理)：512 字节 / 4096 字节
I/O 大小(最小/最佳)：4096 字节 / 4096 字节
磁盘标签类型：dos
磁盘标识符：0x000a0f68

   设备 Boot      Start         End      Blocks   Id  System
/dev/sda1            2048   419432447   209715200   83  Linux
/dev/sda2   *   419432448   671090687   125829120   83  Linux

命令(输入 m 获取帮助)：n 
Partition type:
   p   primary (2 primary, 0 extended, 2 free)
   e   extended
Select (default p): p
分区号 (3,4，默认 3)：3
起始 扇区 (671090688-1953525167，默认为 671090688)：
将使用默认值 671090688
Last 扇区, +扇区 or +size{K,M,G} (671090688-1953525167，默认为 1953525167)：+100G
分区 3 已设置为 Linux 类型，大小设为 100 GiB

命令(输入 m 获取帮助)：p

磁盘 /dev/sda：1000.2 GB, 1000204886016 字节，1953525168 个扇区
Units = 扇区 of 1 * 512 = 512 bytes
扇区大小(逻辑/物理)：512 字节 / 4096 字节
I/O 大小(最小/最佳)：4096 字节 / 4096 字节
磁盘标签类型：dos
磁盘标识符：0x000a0f68

   设备 Boot      Start         End      Blocks   Id  System
/dev/sda1            2048   419432447   209715200   83  Linux
/dev/sda2   *   419432448   671090687   125829120   83  Linux
/dev/sda3       671090688   880805887   104857600   83  Linux

命令(输入 m 获取帮助)：w
The partition table has been altered!

Calling ioctl() to re-read partition table.

WARNING: Re-reading the partition table failed with error 16: 设备或资源忙.
The kernel still uses the old table. The new table will be used at
the next reboot or after you run partprobe(8) or kpartx(8)
正在同步磁盘。
[root@hiys ~]# lsblk 
NAME   MAJ:MIN RM   SIZE RO TYPE MOUNTPOINT
sda      8:0    0 931.5G  0 disk 
├─sda1   8:1    0   200G  0 part /var/lib/libvirt/images
└─sda2   8:2    0   120G  0 part /
loop0    7:0    0 935.4M  0 loop /var/ftp/ceph
loop1    7:1    0   3.8G  0 loop /var/ftp/rhel7

[root@hiys ~]# partprobe 

[root@hiys ~]# lsblk 
NAME   MAJ:MIN RM   SIZE RO TYPE MOUNTPOINT
sda      8:0    0 931.5G  0 disk 
├─sda1   8:1    0   200G  0 part /var/lib/libvirt/images
├─sda2   8:2    0   120G  0 part /
└─sda3   8:3    0   100G  0 part 
loop0    7:0    0 935.4M  0 loop /var/ftp/ceph
loop1    7:1    0   3.8G  0 loop /var/ftp/rhel7

[root@hiys ~]# blkid /dev/sda2 
/dev/sda2: UUID="987e8693-eb61-4a69-9531-0ed377b321ad" TYPE="ext4" 

[root@hiys ~]# blkid /dev/sda1
/dev/sda1: UUID="a1bc4085-ad0a-443c-9d62-00d84a1a2e3c" TYPE="ext4" 

[root@hiys ~]# blkid /dev/sda
/dev/sda: PTTYPE="dos" 

[root@hiys ~]# mkfs.ext4 /dev/sda3

mke2fs 1.42.9 (28-Dec-2013)
文件系统标签=
OS type: Linux
块大小=4096 (log=2)
分块大小=4096 (log=2)
Stride=0 blocks, Stripe width=0 blocks
6553600 inodes, 26214400 blocks
1310720 blocks (5.00%) reserved for the super user
第一个数据块=0
Maximum filesystem blocks=2174746624
800 block groups
32768 blocks per group, 32768 fragments per group
8192 inodes per group
Superblock backups stored on blocks: 
	32768, 98304, 163840, 229376, 294912, 819200, 884736, 1605632, 2654208, 
	4096000, 7962624, 11239424, 20480000, 23887872

Allocating group tables: 完成                            
正在写入inode表: 完成                            
Creating journal (32768 blocks): 完成
Writing superblocks and filesystem accounting information: 完成   

[root@hiys ~]# blkid /dev/sda3
/dev/sda3: UUID="98b2180d-352a-4f54-945f-31ab4938a442" TYPE="ext4" 

[root@hiys ~]# mkdir  /javaweb

[root@hiys ~]# lsblk 
NAME   MAJ:MIN RM   SIZE RO TYPE MOUNTPOINT
sda      8:0    0 931.5G  0 disk 
├─sda1   8:1    0   200G  0 part /var/lib/libvirt/images
├─sda2   8:2    0   120G  0 part /
└─sda3   8:3    0   100G  0 part /javaweb
loop0    7:0    0 935.4M  0 loop /var/ftp/ceph
loop1    7:1    0   3.8G  0 loop /var/ftp/rhel7

[root@hiys ~]# df -hT
文件系统           类型         容量    已用    可用   已用%   挂载点
/dev/sda2      ext4      118G   43G   70G   38% /
devtmpfs       devtmpfs  7.8G     0  7.8G    0% /dev
tmpfs          tmpfs     7.8G   11M  7.8G    1% /dev/shm
tmpfs          tmpfs     7.8G  9.0M  7.8G    1% /run
tmpfs          tmpfs     7.8G     0  7.8G    0% /sys/fs/cgroup
/dev/sda1      ext4      197G  104G   84G   56% /var/lib/libvirt/images
/dev/loop1     iso9660   3.8G  3.8G     0  100% /var/ftp/rhel7
/dev/loop0     iso9660   936M  936M     0  100% /var/ftp/ceph
tmpfs          tmpfs     1.6G   60K  1.6G    1% /run/user/0
/dev/sda3      ext4       99G   49G   45G   53% /javaweb

[root@hiys ~]# vim /etc/fstab 

[root@hiys ~]# tail -5 /etc/fstab

UUID=987e8693-eb61-4a69-9531-0ed377b321ad /                       ext4    defaults        1 1
UUID=a1bc4085-ad0a-443c-9d62-00d84a1a2e3c /var/lib/libvirt/images ext4    defaults        1 2
UUID=98b2180d-352a-4f54-945f-31ab4938a442  /javaweb               ext4    defaults       0  0
/var/lib/libvirt/images/iso/rhel-server-7.4-x86_64-dvd.iso  /var/ftp/rhel7 iso9660 defaults 0 0
/root/rhcs2.0-rhosp9-20161113-x86_64.iso  /var/ftp/ceph  iso9660  defaults 0  0

[root@hiys ~]# ls /javaweb/

[root@hiys ~]# blkid  /dev/sda1
/dev/sda1: UUID="a1bc4085-ad0a-443c-9d62-00d84a1a2e3c" TYPE="ext4" 

[root@hiys ~]# blkid  /dev/sda2
/dev/sda2: UUID="987e8693-eb61-4a69-9531-0ed377b321ad" TYPE="ext4" 

[root@hiys ~]# blkid  /dev/sda3
/dev/sda3: UUID="98b2180d-352a-4f54-945f-31ab4938a442" TYPE="ext4" 

[root@hiys ~]# mount -a

[root@hiys ~]# ls /javaweb/
lost+found
[root@hiys ~]# ls /
2018  boot  content  etc   iso      lib    lost+found  mnt  proc    root  sbin  sys  usr
bin   ceph  dev      home  javaweb  lib64  media       opt  public  run   srv   tmp  var

[root@hiys ~]# ls /var/lib/libvirt/images/
bin      exam        rh7_node10.img  rh7_node3.img  rh7_node7.img  tedu-wallpaper-01.png
conf.d   iso         rh7_node11.img  rh7_node4.img  rh7_node8.img  tedu-wallpaper-weekend.png
content  lost+found  rh7_node17.img  rh7_node5.img  rh7_node9.img  vsftpd.conf
db       qemu        rh7_node2.img   rh7_node6.img  Student.sh     Weekend.sh

[root@hiys ~]# ls /2018/
2015-10-12  AngularJs   E盘          handbook     JSD_code                         海龙.jpg
2015-11-1   books       fold         Hier_folder  MySqlWRuan                       简历海龙.htm
2015-6-all  ch171       foldimg      IO-FileJava  notsq                            简历预览.pdf
2015-730    C-桌面文集  F盘          Javabook     PSweb
7yue        D盘         haiLong.png  java文件     [达内-求职秀]胡海龙个人简历.doc

[root@hiys ~]# mv /2018/  /javaweb/

[root@hiys ~]# ls /2018/
ls: 无法访问/2018/: 没有那个文件或目录
[root@hiys ~]# ls /javaweb/
2018  lost+found
[root@hiys ~]# ls /javaweb/2018/
2015-10-12  AngularJs   E盘          handbook     JSD_code                         海龙.jpg
2015-11-1   books       fold         Hier_folder  MySqlWRuan                       简历海龙.htm
2015-6-all  ch171       foldimg      IO-FileJava  notsq                            简历预览.pdf
2015-730    C-桌面文集  F盘          Javabook     PSweb
7yue        D盘         haiLong.png  java文件     [达内-求职秀]胡海龙个人简历.doc
[root@hiys ~]# ls -ld /javaweb/2018/
drwxr-xr-x 25 root root 4096 11月 12 21:38 /javaweb/2018/
[root@hiys ~]# 

==========================================

[root@hiys ~]# yum repolist |tail -9
已加载插件：fastestmirror, langpacks
Loading mirror speeds from cached hostfile
源标识                               源名称                                状态
!mon                                 mon                                      41
!osd                                 osd                                      28
!rhel7                               rhel7.4                               4,986
!tools                               tools                                    33
repolist: 5,088
[root@hiys ~]# yum -y install  git |tail -9
..........................
软件包 git-1.8.3.1-11.el7.x86_64 已安装并且是最新版本
无须任何处理
[root@hiys ~]# rpm -q git
git-1.8.3.1-11.el7.x86_64

[root@hiys ~]# git clone  git://124.193.128.166/nsd1807.git
正克隆到 'nsd1807'...
remote: Counting objects: 3, done.
remote: Compressing objects: 100% (2/2), done.
remote: Total 3 (delta 0), reused 0 (delta 0)
接收对象中: 100% (3/3), done.
[root@hiys ~]# 
[root@hiys ~]# ls nsd1807/
readme.txt
[root@hiys ~]# cat nsd1807/readme.txt 
git 软件安装
yum install -y git

外地校区
git clone git://124.193.128.166/nsd1807.git

本地
git clone git://172.40.53.65/nsd1807.git

更新(必须进入 git 目录)
git  pull
[root@hiys ~]# 
[root@hiys ~]# git pull
git pull命令用于从另一个存储库或本地分支获取并集成(整合)。

git pull命令的作用是：
取回远程主机某个分支的更新，再与本地的指定分支合并，它的完整格式稍稍有点复杂。
使用语法git pull [options] [<repository> [<refspec>…]]

Shell描述将远程存储库中的更改合并到当前分支中。

在默认模式下，git pull是git fetch后跟git merge FETCH_HEAD的缩写。

更准确地说，git pull使用给定的参数运行git fetch，并调用git merge将检索到的分支头合并到当前分支中。

 使用--rebase，它运行git rebase而不是git merge。

示例以下是一些示例 -
$ git pull <远程主机名> <远程分支名>:<本地分支名>Shell
比如，要取回origin主机的next分支，与本地的master分支合并，需要写成下面这样-
$ git pull origin next:master Shell
如果远程分支(next)要与当前分支合并，则冒号后面的部分可以省略。上面命令可以简写为：$ git pull origin next
Shell上面命令表示，取回origin/next分支，再与当前分支合并。
实质上，这等同于先做git fetch，再执行git merge。$ git fetch origin
$ git merge origin/next

Shell在某些场合，Git会自动在本地分支与远程分支之间，建立一种追踪关系(tracking)。

比如，在git clone的时候，所有本地分支默认与远程主机的同名分支，建立追踪关系，
也就是说，本地的master分支自动”追踪”origin/master分支。

Git也允许手动建立追踪关系。

$ git branch --set-upstream master origin/next

Shell上面命令指定master分支追踪origin/next分支。
如果当前分支与远程分支存在追踪关系，git pull就可以省略远程分支名。

$ git pull origin
Shell上面命令表示，本地的当前分支自动与对应的origin主机”追踪分支”(remote-tracking branch)进行合并。
如果当前分支只有一个追踪分支，连远程主机名都可以省略。

$ git pull
Shell上面命令表示，当前分支自动与唯一一个追踪分支进行合并。
如果合并需要采用rebase模式，可以使用–rebase选项。
$ git pull --rebase <远程主机名> <远程分支名>:<本地分支名>
Shellgit fetch和git pull的区别
git fetch：相当于是从远程获取最新版本到本地，不会自动合并。
$ git fetch origin master
$ git log -p master..origin/master
$ git merge origin/master
Shell以上命令的含义：
 首先从远程的origin的master主分支下载最新的版本到origin/master分支上,
然后比较本地的master分支和origin/master分支的差别,
最后进行合并上述过程其实可以用以下更清晰的方式来进行：
$ git fetch origin master:tmp
$ git diff tmp 
$ git merge tmp
Shell2. git pull：相当于是从远程获取最新版本并merge到本地 git pull origin master
Shell上述命令其实相当于git fetch 和 git merge
在实际使用中，git fetch更安全一些，因为在merge前，我们可以查看更新情况，然后再决定是否合并。

[root@hiys ~]# head  -13 /javaweb/2018/java文件/汽车租赁系统/src/qqiche/Car.java
package qqiche;

public final class Car extends MotoVehicle{
private String type;


public Car() {
	super();
	// TODO Auto-generated constructor stub
}


public Car(String no, String brand,String type) {
[root@hiys ~]# 

[root@hiys ~]# lsmod |grep kvm
kvm_intel             170086  0 
kvm                   566340  1 kvm_intel ## cpu 是intel
irqbypass              13503  1 kvm
[root@hiys ~]#

[root@hiys ~]# virsh list
 Id    名称                         状态
----------------------------------------------------
 1     Vb50                           running
 2     Vb51                           running

[root@hiys ~]# ps -efww
UID        PID  PPID  C STIME TTY          TIME CMD
root         1     0  0 08:19 ?        00:00:01 /usr/lib/systemd/systemd --switched-root --system --deserialize 21
root         2     0  0 08:19 ?        00:00:00 [kthreadd]

...............................
root       617     1  0 08:19 ?        00:00:00 /usr/lib/systemd/systemd-logind
root       619     1  0 08:19 ?        00:00:00 /usr/bin/abrt-watch-log -F BUG: WARNING: at WARNING: CPU: INFO: possible recursive locking detected ernel BUG at list_del corruption list_add corruption do_IRQ: stack overflow: ear stack overflow (cur: eneral protection fault nable to handle kernel ouble fault: RTNL: assertion failed eek! page_mapcount(page) went negative! adness at NETDEV WATCHDOG ysctl table check failed : nobody cared IRQ handler type mismatch Machine Check Exception: Machine check events logged divide error: bounds: coprocessor segment overrun: invalid TSS: segment not present: invalid opcode: alignment check: stack segment: fpu exception: simd exception: iret exception: /var/log/messages -- /usr/bin/abrt-dump-oops -xtD
avahi      620   598  0 08:19 ?        00:00:00 avahi-daemon: chroot helper
root       645     1  0 08:19 ?        00:00:00 /usr/sbin/gssproxy -D


.......................
 spicevmc,id=charredir0,name=usbredir -device usb-redir,chardev=charredir0,id=redir0,bus=usb.0,port=2 -chardev spicevmc,id=charredir1,name=usbredir -device usb-redir,chardev=charredir1,id=redir1,bus=usb.0,port=3 -device virtio-balloon-pci,id=balloon0,bus=pci.0,addr=0x8 -msg timestamp=on
root      7033     2  0 10:48 ?        00:00:00 [vhost-7030]
root      7034     2  0 10:48 ?        00:00:00 [vhost-7030]
root      7035     2  0 10:48 ?        00:00:00 [vhost-7030]
root      7036     2  0 10:48 ?        00:00:00 [vhost-7030]
root      7058     2  0 10:48 ?        00:00:00 [kvm-pit/7030]
root      7130     2  0 10:48 ?        00:00:00 [kworker/0:2]
root      7164  2975  0 10:49 pts/0    00:00:00 ps -efww


查看Linux系统版本的命令（3种方法）：

1、lsb_release -a
即可列出所有版本信息：
这个命令适用于所有的Linux发行版，包括Redhat、SuSE、Debian…等发行版。

2、cat /etc/redhat-release
这种方法只适合Redhat系的Linux：

3、cat /etc/issue
此命令也适用于所有的Linux发行版。

[root@hiys ~]# cat /proc/version   #查看Linux内核版本命令
Linux version 3.10.0-693.el7.x86_64 (builder@kbuilder.dev.centos.org) (gcc version 4.8.5 20150623 (Red Hat 4.8.5-16) (GCC) ) #1 SMP Tue Aug 22 21:09:27 UTC 2017

[root@hiys ~]# uname -a  #查看Linux内核版本命令
Linux hiys 3.10.0-693.el7.x86_64 #1 SMP Tue Aug 22 21:09:27 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux
[root@hiys ~]# 

[root@hiys ~]# 安装环境    禁用selinux, 禁用防火墙
[root@hiys ~]# egrep  -o 'svm|vmx' /proc/cpuinfo  ##查看我们的电脑是否支持 虚拟化
vmx
vmx
vmx
vmx
[root@hiys ~]# yum -y install qemu-kvm libvirt libvirt-python  libguestfs-tools virt-install
[root@hiys ~]# yum -y install qemu-kvm libvirt libvirt-python  libguestfs-tools virt-install

[root@hiys ~]# rpm -q qemu-kvm libvirt libvirt-python  libguestfs-tools virt-install
qemu-kvm-1.5.3-141.el7.x86_64
libvirt-3.2.0-14.el7.x86_64
libvirt-python-3.2.0-3.el7.x86_64
libguestfs-tools-1.36.3-6.el7.noarch
virt-install-1.4.1-7.el7.noarch

[root@hiys ~]# rpm -q virt-manager
virt-manager-1.4.1-7.el7.noarch
[root@hiys ~]# 

[root@hiys ~]# virsh nodeinfo
CPU 型号：        x86_64
CPU：               4
CPU 频率：        800 MHz
CPU socket：        1
每个 socket 的内核数： 4
每个内核的线程数： 1
NUMA 单元：       1
内存大小：      16687548 KiB

[root@hiys ~]# virsh 
欢迎使用 virsh，虚拟化的交互式终端。

输入：'help' 来获得命令的帮助信息
       'quit' 退出

virsh # nodeinfo
CPU 型号：        x86_64
CPU：               4
CPU 频率：        889 MHz
CPU socket：        1
每个 socket 的内核数： 4
每个内核的线程数： 1
NUMA 单元：       1
内存大小：      16687548 KiB

virsh # quit

[root@hiys ~]# 


[root@hiys ~]#  virsh net-list
 名称               状态     自动开始  持久
----------------------------------------------------------
 default              活动     是           是
 private1             活动     是           是
 private2             活动     是           是
 public1              活动     是           是
 public2              活动     是           是
 rhce                 活动     是           是

[root@hiys ~]# virsh list --all
 Id    名称                         状态
----------------------------------------------------
 1     Vb50                           running
 2     Vb51                           running
 -     Va51                           关闭
 -     Va52                           关闭
 -     Va53                           关闭
 -     Va54                           关闭
 -     Va55                           关闭
 -     Va56                           关闭
 -     Va57                           关闭
 -     Va58                           关闭
 -     Vb52                           关闭

[root@hiys ~]# 
[root@hiys ~]#  virsh net-list --all
 名称               状态     自动开始  持久
----------------------------------------------------------
 default              活动     是           是
 private1             活动     是           是
 private2             活动     是           是
 public1              活动     是           是
 public2              活动     是           是
 rhce                 活动     是           是



[root@hiys ~]# virsh dominfo Vb50
Id:             1
名称：       Vb50
UUID:           67c02a4a-c0f7-44aa-8a05-a273f93bf5f0
OS 类型：    hvm
状态：       running
CPU：          1
CPU 时间：   60.5s
最大内存： 1048576 KiB
使用的内存： 1048576 KiB
持久：       是
自动启动： 禁用
管理的保存： 否
安全性模式： none
安全性 DOI： 0

[root@hiys ~]# virsh autostart Va51
域 Va51标记为自动开始

[root@hiys ~]# virsh autostart Vb50
域 Vb50标记为自动开始

[root@hiys ~]# virsh autostart Vb50 --disable
域 Vb50取消标记为自动开始

[root@hiys ~]# virsh autostart Vb50  --disable
域 Vb50取消标记为自动开始

[root@hiys ~]# 

[root@hiys ~]# virsh --help

virsh [options]... [<command_string>]
virsh [options]... <command> [args...]

  options:
    -c | --connect=URI      hypervisor connection URI
    -d | --debug=NUM        debug level [0-4]
    -e | --escape <char>    set escape sequence for console
    -h | --help             this help
    -k | --keepalive-interval=NUM
                            keepalive interval in seconds, 0 for disable
    -K | --keepalive-count=NUM
                            number of possible missed keepalive messages
    -l | --log=FILE         output logging to file
    -q | --quiet            quiet mode
    -r | --readonly         connect readonly
    -t | --timing           print timing information
    -v                      short version
    -V                      long version
         --version[=TYPE]   version, TYPE is short or long (default short)
  commands (non interactive mode):

 Domain Management (help keyword 'domain')
    attach-device                  从一个XML文件附加装置
    attach-disk                    附加磁盘设备
    attach-interface               获得网络界面
    autostart                      自动开始一个域
    blkdeviotune                   设定或者查询块设备 I/O 调节参数。
    blkiotune                      获取或者数值 blkio 参数
    blockcommit                    启动块提交操作。
    blockcopy                      启动块复制操作。
    blockjob                       管理活跃块操作
    blockpull                      使用其后端映像填充磁盘。
    blockresize                    创新定义域块设备大小
    change-media                   更改 CD 介质或者软盘驱动器
    console                        连接到客户会话
    cpu-baseline                   计算基线 CPU
    cpu-compare                    使用 XML 文件中描述的 CPU 与主机 CPU 进行对比
    cpu-stats                      显示域 cpu 统计数据
    create                         从一个 XML 文件创建一个域
.................................
  setvcpus                       改变虚拟 CPU 的号
    shutdown                       关闭一个域
    start                          开始一个（以前定义的）非活跃的域
    suspend                        挂起一个域
    ttyconsole                     tty 控制台
    undefine                       取消定义一个域
    update-device                  从 XML 文件中关系设备
    vcpucount                      域 vcpu 计数
    vcpuinfo                       详细的域 vcpu 信息
    vcpupin                        控制或者查询域 vcpu 亲和性
    emulatorpin                    控制火车查询域模拟器亲和性
    vncdisplay                     vnc 显示
    guestvcpus                     query or modify state of vcpu in the guest (via agent)
    setvcpu                        attach/detach vcpu or groups of threads
    domblkthreshold                set the threshold for block-threshold event for a given block device or it's backing chain element

 Domain Monitoring (help keyword 'monitor')
    domblkerror                    在块设备中显示错误
    domblkinfo                     域块设备大小信息
    domblklist                     列出所有域块
    domblkstat                     获得域设备块状态
    domcontrol                     域控制接口状态
    domif-getlink                  获取虚拟接口链接状态
    domifaddr                      Get network interfaces' addresses for a running domain
    domiflist                      列出所有域虚拟接口
    domifstat                      获得域网络接口状态
    dominfo                        域信息
    dommemstat                     获取域的内存统计
    domstate                       域状态
    domstats                       get statistics about one or multiple domains
    domtime                        domain time
    list                           列出域

 Host and Hypervisor (help keyword 'host')
    allocpages                     Manipulate pages pool size
    capabilities                   性能
    cpu-models                     CPU models
    domcapabilities                domain capabilities
    freecell                       NUMA可用内存
    freepages                      NUMA free pages
    hostname                       打印管理程序主机名
    maxvcpus                       连接 vcpu 最大值
    node-memory-tune               获取或者设定节点内存参数
    nodecpumap                     节点 cpu 映射
    nodecpustats                   输出节点的 cpu 状统计数据。
    nodeinfo                       节点信息
    nodememstats                   输出节点的内存状统计数据。
    nodesuspend                    在给定时间段挂起主机节点
    sysinfo                        输出 hypervisor sysinfo
    uri                            打印管理程序典型的URI
    version                        显示版本

 Interface (help keyword 'interface')
    iface-begin                    生成当前接口设置快照，可在今后用于提交 (iface-commit) 或者恢复 (iface-rollback)
    iface-bridge                   生成桥接设备并为其附加一个现有网络设备
    iface-commit                   提交 iface-begin 后的更改并释放恢复点
    iface-define                   define an inactive persistent physical host interface or modify an existing persistent one from an XML file
    iface-destroy                  删除物理主机接口（启用它请执行 "if-down"）
    iface-dumpxml                  XML 中的接口信息
    iface-edit                     为物理主机界面编辑 XML 配置
    iface-list                     物理主机接口列表
    iface-mac                      将接口名称转换为接口 MAC 地址
    iface-name                     将接口 MAC 地址转换为接口名称
    iface-rollback                 恢复到之前保存的使用 iface-begin 生成的更改
    iface-start                    启动物理主机接口（启用它请执行 "if-up"）
    iface-unbridge                 分离其辅助设备后取消定义桥接设备
    iface-undefine                 取消定义物理主机接口（从配置中删除）

 Network Filter (help keyword 'filter')
    nwfilter-define                使用 XML 文件定义或者更新网络过滤器
    nwfilter-dumpxml               XML 中的网络过滤器信息
    nwfilter-edit                  为网络过滤器编辑 XML 配置
    nwfilter-list                  列出网络过滤器
    nwfilter-undefine              取消定义网络过滤器

 Networking (help keyword 'network')
    net-autostart                  自动开始网络
    net-create                     从一个 XML 文件创建一个网络
    net-define                     define an inactive persistent virtual network or modify an existing persistent one from an XML file
    net-destroy                    销毁（停止）网络
    net-dhcp-leases                print lease info for a given network
    net-dumpxml                    XML 中的网络信息
    net-edit                       为网络编辑 XML 配置
    net-event                      Network Events
    net-info                       网络信息
    net-list                       列出网络
    net-name                       把一个网络UUID 转换为网络名
    net-start                      开始一个(以前定义的)不活跃的网络
    net-undefine                   undefine a persistent network
    net-update                     更新现有网络配置的部分
    net-uuid                       把一个网络名转换为网络UUID

 Node Device (help keyword 'nodedev')
    nodedev-create                 根据节点中的 XML 文件定义生成设备
    nodedev-destroy                销毁（停止）节点中的设备
    nodedev-detach                 将节点设备与其设备驱动程序分离
    nodedev-dumpxml                XML 中的节点设备详情
    nodedev-list                   这台主机中中的枚举设备
    nodedev-reattach               重新将节点设备附加到他的设备驱动程序中
    nodedev-reset                  重置节点设备
    nodedev-event                  Node Device Events

 Secret (help keyword 'secret')
    secret-define                  定义或者修改 XML 中的 secret
    secret-dumpxml                 XML 中的 secret 属性
    secret-event                   Secret Events
    secret-get-value               secret 值输出
    secret-list                    列出 secret
    secret-set-value               设定 secret 值
    secret-undefine                取消定义 secret

 Snapshot (help keyword 'snapshot')
    snapshot-create                使用 XML 生成快照
    snapshot-create-as             使用一组参数生成快照
    snapshot-current               获取或者设定当前快照
    snapshot-delete                删除域快照
    snapshot-dumpxml               为域快照转储 XML
    snapshot-edit                  编辑快照 XML
    snapshot-info                  快照信息
    snapshot-list                  为域列出快照
    snapshot-parent                获取快照的上级快照名称
    snapshot-revert                将域转换为快照

 Storage Pool (help keyword 'pool')
    find-storage-pool-sources-as   找到潜在存储池源
    find-storage-pool-sources      发现潜在存储池源
    pool-autostart                 自动启动某个池
    pool-build                     建立池
    pool-create-as                 从一组变量中创建一个池
    pool-create                    从一个 XML 文件中创建一个池
    pool-define-as                 在一组变量中定义池
    pool-define                    define an inactive persistent storage pool or modify an existing persistent one from an XML file
    pool-delete                    删除池
    pool-destroy                   销毁（删除）池
    pool-dumpxml                   XML 中的池信息
    pool-edit                      为存储池编辑 XML 配置
    pool-info                      存储池信息
    pool-list                      列出池
    pool-name                      将池 UUID 转换为池名称
    pool-refresh                   刷新池
    pool-start                     启动一个（以前定义的）非活跃的池
    pool-undefine                  取消定义一个不活跃的池
    pool-uuid                      把一个池名称转换为池 UUID
    pool-event                     Storage Pool Events

 Storage Volume (help keyword 'volume')
    vol-clone                      克隆卷。
    vol-create-as                  从一组变量中创建卷
    vol-create                     从一个 XML 文件创建一个卷
    vol-create-from                生成卷，使用另一个卷作为输入。
    vol-delete                     删除卷
    vol-download                   将卷内容下载到文件中
    vol-dumpxml                    XML 中的卷信息
    vol-info                       存储卷信息
    vol-key                        为给定密钥或者路径返回卷密钥
    vol-list                       列出卷
    vol-name                       为给定密钥或者路径返回卷名
    vol-path                       为给定密钥或者路径返回卷路径
    vol-pool                       为给定密钥或者路径返回存储池
    vol-resize                     创新定义卷大小
    vol-upload                     将文件内容上传到卷中
    vol-wipe                       擦除卷

 Virsh itself (help keyword 'virsh')
    cd                             更改当前目录
    echo                           echo 参数
    exit                           退出这个非交互式终端
    help                           打印帮助
    pwd                            输出当前目录
    quit                           退出这个非交互式终端
    connect                        连接（重新连接）到 hypervisor
  (指定 help <group> 获取组中命令的详情)

  (使用 --help <command> 来获得这个命令的详细信息)

[root@hiys ~]# 

[root@hiys ~]# LANG=zh_CN.UTF-8 virsh autostart  --help
  NAME
    autostart - 自动开始一个域

  SYNOPSIS
    autostart <domain> [--disable]

  DESCRIPTION
    设置一个域在启动时自动开始.

  OPTIONS
    [--domain] <string>  域名，id 或 uuid
    --disable        禁止自动启动


[root@hiys ~]# 



[root@hiys ~]# virsh net-autostart  default
网络default标记为自动启动

[root@hiys ~]# virsh net-autostart default --disable
网络default取消标记为自动启动

[root@hiys ~]# 

[root@H50 ~]# dd if=/dev/zero  of=./f1 bs=100M  count=10
记录了10+0 的读入
记录了10+0 的写出
1048576000字节(1.0 GB)已复制，5.57175 秒，188 MB/秒

[root@hiys ~]# ls /var/lib/libvirt/images/
bin      exam        rh7_node10.img  rh7_node3.img  rh7_node7.img  tedu-wallpaper-01.png
conf.d   iso         rh7_node11.img  rh7_node4.img  rh7_node8.img  tedu-wallpaper-weekend.png
content  lost+found  rh7_node17.img  rh7_node5.img  rh7_node9.img  vsftpd.conf
db       qemu        rh7_node2.img   rh7_node6.img  Student.sh     Weekend.sh

7564168	/var/lib/libvirt/images/rh7_node2.img
[root@hiys ~]# du -sh  /var/lib/libvirt/images/rh7_node2.img 
7.3G	/var/lib/libvirt/images/rh7_node2.img
[root@hiys ~]# 

[root@H50 ~]# dd if=/dev/zero  of=./f1 bs=100M  count=8
记录了8+0 的读入
记录了8+0 的写出
838860800字节(839 MB)已复制，4.95459 秒，169 MB/秒
[root@H50 ~]# 

[root@hiys ~]# du -sh  /var/lib/libvirt/images/rh7_node2.img 
7.3G	/var/lib/libvirt/images/rh7_node2.img

[root@hiys ~]# qemu-img info /var/lib/libvirt/images/rh7_node2.img
image: /var/lib/libvirt/images/rh7_node2.img
file format: qcow2
virtual size: 20G (21474836480 bytes)
disk size: 7.2G
cluster_size: 65536
backing file: /var/lib/libvirt/images/.rh7_template.img
Format specific information:
    compat: 1.1
    lazy refcounts: false
[root@hiys ~]# 

[root@hiys ~]# qemu-img  create  -f  qcow2   ooxx.img 100G
Formatting 'ooxx.img', fmt=qcow2 size=107374182400 encryption=off cluster_size=65536 lazy_refcounts=off 

[root@hiys ~]# du -sh ooxx.img 
196K	ooxx.img
[root@hiys ~]# 
[root@hiys ~]# virsh net-autostart  default
网络default标记为自动启动

[root@hiys ~]# virsh net-autostart default --disable
网络default取消标记为自动启动

[root@hiys ~]# virsh autostart Vb50 --disable
域 Vb50取消标记为自动开始

[root@hiys ~]# virsh autostart Vb50  --disable
域 Vb50取消标记为自动开始

[root@hiys ~]# 
[root@hiys ~]# qemu-img  create  -f  qcow2   ooxx.img 100G
Formatting 'ooxx.img', fmt=qcow2 size=107374182400 encryption=off cluster_size=65536 lazy_refcounts=off 

[root@hiys ~]# du -sh ooxx.img 
196K	ooxx.img
[root@hiys ~]# 
[root@hiys ~]#  ls ooxx.img 
ooxx.img
[root@hiys ~]# rm -rf  ooxx.img


[root@hiys ~]#  cd /var/lib/libvirt/images/;ls
bin      exam        rh7_node10.img  rh7_node3.img  rh7_node7.img  tedu-wallpaper-01.png
conf.d   iso         rh7_node11.img  rh7_node4.img  rh7_node8.img  tedu-wallpaper-weekend.png
content  lost+found  rh7_node17.img  rh7_node5.img  rh7_node9.img  vsftpd.conf
db       qemu        rh7_node2.img   rh7_node6.img  Student.sh     Weekend.sh

[root@hiys images]# qemu-img create  -f  qcow2   ooxx.img 100G

Formatting 'ooxx.img', fmt=qcow2 size=107374182400 encryption=off cluster_size=65536 lazy_refcounts=off 

[root@hiys images]# ls
bin      iso             rh7_node11.img  rh7_node5.img  Student.sh
conf.d   lost+found      rh7_node17.img  rh7_node6.img  tedu-wallpaper-01.png
content  ooxx.img        rh7_node2.img   rh7_node7.img  tedu-wallpaper-weekend.png
db       qemu            rh7_node3.img   rh7_node8.img  vsftpd.conf
exam     rh7_node10.img  rh7_node4.img   rh7_node9.img  Weekend.sh

[root@hiys images]# ls qemu/
networks  win2008.xml

[root@hiys images]# du  -sh ooxx.img 
196K	ooxx.img

[root@hiys images]# ls /etc/libvirt/qemu/
autostart  Va51.xml  Va53.xml  Va55.xml  Va57.xml  Vb50.xml  Vb52.xml
networks   Va52.xml  Va54.xml  Va56.xml  Va58.xml  Vb51.xml

[root@hiys images]# ls -a .
.               ooxx.img                    rh7_node2.img      .server.xml
..              qemu                        rh7_node3.img      Student.sh
bin             .rh254-classroom-vda.qcow2  rh7_node4.img      tedu-wallpaper-01.png
.classroom.xml  .rh254-desktop-vda.qcow2    rh7_node5.img      tedu-wallpaper-weekend.png
conf.d          .rh254-desktop-vdb.qcow2    rh7_node6.img      vsftpd.conf
content         .rh254-server-vda.qcow2     rh7_node7.img      Weekend.sh
db              .rh254-server-vdb.qcow2     rh7_node8.img      .win
.desktop.xml    .rh6_template.img           rh7_node9.img      .win2008.img
exam            rh7_node10.img              .rh7_template.img  .win2008.xml
iso             rh7_node11.img              .rhel6.xml
lost+found      rh7_node17.img              .rhel7.xml
[root@hiys images]# 
[root@hiys images]# pwd
/var/lib/libvirt/images


[root@hiys ~]# virsh -c qemu:///system
欢迎使用 virsh，虚拟化的交互式终端。

输入：'help' 来获得命令的帮助信息
       'quit' 退出

virsh # list
 Id    名称                         状态
----------------------------------------------------
 1     Vb50                           running
 2     Vb51                           running

virsh # quit

[root@hiys ~]# virsh -c qemu+ssh://192.168.4.50/system
root@192.168.4.50's password: 
欢迎使用 virsh，虚拟化的交互式终端。

输入：'help' 来获得命令的帮助信息
       'quit' 退出

virsh # list
 Id    名称                         状态
----------------------------------------------------

virsh # shutdown Vb50
错误：获得域 'Vb50' 失败
错误：未找到域: 没有与名称 'Vb50' 匹配的域

virsh # list
 Id    名称                         状态
----------------------------------------------------

virsh # quit


[root@hiys ~]# virsh -c qemu:///system
欢迎使用 virsh，虚拟化的交互式终端。

输入：'help' 来获得命令的帮助信息
       'quit' 退出

virsh # list
 Id    名称                         状态
----------------------------------------------------
 1     Vb50                           running
 2     Vb51                           running

virsh # shutdown Vb51
域 Vb51 被关闭

virsh # quit

[root@hiys ~]# virsh list
 Id    名称                         状态
----------------------------------------------------
 1     Vb50                           running
 2     Vb51                           running

[root@hiys ~]# virsh list
 Id    名称                         状态
----------------------------------------------------
 1     Vb50                           running

[root@hiys ~]# 


#vim vbr.xml
<network>
 <name>vbr</name>
 <bridge name='vbr' stp='on' delay='0'/>
 <domain name='vbr'/>
 <forward mode="nat"/>
 <ip address='192.168.1.254' netmask='255.255.255.0'>
  <dhcp>
    <range start="192.168.1.100" end="192.168.1.200"/>
  </dhcp>
 </ip>
</network>

[root@hiys ~]# ls /etc/libvirt/qemu/networks/
autostart  default.xml  private1.xml  private2.xml  public1.xml  public2.xml  rhce.xml

[root@hiys ~]# git pull
fatal: 'https//github.com/hiyest/webjava.git' does not appear to be a git repository
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.

[root@hiys ~]# cd  /etc/libvirt/qemu/networks/

[root@hiys networks]# vim vbr.xml
[root@hiys networks]# cat vbr.xml
<network>
 <name>vbr</name>
 <bridge name='vbr' stp='on' delay='0'/>
 <domain name='vbr'/>
 <forward mode="nat"/>
 <ip address='192.168.1.254' netmask='255.255.255.0'>
  <dhcp>
    <range start="192.168.1.100" end="192.168.1.200"/>
  </dhcp>
 </ip>
</network>
[root@hiys networks]# virsh net-define vbr.xml
从 vbr定义网络vbr.xml

[root@hiys networks]# virsh net-autostart vbr
网络vbr标记为自动启动

[root@hiys networks]# ifconfig |grep vbr

[root@hiys networks]# virsh net-start vbr
网络 vbr 已开始

[root@hiys networks]# ifconfig |grep vbr
vbr: flags=4099<UP,BROADCAST,MULTICAST>  mtu 1500

[root@hiys networks]# 

[root@hiys networks]# 

[root@hiys networks]# virsh net-list
 名称               状态     自动开始  持久
----------------------------------------------------------
 default              活动     否           是
 private1             活动     是           是
 private2             活动     是           是
 public1              活动     是           是
 public2              活动     是           是
 rhce                 活动     是           是
 vbr                  活动     是           是

[root@hiys networks]# virsh  -c qemu:///system
欢迎使用 virsh，虚拟化的交互式终端。

输入：'help' 来获得命令的帮助信息
       'quit' 退出

virsh # list
 Id    名称                         状态
----------------------------------------------------
 1     Vb50                           running

virsh # net-list
 名称               状态     自动开始  持久
----------------------------------------------------------
 default              活动     否           是
 private1             活动     是           是
 private2             活动     是           是
 public1              活动     是           是
 public2              活动     是           是
 rhce                 活动     是           是
 vbr                  活动     是           是

virsh # net-destroy  --help
  NAME
    net-destroy - 销毁（停止）网络

  SYNOPSIS
    net-destroy <network>

  DESCRIPTION
    强制停止给定网络。

  OPTIONS
    [--network] <string>  网络名或 uuid


virsh # net-destroy  public1
网络 public1 被删除

virsh # net-destroy  public2
网络 public2 被删除

virsh # net-destroy  rhce
网络 rhce 被删除

virsh # net-list
 名称               状态     自动开始  持久
----------------------------------------------------------
 default              活动     否           是
 private1             活动     是           是
 private2             活动     是           是
 vbr                  活动     是           是

virsh # net-autostart --help
  NAME
    net-autostart - 自动开始网络

  SYNOPSIS
    net-autostart <network> [--disable]

  DESCRIPTION
    设置一个网络在启动时自动开始.

  OPTIONS
    [--network] <string>  网络名或 uuid
    --disable        禁止自动启动


virsh # net-start  --help
  NAME
    net-start - 开始一个(以前定义的)不活跃的网络

  SYNOPSIS
    net-start <network>

  DESCRIPTION
    开始一个网络.

  OPTIONS
    [--network] <string>  网络名或 uuid


virsh # net-start public1
网络 public1 已开始

virsh # net-list
 名称               状态     自动开始  持久
----------------------------------------------------------
 default              活动     否           是
 private1             活动     是           是
 private2             活动     是           是
 public1              活动     是           是
 vbr                  活动     是           是

virsh # pwd
/etc/libvirt/qemu/networks

virsh # quit

[root@hiys networks]# ls autostart/
private1.xml  private2.xml  public1.xml  public2.xml  rhce.xml  vbr.xml
[root@hiys networks]# 
[root@hiys networks]# virsh list
 Id    名称                         状态
----------------------------------------------------
 1     Vb50                           running

[root@hiys networks]# virsh dominfo Vb50
Id:             1
名称：       Vb50
UUID:           67c02a4a-c0f7-44aa-8a05-a273f93bf5f0
OS 类型：    hvm
状态：       running
CPU：          1
CPU 时间：   266.9s
最大内存： 1048576 KiB
使用的内存： 1048576 KiB
持久：       是
自动启动： 禁用
管理的保存： 否
安全性模式： none
安全性 DOI： 0

[root@hiys networks]# 

[root@hiys networks]# ls
autostart  default.xml  private1.xml  private2.xml  public1.xml  public2.xml  rhce.xml  vbr.xml
[root@hiys networks]# 
[root@hiys networks]# vim vbr.xml 
[root@hiys networks]# cat vbr.xml
<!--
WARNING: THIS IS AN AUTO-GENERATED FILE. CHANGES TO IT ARE LIKELY TO BE
OVERWRITTEN AND LOST. Changes to this xml configuration should be made using:
  virsh net-edit vbr
or other application using the libvirt API.
-->

<network>
  <name>vbr</name>
  <uuid>c5a2bea8-e3dc-42ae-a4f0-16cbfede0c09</uuid>
  <forward mode='nat'/>
  <bridge name='vbr' stp='on' delay='0'/>
  <mac address='52:54:00:c1:de:29'/>
  <domain name='vbr'/>
  <ip address='192.168.1.254' netmask='255.255.255.0'>
    <dhcp>
      <range start='192.168.1.100' end='192.168.1.200'/>
    </dhcp>
  </ip>
</network>
[root@hiys networks]# 
[root@hiys networks]# virsh net-edit vbr
已编辑网络 vbr XML 配置

[root@hiys networks]# cat vbr.xml 
<!--
WARNING: THIS IS AN AUTO-GENERATED FILE. CHANGES TO IT ARE LIKELY TO BE
OVERWRITTEN AND LOST. Changes to this xml configuration should be made using:
  virsh net-edit vbr
or other application using the libvirt API.
-->

<network>
  <name>vbr</name>
  <uuid>c5a2bea8-e3dc-42ae-a4f0-16cbfede0c09</uuid>
  <forward mode='nat'/>
  <bridge name='vbr' stp='on' delay='0'/>
  <mac address='52:54:00:c1:de:29'/>
  <domain name='vbr'/>
  <ip address='192.168.1.254' netmask='255.255.255.0'>
    <dhcp>
      <range start='192.168.1.99' end='192.168.1.200'/>
    </dhcp>
  </ip>
</network>
[root@hiys networks]# 
[root@hiys networks]# ls 
autostart  default.xml  node.xml  private1.xml  private2.xml  public1.xml  public2.xml  rhce.xml  vbr.xml
[root@hiys networks]# vim node.xml 
[root@hiys networks]# cat node.xml
<domain type='kvm'>
  <name>node</name>
  <memory unit='KB'>2097152</memory>
  <currentMemory unit='KB'>2097152</currentMemory>
  <vcpu placement='static'>2</vcpu>
  <os>
    <type arch='x86_64' machine='pc'>hvm</type>
    <boot dev='hd'/>
    <bootmenu enable='yes'/>
    <bios useserial='yes'/>
  </os>
  <features>
    <acpi/>
    <apic/>
  </features>
  <cpu mode='host-passthrough'>
  </cpu>
  <clock offset='localtime'/>
  <on_poweroff>destroy</on_poweroff>
  <on_reboot>restart</on_reboot>
  <on_crash>restart</on_crash>
  <devices>
    <emulator>/usr/libexec/qemu-kvm</emulator>
    <disk type='file' device='disk'>
      <driver name='qemu' type='qcow2'/>
      <source file='/var/lib/libvirt/images/node.img'/>
      <target dev='vda' bus='virtio'/>
    </disk>
    <disk type='file' device='disk'>
      <driver name='qemu' type='qcow2'/>
      <source file='/var/lib/libvirt/images/node1.img'/>
      <target dev='vda1' bus='virtio'/>
    </disk>
    <interface type='bridge'>
      <source bridge='vbr'/>
      <model type='virtio'/>
    </interface>
    <channel type='unix'>
      <target type='virtio' name='org.qemu.guest_agent.0'/>
    </channel>
    <serial type='pty'></serial>
    <console type='pty'>
      <target type='serial'/>
    </console>
    <memballoon model='virtio'></memballoon>
  </devices>
</domain>
[root@hiys networks]# pwd
/etc/libvirt/qemu/networks
[root@hiys networks]# 



















